{"version":3,"sources":["../Workbox.mjs","../_version.mjs","../messageSW.mjs","../../workbox-core/_version.mjs","../../workbox-core/_private/Deferred.mjs","../utils/urlsMatch.mjs","../utils/WorkboxEvent.mjs","../utils/EventTargetShim.mjs","config.js","browser.js","../node_modules/filer/dist/filer.min.js","../node_modules/flatten/index.js","../../../../../.nvm/versions/node/v13.3.0/lib/node_modules/parcel-bundler/node_modules/process/browser.js","../node_modules/run-parallel/index.js","../node_modules/drag-drop/index.js","filesystem.js","server.js","../src/BufferLine.ts","../src/BufferReflow.ts","../../src/common/Lifecycle.ts","../../src/common/EventEmitter.ts","../../src/common/CircularList.ts","../../../src/renderer/atlas/Types.ts","../src/Buffer.ts","../src/BufferSet.ts","../src/CompositionHelper.ts","../../src/ui/Lifecycle.ts","../src/Viewport.ts","../../src/ui/Clipboard.ts","../../../src/common/data/EscapeSequences.ts","../../../src/core/data/Charsets.ts","../../src/common/TypedArrayUtils.ts","../src/CharWidth.ts","../../../src/core/input/TextDecoder.ts","../src/EscapeSequenceParser.ts","../src/InputHandler.ts","../../src/renderer/GridCache.ts","../../../src/renderer/atlas/CharAtlasUtils.ts","../../../src/renderer/atlas/BaseCharAtlas.ts","../../src/renderer/ColorManager.ts","../../src/core/Platform.ts","../../../src/renderer/atlas/CharAtlasGenerator.ts","../../../src/renderer/atlas/LRUMap.ts","../../../src/renderer/atlas/DynamicCharAtlas.ts","../../../src/renderer/atlas/NoneCharAtlas.ts","../../../src/renderer/atlas/StaticCharAtlas.ts","../../../src/renderer/atlas/CharAtlasCache.ts","../../src/renderer/BaseRenderLayer.ts","../../src/renderer/TextRenderLayer.ts","../../src/renderer/SelectionRenderLayer.ts","../../src/renderer/CursorRenderLayer.ts","../../src/renderer/LinkRenderLayer.ts","../../src/ui/RenderDebouncer.ts","../../src/ui/ScreenDprMonitor.ts","../../src/renderer/CharacterJoinerRegistry.ts","../../src/renderer/Renderer.ts","../../src/ui/MouseZoneManager.ts","../src/Linkifier.ts","../../src/ui/MouseHelper.ts","../src/SelectionModel.ts","../../src/handlers/AltClickHandler.ts","../src/SelectionManager.ts","../../src/ui/CharMeasure.ts","../src/Strings.ts","../src/SoundManager.ts","../src/AccessibilityManager.ts","../../../src/renderer/dom/DomRendererRowFactory.ts","../../../src/renderer/dom/DomRenderer.ts","../../../src/core/input/Keyboard.ts","../../src/common/Clone.ts","../src/Terminal.ts","../../src/public/Terminal.ts","../../../src/addons/fit/fit.ts","../node_modules/v86/build/libv86.js","cache.js","vm.js","terminal.js","index.js"],"names":["self","_","e","messageSW","sw","data","Promise","resolve","messageChannel","MessageChannel","port1","onmessage","evt","postMessage","port2","Deferred","promise","reject","_this","urlsMatch","url1","url2","URL","location","href","WorkboxEvent","type","props","Object","assign","this","f","args","i","arguments","length","apply","value","then","direct","Workbox","scriptURL","registerOptions","_scriptURL","_registerOptions","_updateFoundCount","_swDeferred","_activeDeferred","_controllingDeferred","_onMessage","bind","_onStateChange","_onUpdateFound","_onControllerChange","register","result","immediate","_isUpdate","Boolean","navigator","serviceWorker","controller","_compatibleControllingSW","_this2","_getControllingSWIfCompatible","_registerScript","_registration","_sw","_reportWindowReady","addEventListener","once","waitingSW","waiting","dispatchEvent","wasWaitingBeforeRegister","_broadcastChannel","BroadcastChannel","document","readyState","res","getSW","body","recover","_this5","reg","_registrationTime","performance","now","error","meta","installingSW","installing","_externalSW","removeEventListener","originalEvent","target","state","isExternal","eventPrefix","eventProps","isUpdate","_waitingTimeout","setTimeout","_this6","clearTimeout","_eventListenerRegistry","listener","_getEventListenersByType","add","delete","event","forEach","Set","pathname","window","basename","replace","webRoot","module","exports","fsRoot","stateUrl","vmStateCache","molokaiTheme","background","cursor","foreground","black","blue","brightBlack","brightBlue","brightCyan","brightGreen","brightMagenta","brightRed","brightWhite","brightYellow","cyan","green","magenta","red","white","yellow","defaultEmulatorOptions","memory_size","vga_memory_size","bios","url","vga_bios","cdrom","disable_mouse","disable_keyboard","disable_speaker","autostart","require","start","iframe","querySelector","iframeWindow","contentWindow","goHome","src","onclick","preventDefault","history","back","forward","reload","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","call","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","Array","push","prototype","title","env","argv","version","versions","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","fs","Path","Buffer","sh","Shell","dragDrop","install","readme","writeFile","err","console","path","info","browser","filesystem","fixFsUrls","links","querySelectorAll","link","innerHTML","a","createElement","appendChild","log","wb","encodeURIComponent","controlling","server","getVMStateUrl","getState","caches","open","cache","match","hasState","response","saveState","blob","Blob","Uint8Array","Response","status","statusText","headers","Headers","append","size","request","Request","method","put","catch","V86Starter","prompt","getVMStartOptions","options","create","emulator","boot","hasCachedVM","warmBoot","term","message","coldBoot","resume","suspend","updatePowerUI","is_running","stop","isPlaying","startTerminal","reset","writeln","write","key","serial0_send","add_listener","char","storeInitialStateOnBoot","arrayBuffer","createObjectURL","initial_state","waitForPrompt","serialBuffer","currentRow","screenBuffer","handleScreenCharData","row","col","join","String","fromCharCode","handleSerialCharData","endsWith","remove_listener","clear","save_state","Terminal","fit","applyAddon","vm","createTerm","theme","getElementById","isInactive","elem","classList","contains","focus","terminal"],"mappings":"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AAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,MAAA,CAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,IAAA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,KAAA,IAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,IAAA,GAAA,MAAA,IAAA,IAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,MAAA,KAAA,IAAA,GAAA,KAAA,KAAA,GAAA,EAAA,KAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,IAAA,GAAA,IAAA,IAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IACA,IAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,GAAA,SAAA,EAAA,QAAA,MAAA,SAAA,SAAA,GAAA,MAAA,kBAAA,EAAA,KAAA,KACA,IAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GAEA,UAAA,GAAA,IACA,EAAA,UAAA,GAAA,EAAA,EAAA,aAAA,EAAA,EAAA,WAAA,EAAA,EAAA,WAAA,SAAA,IAAA,OAAA,EAAA,oBAAA,WAAA,WAAA,SAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,MAAA,IAAA,WAAA,8BAAA,OAAA,EAAA,qBAAA,EAAA,IAAA,WAAA,IAAA,UAAA,EAAA,WAAA,OAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,qBAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,MAAA,IAAA,MAAA,qEAAA,OAAA,EAAA,KAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,MAAA,IAAA,UAAA,yCAAA,MAAA,oBAAA,aAAA,aAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,WAAA,EAAA,GAAA,EAAA,WAAA,EAAA,MAAA,IAAA,WAAA,6BAAA,GAAA,EAAA,WAAA,GAAA,GAAA,GAAA,MAAA,IAAA,WAAA,6BAAA,OAAA,OAAA,IAAA,QAAA,IAAA,EAAA,IAAA,WAAA,QAAA,IAAA,EAAA,IAAA,WAAA,EAAA,GAAA,IAAA,WAAA,EAAA,EAAA,GAAA,EAAA,qBAAA,EAAA,GAAA,UAAA,EAAA,UAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,iBAAA,GAAA,KAAA,IAAA,EAAA,SAAA,EAAA,WAAA,GAAA,MAAA,IAAA,UAAA,8CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,MAAA,IAAA,UAAA,oCAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,wCAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,oBAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,SAAA,GAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,KAAA,EAAA,EAAA,EAAA,IAAA,OAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,CAAA,GAAA,oBAAA,aAAA,EAAA,kBAAA,aAAA,WAAA,EAAA,MAAA,iBAAA,EAAA,QAAA,SAAA,GAAA,OAAA,GAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MAAA,OAAA,EAAA,EAAA,EAAA,MAAA,MAAA,IAAA,UAAA,sFAAA,SAAA,EAAA,GAAA,GAAA,GAAA,IAAA,MAAA,IAAA,WAAA,0DAAA,IAAA,SAAA,IAAA,UAAA,OAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,SAAA,GAAA,OAAA,EAAA,OAAA,GAAA,oBAAA,aAAA,mBAAA,YAAA,SAAA,YAAA,OAAA,IAAA,aAAA,aAAA,OAAA,EAAA,WAAA,iBAAA,IAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,OAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,IAAA,GAAA,IAAA,OAAA,GAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,OAAA,EAAA,IAAA,OAAA,IAAA,QAAA,UAAA,EAAA,OAAA,EAAA,GAAA,OAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,OAAA,EAAA,EAAA,IAAA,MAAA,OAAA,IAAA,EAAA,IAAA,SAAA,OAAA,EAAA,GAAA,OAAA,QAAA,GAAA,EAAA,OAAA,EAAA,GAAA,OAAA,GAAA,GAAA,GAAA,cAAA,GAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,OAAA,OAAA,EAAA,GAAA,iBAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,WAAA,GAAA,aAAA,GAAA,YAAA,GAAA,EAAA,MAAA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,IAAA,EAAA,EAAA,OAAA,GAAA,GAAA,EAAA,OAAA,CAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,OAAA,OAAA,GAAA,EAAA,EAAA,CAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,iBAAA,IAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,GAAA,OAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,OAAA,GAAA,IAAA,EAAA,qBAAA,mBAAA,WAAA,UAAA,QAAA,EAAA,WAAA,UAAA,QAAA,KAAA,EAAA,EAAA,GAAA,WAAA,UAAA,YAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAAA,MAAA,IAAA,UAAA,wCAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,QAAA,IAAA,IAAA,UAAA,EAAA,OAAA,GAAA,gBAAA,UAAA,GAAA,YAAA,GAAA,aAAA,GAAA,CAAA,GAAA,EAAA,OAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,aAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAAA,IAAA,IAAA,GAAA,EAAA,GAAA,GAAA,OAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAAA,CAAA,IAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,MAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,UAAA,sBAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,IAAA,EAAA,SAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,GAAA,MAAA,GAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,SAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,KAAA,IAAA,EAAA,WAAA,IAAA,OAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,WAAA,GAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA,WAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,GAAA,IAAA,EAAA,OAAA,EAAA,cAAA,GAAA,EAAA,cAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,OAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,GAAA,KAAA,EAAA,EAAA,MAAA,EAAA,GAAA,MAAA,KAAA,EAAA,MAAA,KAAA,EAAA,EAAA,EAAA,OAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,MAAA,IAAA,IAAA,MAAA,IAAA,KAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,MAAA,IAAA,IAAA,MAAA,IAAA,IAAA,MAAA,IAAA,KAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,OAAA,EAAA,UAAA,EAAA,GAAA,OAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAAA,QAAA,GAAA,MAAA,EAAA,KAAA,IAAA,GAAA,KAAA,OAAA,EAAA,MAAA,KAAA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,OAAA,SAAA,GAAA,IAAA,EAAA,EAAA,OAAA,GAAA,GAAA,EAAA,OAAA,OAAA,aAAA,MAAA,OAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,aAAA,MAAA,OAAA,EAAA,MAAA,EAAA,GAAA,IAAA,OAAA,EAAA,CAAA,GAAA,EAAA,OAAA,EAAA,EAAA,WAAA,SAAA,GAAA,OAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,kBAAA,GAAA,EAAA,yBAAA,IAAA,EAAA,oBAAA,EAAA,oBAAA,WAAA,IAAA,IAAA,EAAA,IAAA,WAAA,GAAA,OAAA,EAAA,UAAA,CAAA,UAAA,WAAA,UAAA,IAAA,WAAA,OAAA,KAAA,KAAA,EAAA,OAAA,mBAAA,EAAA,UAAA,IAAA,EAAA,SAAA,EAAA,GAAA,WAAA,MAAA,GAAA,OAAA,GAAA,GAAA,EAAA,WAAA,IAAA,EAAA,SAAA,KAAA,EAAA,SAAA,SAAA,GAAA,OAAA,EAAA,UAAA,EAAA,UAAA,GAAA,EAAA,KAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,sBAAA,EAAA,UAAA,UAAA,WAAA,UAAA,EAAA,UAAA,WAAA,oBAAA,QAAA,OAAA,SAAA,EAAA,OAAA,WAAA,GAAA,OAAA,eAAA,EAAA,OAAA,QAAA,CAAA,MAAA,KAAA,cAAA,KAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,GAAA,CAAA,KAAA,EAAA,EAAA,IAAA,EAAA,YAAA,SAAA,GAAA,OAAA,EAAA,KAAA,IAAA,EAAA,gBAAA,SAAA,GAAA,OAAA,EAAA,KAAA,IAAA,EAAA,SAAA,SAAA,GAAA,QAAA,MAAA,IAAA,EAAA,YAAA,EAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,SAAA,KAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,6BAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,WAAA,SAAA,GAAA,OAAA,OAAA,GAAA,eAAA,IAAA,MAAA,IAAA,OAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,OAAA,EAAA,QAAA,OAAA,IAAA,EAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,MAAA,IAAA,UAAA,+CAAA,GAAA,IAAA,EAAA,OAAA,OAAA,EAAA,MAAA,GAAA,IAAA,EAAA,QAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,YAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,+CAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,OAAA,OAAA,GAAA,EAAA,WAAA,EAAA,EAAA,UAAA,WAAA,EAAA,EAAA,UAAA,OAAA,WAAA,IAAA,EAAA,KAAA,OAAA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,WAAA,6CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,OAAA,MAAA,EAAA,UAAA,OAAA,WAAA,IAAA,EAAA,KAAA,OAAA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,WAAA,6CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,OAAA,MAAA,EAAA,UAAA,OAAA,WAAA,IAAA,EAAA,KAAA,OAAA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,WAAA,6CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,OAAA,MAAA,EAAA,UAAA,SAAA,WAAA,IAAA,EAAA,EAAA,KAAA,OAAA,OAAA,IAAA,EAAA,GAAA,IAAA,UAAA,OAAA,EAAA,KAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,SAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,OAAA,MAAA,GAAA,SAAA,IAAA,GAAA,EAAA,KAAA,UAAA,EAAA,KAAA,QAAA,GAAA,EAAA,MAAA,GAAA,IAAA,KAAA,KAAA,KAAA,GAAA,MAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,GAAA,IAAA,MAAA,OAAA,EAAA,KAAA,EAAA,GAAA,IAAA,OAAA,IAAA,QAAA,OAAA,EAAA,KAAA,EAAA,GAAA,IAAA,QAAA,OAAA,EAAA,KAAA,EAAA,GAAA,IAAA,SAAA,IAAA,SAAA,OAAA,EAAA,KAAA,EAAA,GAAA,IAAA,SAAA,OAAA,EAAA,KAAA,EAAA,GAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,OAAA,EAAA,KAAA,EAAA,GAAA,QAAA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GAAA,GAAA,EAAA,IAAA,cAAA,GAAA,IAAA,MAAA,KAAA,YAAA,EAAA,UAAA,OAAA,SAAA,GAAA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,6BAAA,OAAA,OAAA,GAAA,IAAA,EAAA,QAAA,KAAA,IAAA,EAAA,UAAA,QAAA,WAAA,IAAA,EAAA,GAAA,EAAA,EAAA,kBAAA,OAAA,KAAA,OAAA,IAAA,EAAA,KAAA,SAAA,MAAA,EAAA,GAAA,MAAA,SAAA,KAAA,KAAA,KAAA,OAAA,IAAA,GAAA,UAAA,WAAA,EAAA,KAAA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,6BAAA,QAAA,IAAA,IAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,QAAA,IAAA,IAAA,EAAA,QAAA,IAAA,IAAA,EAAA,KAAA,QAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,KAAA,OAAA,MAAA,IAAA,WAAA,sBAAA,GAAA,GAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,OAAA,EAAA,OAAA,EAAA,IAAA,IAAA,GAAA,KAAA,IAAA,KAAA,GAAA,GAAA,KAAA,IAAA,KAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,KAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GAAA,OAAA,IAAA,KAAA,QAAA,EAAA,EAAA,IAAA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,QAAA,IAAA,EAAA,EAAA,OAAA,EAAA,KAAA,OAAA,EAAA,OAAA,QAAA,IAAA,GAAA,iBAAA,EAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,MAAA,CAAA,IAAA,SAAA,GAAA,MAAA,IAAA,MAAA,2EAAA,GAAA,EAAA,SAAA,IAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,EAAA,EAAA,OAAA,GAAA,IAAA,EAAA,KAAA,OAAA,EAAA,SAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,OAAA,MAAA,IAAA,WAAA,0CAAA,IAAA,EAAA,QAAA,IAAA,IAAA,GAAA,IAAA,OAAA,GAAA,IAAA,MAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,OAAA,IAAA,QAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,QAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,SAAA,IAAA,SAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,SAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,QAAA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GAAA,GAAA,GAAA,GAAA,cAAA,GAAA,IAAA,EAAA,UAAA,OAAA,WAAA,MAAA,CAAA,KAAA,SAAA,KAAA,MAAA,UAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAAA,IAAA,EAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,OAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OAAA,aAAA,IAAA,EAAA,IAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,OAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OAAA,aAAA,EAAA,IAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,SAAA,GAAA,EAAA,KAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,GAAA,OAAA,aAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBAAA,GAAA,EAAA,EAAA,EAAA,MAAA,IAAA,WAAA,yCAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,+CAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,qCAAA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,WAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,UAAA,MAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,OAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,OAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,qBAAA,EAAA,KAAA,SAAA,EAAA,IAAA,UAAA,EAAA,cAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,OAAA,GAAA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,IAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KAAA,EAAA,GAAA,EAAA,OAAA,GAAA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,IAAA,IAAA,EAAA,KAAA,IAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KAAA,IAAA,GAAA,EAAA,OAAA,GAAA,EAAA,UAAA,UAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,KAAA,IAAA,EAAA,UAAA,aAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,KAAA,GAAA,KAAA,EAAA,IAAA,GAAA,EAAA,UAAA,aAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,KAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,UAAA,aAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,SAAA,KAAA,GAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,IAAA,SAAA,KAAA,EAAA,IAAA,EAAA,UAAA,aAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,SAAA,KAAA,IAAA,KAAA,EAAA,IAAA,GAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,IAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KAAA,EAAA,GAAA,EAAA,OAAA,IAAA,GAAA,OAAA,GAAA,KAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KAAA,IAAA,GAAA,EAAA,OAAA,IAAA,GAAA,OAAA,GAAA,KAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,IAAA,KAAA,IAAA,GAAA,IAAA,KAAA,GAAA,GAAA,KAAA,IAAA,EAAA,UAAA,YAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,IAAA,EAAA,OAAA,MAAA,EAAA,WAAA,EAAA,GAAA,EAAA,UAAA,YAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,IAAA,EAAA,KAAA,EAAA,GAAA,KAAA,IAAA,EAAA,OAAA,MAAA,EAAA,WAAA,EAAA,GAAA,EAAA,UAAA,YAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,KAAA,GAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,GAAA,KAAA,EAAA,IAAA,IAAA,EAAA,UAAA,YAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,KAAA,IAAA,GAAA,KAAA,EAAA,IAAA,GAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,UAAA,YAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAAA,EAAA,UAAA,YAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAAA,EAAA,UAAA,aAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAAA,EAAA,UAAA,aAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAAA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,EAAA,IAAA,GAAA,MAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,GAAA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,MAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,GAAA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,sBAAA,EAAA,KAAA,MAAA,IAAA,KAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GAAA,EAAA,qBAAA,KAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GAAA,EAAA,qBAAA,KAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GAAA,EAAA,qBAAA,KAAA,EAAA,GAAA,IAAA,GAAA,KAAA,EAAA,GAAA,IAAA,GAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GAAA,EAAA,qBAAA,KAAA,GAAA,IAAA,GAAA,KAAA,EAAA,GAAA,IAAA,GAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,EAAA,IAAA,GAAA,MAAA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,OAAA,EAAA,GAAA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,MAAA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,OAAA,EAAA,GAAA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,sBAAA,EAAA,KAAA,MAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,KAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OAAA,EAAA,qBAAA,KAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OAAA,EAAA,qBAAA,KAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YAAA,EAAA,qBAAA,KAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,GAAA,KAAA,EAAA,GAAA,IAAA,IAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YAAA,EAAA,IAAA,EAAA,WAAA,EAAA,GAAA,EAAA,qBAAA,KAAA,GAAA,IAAA,GAAA,KAAA,EAAA,GAAA,IAAA,GAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IAAA,IAAA,EAAA,KAAA,QAAA,GAAA,EAAA,SAAA,EAAA,EAAA,QAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,QAAA,IAAA,KAAA,OAAA,OAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,6BAAA,GAAA,EAAA,GAAA,GAAA,KAAA,OAAA,MAAA,IAAA,WAAA,6BAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,2BAAA,EAAA,KAAA,SAAA,EAAA,KAAA,QAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,QAAA,GAAA,EAAA,MAAA,EAAA,oBAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,QAAA,WAAA,UAAA,IAAA,KAAA,EAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,OAAA,GAAA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,CAAA,GAAA,iBAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,QAAA,iBAAA,IAAA,EAAA,EAAA,EAAA,KAAA,QAAA,IAAA,EAAA,OAAA,CAAA,IAAA,EAAA,EAAA,WAAA,GAAA,EAAA,MAAA,EAAA,GAAA,QAAA,IAAA,GAAA,iBAAA,EAAA,MAAA,IAAA,UAAA,6BAAA,GAAA,iBAAA,IAAA,EAAA,WAAA,GAAA,MAAA,IAAA,UAAA,qBAAA,OAAA,iBAAA,IAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAA,OAAA,GAAA,KAAA,OAAA,EAAA,MAAA,IAAA,WAAA,sBAAA,GAAA,GAAA,EAAA,OAAA,KAAA,IAAA,EAAA,GAAA,KAAA,EAAA,OAAA,IAAA,EAAA,KAAA,OAAA,IAAA,EAAA,IAAA,EAAA,GAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,MAAA,CAAA,IAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,MAAA,IAAA,EAAA,qBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,GAAA,IAAA,EAAA,SAAA,IAAA,EAAA,SAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,WAAA,IAAA,OAAA,EAAA,MAAA,CAAA,IAAA,EAAA,CAAA,GAAA,EAAA,MAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KAAA,SAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KAAA,SAAA,EAAA,EAAA,SAAA,GAAA,EAAA,MAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KAAA,EAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,GAAA,EAAA,YAAA,IAAA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KAAA,GAAA,EAAA,KAAA,EAAA,IAAA,CAAA,IAAA,GAAA,GAAA,EAAA,MAAA,EAAA,KAAA,QAAA,GAAA,EAAA,KAAA,CAAA,IAAA,GAAA,GAAA,EAAA,MAAA,EAAA,KAAA,GAAA,EAAA,IAAA,GAAA,EAAA,UAAA,GAAA,EAAA,MAAA,CAAA,IAAA,GAAA,GAAA,EAAA,MAAA,EAAA,KAAA,GAAA,GAAA,IAAA,GAAA,EAAA,GAAA,IAAA,GAAA,EAAA,SAAA,CAAA,KAAA,EAAA,SAAA,MAAA,IAAA,MAAA,sBAAA,IAAA,GAAA,GAAA,EAAA,MAAA,EAAA,KAAA,GAAA,GAAA,IAAA,GAAA,GAAA,GAAA,IAAA,GAAA,EAAA,GAAA,IAAA,GAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,YAAA,SAAA,GAAA,IAAA,EAAA,SAAA,GAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,aAAA,IAAA,CAAA,GAAA,QAAA,EAAA,KAAA,OAAA,EAAA,MAAA,GAAA,KAAA,EAAA,OAAA,GAAA,GAAA,GAAA,IAAA,OAAA,EAAA,CAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,IACA,CAAA,YAAA,OAAA,QAAA,OAAA,QAAA,OAAA,OAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,EAAA,UAAA,OACA,UAAA,GADA,IAEA,EAAA,EAAA,UAAA,OAAA,EAAA,UAAA,GAAA,EAAA,EAAA,mBAAA,iBAAA,EAAA,EAAA,mBAAA,gBAAA,EAAA,EAAA,mBAAA,OAAA,EAAA,EAAA,mBAAA,OAAA,SAAA,EAAA,EAAA,GAAA,KAAA,GAAA,EAAA,KAAA,KAAA,EAAA,SAAA,EAAA,GAAA,KAAA,KAAA,GAAA,EAAA,KAAA,GAAA,KAAA,EAAA,UAAA,gBAAA,WAAA,GAAA,KAAA,YAAA,OAAA,KAAA,YAAA,IAAA,EAAA,KAAA,GAAA,YAAA,EAAA,KAAA,MAAA,OAAA,KAAA,YAAA,EAAA,YAAA,GAAA,KAAA,aAAA,EAAA,UAAA,MAAA,SAAA,GAAA,IAAA,IAAA,EAAA,KAAA,kBAAA,QAAA,EAAA,UAAA,WAAA,KAAA,EAAA,QAAA,SAAA,GAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,KAAA,EAAA,UAAA,KAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,KAAA,kBAAA,IAAA,GAAA,EAAA,UAAA,SAAA,GAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,KAAA,IAAA,EAAA,QAAA,SAAA,GAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,KAAA,EAAA,UAAA,UAAA,SAAA,EAAA,GAAA,KAAA,KAAA,EAAA,IAAA,EAAA,UAAA,UAAA,SAAA,EAAA,GAAA,KAAA,KAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,OAAA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,KAAA,kBAAA,IAAA,EAAA,GAAA,EAAA,UAAA,SAAA,GAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,KAAA,IAAA,EAAA,QAAA,SAAA,GAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,KAAA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAAA,KAAA,KAAA,EAAA,EAAA,IAAA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,KAAA,KAAA,EAAA,EAAA,IAAA,EAAA,UAAA,OAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,KAAA,kBAAA,OAAA,GAAA,EAAA,UAAA,SAAA,GAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,KAAA,IAAA,EAAA,QAAA,SAAA,GAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,KAAA,EAAA,YAAA,WAAA,SAAA,EAAA,WAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,UAAA,KAAA,SAAA,GAAA,IAAA,EAAA,KAAA,GAAA,EAAA,GAAA,OAAA,IAAA,IAAA,IAAA,GAAA,EAAA,WAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,aAAA,KAAA,EAAA,MAAA,EAAA,gBAAA,SAAA,GAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,iBAAA,SAAA,IAAA,EAAA,kBAAA,GAAA,EAAA,kBAAA,IAAA,EAAA,UAAA,SAAA,GAAA,EAAA,GAAA,EAAA,OAAA,OAAA,KAAA,EAAA,QAAA,SAAA,GAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,KAAA,EAAA,UAAA,mBAAA,WAAA,OAAA,IAAA,EAAA,KAAA,GAAA,IAAA,EAAA,UAAA,oBAAA,WAAA,OAAA,IAAA,EAAA,KAAA,GAAA,IAAA,EAAA,QAAA,GACA,CAAA,kBAAA,OAAA,OAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,EAAA,WAAA,IAEA,EAAA,EAAA,EAAA,WAAA,EAAA,QAAA,IAAA,GAAA,EAAA,UAAA,EAAA,SAAA,EAAA,SAAA,oBAAA,aAAA,EAAA,aAAA,SAAA,GAAA,aAAA,IAAA,EAAA,aAAA,EAAA,UAAA,mBAAA,cAAA,EAAA,SAAA,SAAA,GAAA,aAAA,IAAA,EAAA,aAAA,EAAA,WAAA,EAAA,SAAA,SAAA,GAAA,WAAA,EAAA,IAAA,EAAA,aAAA,EAAA,UAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,OAAA,OAAA,IAAA,IAAA,EAAA,GAAA,SAAA,IAAA,EAAA,EAAA,GAAA,SAAA,GAAA,GAAA,EAAA,GAAA,EAAA,eAAA,GAAA,IAAA,EAAA,OAAA,IAAA,MAAA,IAAA,EAAA,cAAA,EAAA,gBAAA,IAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,KAAA,MAAA,GACA,CAAA,QAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,mBAAA,iBAAA,EAAA,EAAA,sBAAA,aAAA,EAAA,WAAA,IAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,EAAA,eAAA,KAAA,EAAA,GAAA,IAAA,EAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,SAAA,EAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,KAAA,KAAA,GAAA,EAAA,EAAA,UAAA,MAAA,SAAA,GAAA,GAAA,KAAA,SAAA,EAAA,WAAA,EAAA,qEAAA,CAAA,IAAA,EAAA,KAAA,YAAA,OAAA,KAAA,GAAA,QAAA,SAAA,UAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,UAAA,EAAA,UAAA,UAAA,SAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,WAAA,EAAA,KAAA,EAAA,YAAA,OAAA,EAAA,UAAA,UAAA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAAA,KAAA,SAAA,EAAA,WAAA,EAAA,kEAAA,KAAA,YAAA,GAAA,EAAA,EAAA,KAAA,EAAA,UAAA,OAAA,SAAA,EAAA,GAAA,KAAA,SAAA,EAAA,WAAA,EAAA,yEAAA,KAAA,YAAA,GAAA,EAAA,KAAA,EAAA,YAAA,WAAA,OAAA,GAAA,EAAA,UAAA,KAAA,SAAA,GAAA,KAAA,GAAA,EAAA,KAAA,MAAA,EAAA,IAAA,EAAA,UAAA,mBAAA,WAAA,OAAA,IAAA,EAAA,KAAA,IAAA,IAAA,EAAA,UAAA,oBAAA,WAAA,OAAA,IAAA,EAAA,KAAA,IAAA,IAAA,EAAA,QAAA,GACA,CAAA,kBAAA,OAAA,qBAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,kBAAA,EAAA,EAAA,eAAA,EAAA,QAAA,CAAA,UAAA,EAAA,QAAA,EAAA,OAAA,IACA,CAAA,iBAAA,OAAA,cAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,GAAA,CAAA,6BAAA,8BAAA,mCAAA,6BAAA,6BAAA,6CAAA,sCAAA,gCAAA,mCAAA,+CAAA,mCAAA,mBAAA,+BAAA,oFAAA,yCAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,MAAA,MAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,KAAA,MAAA,KAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,MAAA,EAAA,KAAA,QAAA,GAAA,EAAA,IAAA,KAAA,KAAA,GAAA,KAAA,MAAA,IAAA,MAAA,KAAA,SAAA,MAAA,EAAA,UAAA,OAAA,OAAA,MAAA,WAAA,EAAA,UAAA,YAAA,EAAA,EAAA,UAAA,SAAA,WAAA,IAAA,EAAA,KAAA,KAAA,MAAA,KAAA,KAAA,IAAA,GAAA,OAAA,KAAA,KAAA,KAAA,KAAA,QAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,QAAA,GACA,IAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,aAAA,IAAA,EAAA,EAAA,mBAAA,YAAA,EAAA,QAAA,SAAA,IAAA,EAAA,GAAA,IAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,KAAA,IAAA,SAAA,GAAA,OAAA,EAAA,IAAA,KAAA,IAAA,SAAA,EAAA,GAAA,EAAA,GAAA,KACA,CAAA,kBAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,EAAA,QAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,KAAA,MAAA,EAAA,GAAA,EAAA,KAAA,GAAA,OAAA,GAAA,IAAA,EAAA,MAAA,SAAA,SAAA,GAAA,MAAA,mBAAA,OAAA,UAAA,SAAA,KAAA,KACA,IAAA,OAAA,CAAA,SAAA,EAAA,EAAA,GACA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,aAAA,SAAA,EAAA,EAAA,EAAA,IAAA,aAAA,SAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,CAAA,MAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,EAAA,IAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,SAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,GAAA,OAAA,EAAA,EAAA,GAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,CAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,GAAA,IAAA,GAAA,GAAA,GAAA,EAAA,KAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,IAAA,GAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CAAA,EAAA,IAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,GACA,IAAA,OAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,cAAA,EAAA,EAAA,kiCAAA,KAAA,EAAA,MAAA,EAAA,uCAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,MAAA,EAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,KAAA,EAAA,EAAA,MAAA,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,MAAA,aAAA,GAAA,KAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,MAAA,CAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,IAAA,GAAA,IAAA,EAAA,OAAA,EAAA,MAAA,KAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,KAAA,EAAA,EAAA,OAAA,IAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,OAAA,IAAA,EAAA,QAAA,EAAA,KAAA,MAAA,EAAA,IAAA,EAAA,KAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,OAAA,QAAA,KAAA,EAAA,EAAA,EAAA,IAAA,GAAA,IAAA,IAAA,OAAA,OAAA,EAAA,EAAA,KAAA,OAAA,EAAA,EAAA,MAAA,GAAA,CAAA,KAAA,IAAA,SAAA,GAAA,OAAA,EAAA,IAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,OAAA,EAAA,EAAA,MAAA,GAAA,CAAA,IAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,QAAA,EAAA,GAAA,EAAA,OAAA,KAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,GAAA,EAAA,QAAA,EAAA,OAAA,aAAA,MAAA,EAAA,SAAA,GAAA,EAAA,OAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,MAAA,EAAA,GAAA,KAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,KAAA,SAAA,EAAA,EAAA,EAAA,SAAA,GAAA,OAAA,EAAA,GAAA,KAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GAAA,IAAA,EAAA,KAAA,GAAA,OAAA,IACA,CAAA,aAAA,OAAA,iBAAA,SAAA,OAAA,CAAA,SAAA,EAAA,EAAA,GACA,EAAA,QAAA,EAAA,EAAA,UAAA,EAAA,IAAA,EAAA,CAAA,IAAA,KAAA,IAAA,EAAA,EAAA,QAAA,MAAA,IAAA,IAAA,EAAA,EAAA,SAAA,EAAA,SAAA,GAAA,EAAA,EAAA,mBAAA,EAAA,CAAA,IAAA,CAAA,KAAA,YAAA,MAAA,aAAA,IAAA,CAAA,KAAA,MAAA,MAAA,MAAA,IAAA,CAAA,KAAA,MAAA,MAAA,MAAA,IAAA,CAAA,KAAA,MAAA,MAAA,MAAA,IAAA,CAAA,KAAA,MAAA,MAAA,MAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,0CAAA,EAAA,0BAAA,EAAA,SAAA,GAAA,OAAA,EAAA,MAAA,IAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,GAAA,IAAA,CAAA,mBAAA,IAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,OAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,EAAA,GAAA,EAAA,KAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,MAAA,IAAA,UAAA,gCAAA,OAAA,IAAA,EAAA,OAAA,EAAA,WAAA,MAAA,EAAA,OAAA,MAAA,KAAA,EAAA,OAAA,KAAA,EAAA,IAAA,EAAA,EAAA,GAAA,MAAA,IAAA,SAAA,EAAA,EAAA,GAAA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,MAAA,IAAA,UAAA,gCAAA,IAAA,EAAA,IAAA,EAAA,EAAA,OAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,KAAA,KAAA,MAAA,KAAA,QAAA,EAAA,KAAA,IAAA,GAAA,KAAA,QAAA,EAAA,KAAA,OAAA,KAAA,KAAA,QAAA,EAAA,KAAA,SAAA,EAAA,KAAA,OAAA,EAAA,KAAA,OAAA,SAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,QAAA,SAAA,KAAA,OAAA,IAAA,EAAA,KAAA,QAAA,GAAA,MAAA,IAAA,UAAA,qBAAA,OAAA,EAAA,UAAA,EAAA,MAAA,UAAA,CAAA,GAAA,EAAA,GAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,SAAA,SAAA,GAAA,IAAA,IAAA,OAAA,KAAA,GAAA,OAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,UAAA,SAAA,EAAA,GAAA,OAAA,IAAA,EAAA,UAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,SAAA,GAAA,OAAA,GAAA,OAAA,KAAA,GAAA,OAAA,EAAA,SAAA,GAAA,UAAA,GAAA,EAAA,UAAA,MAAA,aAAA,EAAA,UAAA,KAAA,WAAA,IAAA,KAAA,MAAA,CAAA,IAAA,EAAA,KAAA,QAAA,EAAA,KAAA,QAAA,GAAA,EAAA,WAAA,MAAA,EAAA,OAAA,GAAA,GAAA,EAAA,CAAA,KAAA,cAAA,IAAA,EAAA,KAAA,QAAA,KAAA,cAAA,EAAA,QAAA,KAAA,MAAA,QAAA,OAAA,KAAA,MAAA,KAAA,QAAA,GAAA,EAAA,KAAA,UAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,KAAA,MAAA,KAAA,QAAA,GAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,MAAA,OAAA,MAAA,KAAA,MAAA,KAAA,QAAA,GAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,IAAA,EAAA,SAAA,KAAA,KAAA,MAAA,KAAA,QAAA,GAAA,KAAA,IAAA,OAAA,KAAA,OAAA,OAAA,KAAA,SAAA,IAAA,EAAA,UAAA,YAAA,WAAA,IAAA,EAAA,KAAA,QAAA,GAAA,EAAA,EAAA,EAAA,IAAA,KAAA,QAAA,SAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,GAAA,MAAA,EAAA,OAAA,GAAA,IAAA,GAAA,EAAA,IAAA,IAAA,KAAA,QAAA,EAAA,OAAA,IAAA,KAAA,OAAA,IAAA,EAAA,YAAA,SAAA,EAAA,GAAA,OAAA,EAAA,EAAA,IAAA,EAAA,UAAA,YAAA,EAAA,EAAA,UAAA,MAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,MAAA,MAAA,IAAA,UAAA,uBAAA,IAAA,EAAA,KAAA,QAAA,IAAA,EAAA,YAAA,OAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,MAAA,GAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,OAAA,GAAA,GAAA,EAAA,IAAA,iCAAA,UAAA,EAAA,KAAA,SAAA,IAAA,GAAA,EAAA,CAAA,OAAA,GAAA,IAAA,IAAA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,IAAA,GAAA,EAAA,GAAA,EAAA,MAAA,QAAA,GAAA,KAAA,EAAA,EAAA,MAAA,uBAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,IAAA,IAAA,GAAA,KAAA,MAAA,eAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,OAAA,OAAA,GAAA,IAAA,IAAA,OAAA,EAAA,IAAA,KAAA,IAAA,GAAA,EAAA,SAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,KAAA,MAAA,6BAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,KAAA,MAAA,cAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,SAAA,EAAA,MAAA,yBAAA,GAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,SAAA,IAAA,IAAA,GAAA,EAAA,CAAA,GAAA,IAAA,SAAA,IAAA,EAAA,CAAA,GAAA,MAAA,SAAA,EAAA,KAAA,CAAA,KAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,OAAA,KAAA,EAAA,GAAA,KAAA,MAAA,EAAA,GAAA,QAAA,GAAA,MAAA,EAAA,YAAA,MAAA,KAAA,MAAA,eAAA,EAAA,GAAA,GAAA,EAAA,SAAA,IAAA,IAAA,GAAA,IAAA,EAAA,OAAA,CAAA,GAAA,MAAA,SAAA,IAAA,GAAA,EAAA,IAAA,EAAA,EAAA,MAAA,GAAA,EAAA,MAAA,MAAA,EAAA,MAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EAAA,OAAA,SAAA,IAAA,IAAA,GAAA,IAAA,EAAA,QAAA,EAAA,CAAA,GAAA,MAAA,GAAA,EAAA,SAAA,IAAA,GAAA,IAAA,SAAA,IAAA,IAAA,GAAA,IAAA,EAAA,CAAA,GAAA,KAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,CAAA,GAAA,KAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,GAAA,IAAA,OAAA,IAAA,EAAA,KAAA,MAAA,GAAA,IAAA,EAAA,KAAA,MAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,UAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,SAAA,QAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,MAAA,GAAA,IAAA,GAAA,MAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,MAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,GAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,IAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,QAAA,KAAA,MAAA,eAAA,EAAA,GAAA,EAAA,EAAA,QAAA,4BAAA,SAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,MAAA,EAAA,EAAA,EAAA,MAAA,KAAA,MAAA,iBAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,MAAA,EAAA,IAAA,IAAA,GAAA,QAAA,IAAA,GAAA,EAAA,OAAA,EAAA,OAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,GAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,OAAA,GAAA,EAAA,IAAA,EAAA,EAAA,MAAA,KAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,WAAA,IAAA,IAAA,EAAA,GAAA,MAAA,EAAA,IAAA,IAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,GAAA,IAAA,EAAA,QAAA,GAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,CAAA,EAAA,GAAA,IAAA,EAAA,OAAA,SAAA,GAAA,OAAA,EAAA,QAAA,SAAA,MAAA,CAAA,GAAA,IAAA,EAAA,EAAA,OAAA,IAAA,GAAA,IAAA,IAAA,EAAA,IAAA,OAAA,IAAA,EAAA,IAAA,GAAA,MAAA,GAAA,OAAA,IAAA,OAAA,MAAA,OAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,GAAA,IAAA,UAAA,EAAA,UAAA,OAAA,WAAA,GAAA,KAAA,SAAA,IAAA,KAAA,OAAA,OAAA,KAAA,OAAA,IAAA,EAAA,KAAA,IAAA,IAAA,EAAA,OAAA,OAAA,KAAA,QAAA,EAAA,KAAA,OAAA,IAAA,EAAA,KAAA,QAAA,EAAA,EAAA,WAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,IAAA,SAAA,GAAA,OAAA,IAAA,EAAA,EAAA,iBAAA,EAAA,SAAA,GAAA,OAAA,EAAA,QAAA,2BAAA,QAAA,CAAA,GAAA,EAAA,OAAA,KAAA,SAAA,KAAA,KAAA,EAAA,OAAA,EAAA,KAAA,KAAA,SAAA,EAAA,OAAA,EAAA,QAAA,IAAA,KAAA,OAAA,IAAA,OAAA,EAAA,GAAA,MAAA,GAAA,KAAA,QAAA,EAAA,OAAA,KAAA,QAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,OAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,EAAA,QAAA,SAAA,EAAA,QAAA,EAAA,KAAA,GAAA,GAAA,EAAA,UAAA,MAAA,SAAA,EAAA,GAAA,GAAA,KAAA,MAAA,QAAA,EAAA,KAAA,SAAA,KAAA,QAAA,OAAA,EAAA,GAAA,KAAA,MAAA,MAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,OAAA,EAAA,IAAA,EAAA,KAAA,QAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,KAAA,KAAA,MAAA,EAAA,EAAA,MAAA,GAAA,KAAA,MAAA,KAAA,QAAA,QAAA,GAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,KAAA,MAAA,KAAA,QAAA,MAAA,GAAA,EAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,EAAA,IAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,EAAA,SAAA,EAAA,CAAA,IAAA,KAAA,SAAA,EAAA,EAAA,GAAA,QAAA,EAAA,aAAA,KAAA,OAAA,OAAA,EAAA,YAAA,KAAA,QAAA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,QAAA,KAAA,MAAA,WAAA,CAAA,KAAA,KAAA,KAAA,EAAA,QAAA,IAAA,KAAA,MAAA,WAAA,EAAA,OAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,IAAA,IAAA,CAAA,KAAA,MAAA,iBAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,KAAA,MAAA,EAAA,EAAA,IAAA,IAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,KAAA,MAAA,WAAA,CAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,KAAA,MAAA,iBAAA,EAAA,EAAA,IAAA,GAAA,MAAA,EAAA,IAAA,OAAA,EAAA,KAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,GAAA,OAAA,EAAA,OAAA,EAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,GAAA,KAAA,MAAA,mBAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,SAAA,EAAA,MAAA,GAAA,EAAA,MAAA,GAAA,GAAA,OAAA,KAAA,MAAA,wBAAA,EAAA,EAAA,IAAA,EAAA,GAAA,MAAA,GAAA,OAAA,IAAA,EAAA,KAAA,MAAA,EAAA,OAAA,GAAA,CAAA,KAAA,MAAA,gBAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,MAAA,4CAAA,IAAA,SAAA,IAAA,KAAA,MAAA,2BAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,GAAA,iBAAA,GAAA,EAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,cAAA,IAAA,EAAA,KAAA,MAAA,eAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,KAAA,MAAA,gBAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,GAAA,IAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,OAAA,IAAA,EAAA,GAAA,KAAA,EAAA,GAAA,MAAA,IAAA,MAAA,UACA,CAAA,KAAA,OAAA,kBAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,iBAAA,UAAA,EAAA,EAAA,cAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,sBAAA,EAAA,EAAA,aAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,IAAA,GAAA,EAAA,GAAA,IAAA,KAAA,EAAA,IAAA,OAAA,eAAA,KAAA,KAAA,CAAA,IAAA,WAAA,OAAA,GAAA,YAAA,IAAA,OAAA,eAAA,KAAA,MAAA,CAAA,IAAA,WAAA,OAAA,GAAA,YAAA,IAAA,KAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,QAAA,KAAA,IAAA,cAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,KAAA,OAAA,KAAA,IAAA,WAAA,OAAA,GAAA,KAAA,SAAA,GAAA,CAAA,KAAA,OAAA,QAAA,MAAA,KAAA,KAAA,UAAA,SAAA,QAAA,QAAA,SAAA,GAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,KAAA,MAAA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,EAAA,QAAA,KAAA,MAAA,GAAA,EAAA,SAAA,EAAA,OAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,QAAA,IAAA,IAAA,SAAA,KAAA,OAAA,WAAA,EAAA,CAAA,EAAA,EAAA,GAAA,MAAA,GAAA,EAAA,OAAA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,EAAA,QAAA,KAAA,MAAA,GAAA,EAAA,KAAA,EAAA,SAAA,GAAA,GAAA,IAAA,EAAA,WAAA,IAAA,SAAA,GAAA,EAAA,UAAA,EAAA,GAAA,GAAA,CAAA,GAAA,SAAA,GAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,CAAA,MAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,aAAA,GAAA,EAAA,iBAAA,EAAA,CAAA,GAAA,EAAA,EAAA,WAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,QAAA,EAAA,MAAA,GAAA,EAAA,SAAA,EAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,QAAA,SAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,QAAA,MAAA,QAAA,EAAA,IAAA,EAAA,OAAA,4BAAA,EAAA,UAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,QAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,EAAA,EAAA,WAAA,cAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,KAAA,GAAA,QAAA,EAAA,KAAA,GAAA,SAAA,SAAA,GAAA,EAAA,EAAA,OAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,0BAAA,EAAA,UAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,MAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,KAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,EAAA,WAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,WAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAA,IAAA,EAAA,UAAA,KAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,2BAAA,EAAA,UAAA,QAAA,SAAA,GAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,IAAA,IAAA,OAAA,EAAA,GAAA,aAAA,EAAA,MAAA,EAAA,WAAA,EAAA,KAAA,MAAA,EAAA,UAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GAAA,EAAA,GAAA,aAAA,EAAA,MAAA,EAAA,SAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,EAAA,cAAA,YAAA,IAAA,GAAA,EAAA,SAAA,YAAA,EAAA,IAAA,EAAA,QAAA,KAAA,QAAA,CAAA,GAAA,GAAA,WAAA,EAAA,KAAA,YAAA,EAAA,GAAA,IAAA,EAAA,EAAA,QAAA,GAAA,MAAA,EAAA,EAAA,MAAA,EAAA,SAAA,GAAA,GAAA,WAAA,EAAA,KAAA,EAAA,GAAA,MAAA,EAAA,EAAA,SAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,MAAA,EAAA,SAAA,GAAA,GAAA,WAAA,EAAA,KAAA,EAAA,GAAA,WAAA,CAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,OAAA,2BAAA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,aAAA,IAAA,GAAA,EAAA,GAAA,IAAA,MAAA,SAAA,EAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,ecAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,KAAA,MAAA,EAAA,IAAA,EAAA,OAAA,2BAAA,EAAA,QAAA,GACA,CAAA,gBAAA,OAAA,aAAA,OAAA,eAAA,OAAA,mBAAA,OAAA,qBAAA,OAAA,UAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,aAAA,EAAA,gBAAA,SAAA,GAAA,MAAA,CAAA,GAAA,SAAA,EAAA,QAAA,IAAA,KAAA,KAAA,KAAA,GAAA,IAAA,KAAA,GAAA,eAAA,KAAA,KAAA,GAAA,GAAA,IAAA,KAAA,GAAA,GAAA,KAAA,IAAA,IAAA,SAAA,EAAA,QAAA,IAAA,KAAA,IAAA,KAAA,GAAA,eAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,OAAA,EAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,QAAA,SAAA,GAAA,QAAA,IAAA,KAAA,IAAA,KAAA,GAAA,eAAA,GAAA,IAAA,IAAA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GAAA,EAAA,EAAA,EAAA,KAAA,GAAA,GAAA,OAAA,IAAA,KAAA,GAAA,GAAA,GAAA,MAAA,KAAA,GAAA,GAAA,GAAA,IAAA,mBAAA,SAAA,GAAA,QAAA,IAAA,KAAA,GAAA,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA,GAAA,QAAA,SAAA,GAAA,EAAA,IAAA,EAAA,SAAA,IAAA,EAAA,EAAA,gBAAA,aAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,UAAA,KAAA,EAAA,IAAA,EAAA,UAAA,SAAA,EAAA,QAAA,IAAA,EAAA,EAAA,gBAAA,YAAA,EAAA,UAAA,GAAA,WAAA,EAAA,GAAA,MAAA,KAAA,WAAA,MAAA,UAAA,QAAA,KAAA,UAAA,MAAA,KAAA,SAAA,MAAA,KAAA,YAAA,EAAA,UAAA,IAAA,EAAA,IAAA,EAAA,UAAA,QAAA,EAAA,QAAA,EAAA,UAAA,mBAAA,EAAA,mBAAA,EAAA,QAAA,GACA,IAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,SAAA,EAAA,GAAA,OAAA,EAAA,QAAA,QAAA,SAAA,GAAA,IAAA,EAAA,GAAA,KAAA,SAAA,EAAA,OAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,SAAA,MAAA,EAAA,QAAA,CAAA,KAAA,WAAA,OAAA,EAAA,wCAAA,eAAA,IAAA,aAAA,YAAA,SAAA,GAAA,OAAA,EAAA,IAAA,OAAA,EAAA,GAAA,OACA,IAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,UAAA,GAAA,IACA,EAAA,UAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,IAAA,EAAA,EAAA,qBAAA,EAAA,EAAA,oBAAA,KAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,WAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,KAAA,aAAA,IAAA,EAAA,SAAA,GAAA,YAAA,IAAA,QAAA,IAAA,EAAA,aAAA,CAAA,QAAA,aAAA,QAAA,aAAA,WAAA,cAAA,EAAA,aAAA,CAAA,GAAA,SAAA,IAAA,IAAA,EAAA,KAAA,EAAA,KAAA,MAAA,KAAA,OAAA,IAAA,KAAA,YAAA,EAAA,KAAA,YAAA,GAAA,KAAA,eAAA,GAAA,IAAA,EAAA,WAAA,EAAA,gBAAA,MAAA,EAAA,YAAA,oBAAA,WAAA,SAAA,YAAA,SAAA,YAAA,YAAA,GAAA,EAAA,iBAAA,UAAA,GAAA,IAAA,EAAA,UAAA,aAAA,SAAA,GAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,SAAA,IAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,QAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,IAAA,UAAA,GAAA,GAAA,QAAA,EAAA,WAAA,EAAA,IAAA,GAAA,EAAA,EAAA,QAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,UAAA,GAAA,GAAA,aAAA,GAAA,EAAA,WAAA,IAAA,IAAA,EAAA,UAAA,cAAA,EAAA,IAAA,WAAA,KAAA,aAAA,WAAA,IAAA,EAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,MAAA,EAAA,QAAA,IAAA,MAAA,MAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,UAAA,IAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,GAAA,EAAA,QAAA,EAAA,KAAA,UAAA,QAAA,EAAA,UAAA,cAAA,EAAA,IAAA,WAAA,IAAA,EAAA,KAAA,EAAA,aAAA,WAAA,KAAA,MAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,MAAA,EAAA,QAAA,IAAA,MAAA,MAAA,GAAA,EAAA,GAAA,IAAA,KAAA,EAAA,EAAA,cAAA,EAAA,YAAA,EAAA,GAAA,KAAA,EAAA,GAAA,EAAA,QAAA,EAAA,KAAA,UAAA,QAAA,EAAA,UAAA,cAAA,SAAA,EAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,eAAA,GAAA,OAAA,EAAA,GAAA,WAAA,EAAA,EAAA,IAAA,OAAA,EAAA,IAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,KAAA,MAAA,OAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,UAAA,qBAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,OAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,QAAA,GAAA,OAAA,IAAA,KAAA,eAAA,KAAA,KAAA,eAAA,GAAA,GAAA,IAAA,EAAA,UAAA,gBAAA,SAAA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,EAAA,KAAA,KAAA,qBAAA,EAAA,IAAA,KAAA,aAAA,WAAA,IAAA,EAAA,EAAA,KAAA,MAAA,EAAA,EAAA,QAAA,GAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,MAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,GAAA,SAAA,EAAA,UAAA,EAAA,GAAA,UAAA,EAAA,aAAA,CAAA,GAAA,EAAA,GAAA,GAAA,CAAA,GAAA,EAAA,YAAA,eAAA,EAAA,GAAA,IAAA,SAAA,EAAA,YAAA,EAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,YAAA,IAAA,KAAA,SAAA,UAAA,IAAA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,iBAAA,GAAA,iBAAA,EAAA,OAAA,GAAA,OAAA,EAAA,OAAA,CAAA,GAAA,KAAA,YAAA,eAAA,GAAA,OAAA,KAAA,YAAA,IAAA,EAAA,IAAA,EAAA,CAAA,GAAA,EAAA,KAAA,EAAA,OAAA,KAAA,OAAA,UAAA,KAAA,MAAA,QAAA,GAAA,EAAA,KAAA,KAAA,aAAA,WAAA,IAAA,EAAA,EAAA,QAAA,IAAA,KAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,EAAA,UAAA,EAAA,EAAA,OAAA,GAAA,EAAA,KAAA,UAAA,GAAA,KAAA,KAAA,IAAA,EAAA,QAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,WAAA,WAAA,EAAA,iBAAA,OAAA,EAAA,UAAA,KAAA,SAAA,EAAA,GAAA,KAAA,MAAA,MAAA,KAAA,WAAA,KAAA,SAAA,OAAA,EAAA,IAAA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,UAAA,CAAA,IAAA,EAAA,KAAA,KAAA,aAAA,WAAA,IAAA,EAAA,IAAA,EAAA,KAAA,MAAA,EAAA,QAAA,IAAA,MAAA,MAAA,GAAA,EAAA,GAAA,EAAA,cAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,KAAA,MAAA,iBAAA,IAAA,EAAA,GAAA,IAAA,IAAA,GAAA,EAAA,QAAA,EAAA,KAAA,UAAA,IAAA,IAAA,WAAA,WAAA,EAAA,iBAAA,SAAA,SAAA,EAAA,GAAA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,WAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,UAAA,EAAA,WAAA,EAAA,eAAA,IAAA,EAAA,IAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,KAAA,EAAA,QAAA,WAAA,EAAA,WAAA,GAAA,EAAA,WAAA,GAAA,EAAA,WAAA,IAAA,EAAA,YAAA,WAAA,IAAA,EAAA,OAAA,WAAA,OAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,EAAA,QAAA,GACA,CAAA,oBAAA,OAAA,mBAAA,SAAA,OAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,0BAAA,EAAA,EAAA,aAAA,EAAA,EAAA,sBAAA,SAAA,IAAA,EAAA,KAAA,MAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,EAAA,IAAA,IAAA,GAAA,GAAA,IAAA,EAAA,QAAA,KAAA,EAAA,QAAA,SAAA,SAAA,GAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,GAAA,EAAA,OAAA,GAAA,MAAA,IAAA,MAAA,6CAAA,EAAA,EAAA,UAAA,IAAA,GAAA,IAAA,KAAA,EAAA,MAAA,EAAA,IAAA,EAAA,KAAA,EAAA,cAAA,GAAA,SAAA,KAAA,EAAA,MAAA,WAAA,EAAA,cAAA,IAAA,SAAA,GAAA,EAAA,mBAAA,WAAA,EAAA,UAAA,IAAA,EAAA,EAAA,UAAA,YAAA,EAAA,EAAA,QAAA,GACA,CAAA,yBAAA,OAAA,YAAA,OAAA,qBAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,kBAAA,eAAA,EAAA,QAAA,SAAA,EAAA,GAAA,KAAA,GAAA,EAAA,KAAA,KAAA,GAAA,IACA,CAAA,iBAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,eAAA,iBAAA,EAAA,GAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,IAAA,OAAA,GAAA,EAAA,SAAA,GAAA,OAAA,EAAA,IAAA,EAAA,QAAA,CAAA,gBAAA,SAAA,GAAA,IAAA,EAAA,IAAA,OAAA,EAAA,GAAA,EAAA,GAAA,kBAAA,SAAA,GAAA,cAAA,EAAA,IAAA,uBAAA,IACA,CAAA,cAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,eAAA,EAAA,EAAA,eAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,wBAAA,EAAA,EAAA,yBAAA,EAAA,EAAA,wBAAA,EAAA,EAAA,eAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,IAAA,EAAA,KAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,KAAA,EAAA,OAAA,GAAA,GAAA,EAAA,KAAA,EAAA,OAAA,GAAA,GAAA,EAAA,KAAA,EAAA,QAAA,OAAA,GAAA,GAAA,GAAA,IAAA,EAAA,WAAA,SAAA,EAAA,IAAA,SAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,CAAA,KAAA,GAAA,IAAA,EAAA,KAAA,MAAA,KAAA,GAAA,EAAA,GAAA,KAAA,KAAA,EAAA,KAAA,KAAA,KAAA,EAAA,MAAA,EAAA,KAAA,MAAA,EAAA,OAAA,EAAA,KAAA,MAAA,EAAA,OAAA,EAAA,KAAA,MAAA,EAAA,OAAA,EAAA,KAAA,MAAA,EAAA,OAAA,GAAA,KAAA,OAAA,EAAA,QAAA,GAAA,KAAA,OAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,KAAA,KAAA,KAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,KAAA,KAAA,EAAA,KAAA,KAAA,KAAA,EAAA,KAAA,YAAA,EAAA,aAAA,EAAA,KAAA,MAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAAA,MAAA,WAAA,MAAA,CAAA,GAAA,KAAA,GAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,MAAA,KAAA,MAAA,MAAA,KAAA,MAAA,MAAA,KAAA,MAAA,OAAA,KAAA,OAAA,OAAA,KAAA,OAAA,KAAA,KAAA,KAAA,YAAA,KAAA,YAAA,IAAA,KAAA,IAAA,IAAA,KAAA,OAAA,CAAA,IAAA,OAAA,IAAA,WAAA,OAAA,EAAA,KAAA,KAAA,KAAA,cAAA,IAAA,SAAA,GAAA,KAAA,YAAA,MAAA,EAAA,GAAA,EAAA,QAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,KAAA,SAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,OAAA,SAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,UACA,CAAA,cAAA,SAAA,OAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,eAAA,EAAA,EAAA,UAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,KAAA,EAAA,KAAA,GAAA,EAAA,KAAA,MAAA,EAAA,KAAA,SAAA,EAAA,EAAA,UAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,KAAA,EAAA,UAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,yCAAA,OAAA,EAAA,QAAA,GACA,CAAA,cAAA,OAAA,SAAA,SAAA,OAAA,CAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,kBAAA,SAAA,EAAA,GAAA,IAAA,EAAA,KAAA,MAAA,KAAA,GAAA,EAAA,cAAA,KAAA,KAAA,EAAA,eAAA,KAAA,MAAA,EAAA,OAAA,EAAA,KAAA,MAAA,EAAA,OAAA,EAAA,KAAA,MAAA,EAAA,OAAA,EAAA,KAAA,MAAA,EAAA,MAAA,EAAA,OAAA,SAAA,EAAA,GAAA,EAAA,KAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,EAAA,KAAA,IAAA,EAAA,QAAA,EAAA,QAAA,GACA,CAAA,iBAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,aAAA,IAAA,EAAA,EAAA,kBAAA,EAAA,EAAA,aAAA,SAAA,EAAA,GAAA,OAAA,IAAA,KAAA,OAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,KAAA,EAAA,GAAA,KAAA,KAAA,EAAA,KAAA,KAAA,KAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,KAAA,MAAA,EAAA,EAAA,OAAA,KAAA,MAAA,EAAA,EAAA,OAAA,KAAA,MAAA,EAAA,EAAA,OAAA,KAAA,QAAA,EAAA,MAAA,KAAA,QAAA,EAAA,MAAA,KAAA,QAAA,EAAA,MAAA,KAAA,QAAA,EAAA,QAAA,KAAA,KAAA,EAAA,KAAA,KAAA,IAAA,EAAA,IAAA,KAAA,IAAA,EAAA,IAAA,KAAA,KAAA,EAAA,SAAA,GAAA,EAAA,UAAA,OAAA,WAAA,OAAA,KAAA,OAAA,EAAA,gBAAA,EAAA,UAAA,YAAA,WAAA,OAAA,KAAA,OAAA,EAAA,qBAAA,EAAA,UAAA,eAAA,WAAA,OAAA,KAAA,OAAA,EAAA,yBAAA,EAAA,UAAA,SAAA,EAAA,UAAA,OAAA,EAAA,UAAA,kBAAA,EAAA,UAAA,cAAA,WAAA,OAAA,GAAA,EAAA,QAAA,GACA,CAAA,iBAAA,OAAA,YAAA,SAAA,KAAA,CAAA,SAAA,EAAA,EAAA,GACA,EAAA,UAAA,OAAA,IACA,EAAA,EAAA,UAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,IAAA,EAAA,EAAA,cAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,EAAA,WAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,eAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,wBAAA,EAAA,EAAA,eAAA,EAAA,EAAA,iCAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,cAAA,EAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,EAAA,YAAA,EAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,EAAA,WAAA,EAAA,EAAA,WAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,yBAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,+BAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,cAAA,EAAA,EAAA,eAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,SAAA,WAAA,EAAA,MAAA,EAAA,SAAA,WAAA,EAAA,MAAA,IAAA,GAAA,EAAA,SAAA,EAAA,GAAA,EAAA,QAAA,KAAA,CAAA,MAAA,SAAA,KAAA,IAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,GAAA,GAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,GAAA,GAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,GAAA,GAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,OAAA,mCAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,2BAAA,KAAA,GAAA,aAAA,EAAA,OAAA,EAAA,UAAA,EAAA,KAAA,GAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,CAAA,KAAA,EAAA,KAAA,KAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,QAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,OAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,QAAA,oDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,IAAA,OAAA,EAAA,IAAA,EAAA,OAAA,4BAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,GAAA,EAAA,IAAA,EAAA,kBAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,GAAA,EAAA,KAAA,EAAA,UAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,QAAA,oDAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,QAAA,GAAA,EAAA,eAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,KAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,eAAA,GAAA,EAAA,IAAA,EAAA,OAAA,2BAAA,IAAA,IAAA,GAAA,EAAA,eAAA,IAAA,EAAA,GAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,KAAA,OAAA,MAAA,EAAA,IAAA,EAAA,QAAA,KAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,CAAA,KAAA,EAAA,KAAA,KAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,QAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,KAAA,KAAA,GAAA,aAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,GAAA,IAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EAAA,GAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,IAAA,EAAA,OAAA,oBAAA,SAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,MAAA,KAAA,IAAA,EAAA,emBAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,OAAA,KAAA,KAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,eAAA,GAAA,EAAA,SAAA,GAAA,EAAA,IAAA,EAAA,OAAA,8DAAA,KAAA,EAAA,EAAA,IAAA,OAAA,GAAA,EAAA,SAAA,GAAA,EAAA,IAAA,EAAA,OAAA,mDAAA,IAAA,EAAA,UAAA,EAAA,GAAA,GAAA,EAAA,SAAA,GAAA,EAAA,OAAA,CAAA,KAAA,EAAA,KAAA,KAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,QAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,UAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA,OAAA,wDAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,KAAA,IAAA,SAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,SAAA,GAAA,EAAA,IAAA,EAAA,OAAA,mDAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,MAAA,OAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,SAAA,GAAA,EAAA,IAAA,EAAA,OAAA,mDAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,UAAA,EAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,KAAA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,UAAA,EAAA,GAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,KAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,oBAAA,IAAA,EAAA,MAAA,EAAA,EAAA,EAAA,SAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,UAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,KAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,oBAAA,IAAA,EAAA,MAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,KAAA,IAAA,EAAA,UAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,OAAA,gCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,MAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,QAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,UAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,eAAA,GAAA,EAAA,IAAA,EAAA,OAAA,uCAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,eAAA,GAAA,EAAA,GAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,kCAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,mDAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,WAAA,EAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,sCAAA,IAAA,SAAA,EAAA,IAAA,EAAA,GAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,KAAA,OAAA,KAAA,CAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,eAAA,GAAA,EAAA,UAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,EAAA,OAAA,yDAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,eAAA,GAAA,EAAA,IAAA,EAAA,OAAA,KAAA,IAAA,EAAA,OAAA,CAAA,KAAA,EAAA,KAAA,KAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,QAAA,EAAA,EAAA,KAAA,EAAA,goBAAA,IAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,KAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,8BAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,OAAA,KAAA,KAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,oBAAA,EAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,8BAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,MAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,iBAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,iCAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,4CAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,GAAA,KAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,kCAAA,IAAA,EAAA,OAAA,GAAA,IAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,OAAA,4DAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,OAAA,2CAAA,IAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,kCAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,eAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,QAAA,KAAA,MAAA,EAAA,IAAA,EAAA,OAAA,2CAAA,IAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,kCAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,eAAA,WAAA,EAAA,GAAA,EAAA,UAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,KAAA,OAAA,MAAA,EAAA,IAAA,EAAA,QAAA,KAAA,MAAA,EAAA,IAAA,EAAA,OAAA,2CAAA,IAAA,SAAA,GAAA,GAAA,OAAA,EAAA,eAAA,GAAA,EAAA,GAAA,KAAA,SAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,EAAA,EAAA,CAAA,SAAA,EAAA,KAAA,GAAA,iBAAA,IAAA,EAAA,CAAA,SAAA,EAAA,KAAA,IAAA,EAAA,CAAA,SAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,CAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA,KAAA,MAAA,SAAA,GAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,OAAA,mBAAA,IAAA,IAAA,GAAA,WAAA,SAAA,GAAA,GAAA,OAAA,IAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,MAAA,mBAAA,IAAA,EAAA,EAAA,OAAA,GAAA,GAAA,GAAA,EAAA,EAAA,iBAAA,GAAA,OAAA,UAAA,GAAA,EAAA,IAAA,EAAA,OAAA,oCAAA,KAAA,GAAA,iBAAA,EAAA,GAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,OAAA,gCAAA,KAAA,QAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,iBAAA,KAAA,GAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,sBAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,KAAA,OAAA,MAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,KAAA,OAAA,MAAA,SAAA,GAAA,GAAA,MAAA,iBAAA,EAAA,EAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,EAAA,QAAA,CAAA,WAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,OAAA,GAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,OAAA,MAAA,MAAA,KAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,OAAA,qBAAA,IAAA,iBAAA,EAAA,GAAA,MAAA,EAAA,GAAA,GAAA,iBAAA,GAAA,SAAA,EAAA,WAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,gBAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,SAAA,SAAA,GAAA,GAAA,EAAA,kBAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,WAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,EAAA,YAAA,MAAA,EAAA,EAAA,EAAA,GAAA,EAAA,YAAA,KAAA,IAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,GAAA,GAAA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,8BAAA,IAAA,EAAA,IAAA,EAAA,OAAA,8BAAA,KAAA,MAAA,SAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,IAAA,MAAA,SAAA,EAAA,EAAA,GAAA,EAAA,uBAAA,IAAA,EAAA,kBAAA,GAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,oBAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,CAAA,KAAA,EAAA,KAAA,GAAA,EAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,QAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,MAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,IAAA,GAAA,EAAA,KAAA,GAAA,aAAA,EAAA,OAAA,EAAA,OAAA,CAAA,KAAA,EAAA,MAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,OAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,SAAA,GAAA,GAAA,MAAA,OAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,OAAA,EAAA,IAAA,EAAA,OAAA,8BAAA,IAAA,IAAA,GAAA,GAAA,OAAA,EAAA,IAAA,EAAA,OAAA,8BAAA,IAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,EAAA,MAAA,SAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,MAAA,KAAA,OAAA,MAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,uCAAA,EAAA,IAAA,EAAA,QAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,EAAA,MAAA,SAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,0BAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,MAAA,KAAA,OAAA,MAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,uCAAA,EAAA,IAAA,EAAA,SAAA,UAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,eAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,OAAA,6CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,EAAA,MAAA,SAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,oCAAA,EAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,eAAA,WAAA,EAAA,GAAA,EAAA,UAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,MAAA,KAAA,OAAA,MAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,OAAA,6CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,uCAAA,EAAA,IAAA,EAAA,QAAA,UAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,MAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,EAAA,MAAA,SAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,oCAAA,EAAA,OAAA,GAAA,IAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,OAAA,8DAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,OAAA,6CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,uCAAA,EAAA,IAAA,EAAA,QAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,KAAA,MAAA,EAAA,IAAA,EAAA,QAAA,MAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,KAAA,IAAA,EAAA,uBAAA,GAAA,IAAA,EAAA,IAAA,EAAA,SAAA,UAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,OAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MAAA,SAAA,GAAA,CAAA,GAAA,GAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,4CAAA,EAAA,IAAA,EAAA,QAAA,QAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,MAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,EAAA,MAAA,SAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,iBAAA,GAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,OAAA,qCAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,8CAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,GAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,uCAAA,EAAA,IAAA,EAAA,QAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,GAAA,EAAA,IAAA,EAAA,OAAA,QAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,6CAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,WAAA,QAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,6CAAA,EAAA,UAAA,EAAA,EAAA,KAAA,EAAA,WAAA,QAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,6CAAA,EAAA,SAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,aAAA,EAAA,IAAA,EAAA,OAAA,2CAAA,MAAA,SAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,eAAA,GAAA,EAAA,UAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,EAAA,OAAA,yDAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,MAAA,CAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA,KAAA,OAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,EAAA,EAAA,IAAA,QAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,UAAA,UAAA,OAAA,IAAA,EAAA,OAAA,EAAA,IAAA,MAAA,gCAAA,IAAA,EAAA,EAAA,IAAA,EAAA,YAAA,GAAA,EAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,MAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,UAAA,OAAA,GAAA,EAAA,UAAA,UAAA,OAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,OAAA,EAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,EAAA,EAAA,SAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,gBAAA,GAAA,EAAA,KAAA,OAAA,QAAA,SAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,IAAA,EAAA,OAAA,KAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,QAAA,KAAA,KAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,MAAA,CAAA,EAAA,EAAA,IAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,UAAA,UAAA,OAAA,GAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,EAAA,MAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,uCAAA,EAAA,IAAA,EAAA,QAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,OAAA,GAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,MAAA,MAAA,KAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,OAAA,qBAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,gBAAA,GAAA,SAAA,IAAA,EAAA,kBAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,IAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,cAAA,OAAA,IAAA,EAAA,IAAA,EAAA,OAAA,iCAAA,IAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,GAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,QAAA,EAAA,EAAA,KAAA,UAAA,SAAA,SAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,eAAA,GAAA,EAAA,UAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,EAAA,OAAA,yDAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,QAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,OAAA,2BAAA,QAAA,CAAA,IAAA,EAAA,EAAA,gBAAA,EAAA,geAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,IAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,MAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,GAAA,QAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,UAAA,OAAA,KAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,UAAA,UAAA,OAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,OAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,IAAA,UAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,OAAA,GAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,OAAA,MAAA,MAAA,KAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,OAAA,qBAAA,IAAA,iBAAA,EAAA,GAAA,MAAA,EAAA,GAAA,GAAA,iBAAA,GAAA,SAAA,EAAA,WAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,gBAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,SAAA,GAAA,GAAA,EAAA,kBAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,WAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,OAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,uBAAA,GAAA,EAAA,EAAA,MAAA,SAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,8BAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,uCAAA,EAAA,IAAA,EAAA,UACA,CAAA,aAAA,OAAA,eAAA,OAAA,kBAAA,OAAA,eAAA,OAAA,wBAAA,OAAA,mBAAA,OAAA,8BAAA,OAAA,mBAAA,OAAA,aAAA,OAAA,cAAA,OAAA,OAAA,SAAA,OAAA,CAAA,SAAA,EAAA,EAAA,GACA,EAAA,UAAA,OAAA,IACA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,iBAAA,UAAA,EAAA,EAAA,cAAA,EAAA,EAAA,yBAAA,EAAA,EAAA,qBAAA,EAAA,EAAA,yBAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,YAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA,EAAA,WAAA,EAAA,EAAA,SAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,uBAAA,SAAA,EAAA,GAAA,GAAA,QAAA,MAAA,gBAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,SAAA,GAAA,EAAA,WAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,OAAA,GAAA,IAAA,EAAA,OAAA,4CAAA,GAAA,GAAA,EAAA,WAAA,QAAA,EAAA,IAAA,EAAA,OAAA,yBAAA,GAAA,IAAA,EAAA,OAAA,wBAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,GAAA,KAAA,GAAA,EAAA,UAAA,EAAA,UAAA,OAAA,EAAA,GAAA,UAAA,EAAA,SAAA,MAAA,IAAA,EAAA,OAAA,0CAAA,GAAA,IAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,MAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,EAAA,YAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,IAAA,MAAA,EAAA,MAAA,IAAA,EAAA,OAAA,mDAAA,GAAA,OAAA,mBAAA,GAAA,CAAA,IAAA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,GAAA,IAAA,OAAA,GAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,UAAA,IAAA,EAAA,QAAA,EAAA,MAAA,GAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,SAAA,GAAA,EAAA,KAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,KAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,UAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,KAAA,MAAA,EAAA,UAAA,EAAA,MAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,EAAA,SAAA,GAAA,EAAA,KAAA,KAAA,SAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,IAAA,KAAA,WAAA,SAAA,GAAA,IAAA,EAAA,OAAA,IAAA,EAAA,WAAA,EAAA,KAAA,GAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,iBAAA,iBAAA,EAAA,KAAA,GAAA,GAAA,KAAA,MAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,MAAA,IAAA,MAAA,6CAAA,mBAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,WAAA,EAAA,GAAA,SAAA,GAAA,GAAA,EAAA,KAAA,SAAA,GAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,OAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,WAAA,IAAA,EAAA,EAAA,SAAA,SAAA,GAAA,GAAA,EAAA,OAAA,CAAA,IAAA,EAAA,EAAA,cAAA,EAAA,QAAA,SAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA,GAAA,EAAA,OAAA,GAAA,EAAA,EAAA,SAAA,CAAA,qBAAA,WAAA,OAAA,EAAA,wBAAA,oBAAA,WAAA,OAAA,EAAA,wBAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,QAAA,SAAA,GAAA,EAAA,KAAA,OAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,sBAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,MAAA,SAAA,GAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,UAAA,SAAA,GAAA,CAAA,CAAA,KAAA,aAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,SAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,QAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,QAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,SAAA,CAAA,KAAA,SAAA,YAAA,CAAA,IAAA,CAAA,KAAA,UAAA,CAAA,KAAA,UAAA,CAAA,KAAA,aAAA,CAAA,KAAA,gBAAA,CAAA,KAAA,aAAA,CAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA,KAAA,aAAA,CAAA,KAAA,WAAA,CAAA,KAAA,WAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,OAAA,UAAA,EAAA,YAAA,CAAA,EAAA,IAAA,CAAA,KAAA,SAAA,CAAA,KAAA,QAAA,UAAA,GAAA,CAAA,KAAA,QAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,UAAA,UAAA,GAAA,CAAA,KAAA,QAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,OAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,UAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,QAAA,CAAA,KAAA,WAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,WAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,cAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,SAAA,UAAA,EAAA,YAAA,CAAA,EAAA,IAAA,CAAA,KAAA,QAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,WAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,OAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,UAAA,UAAA,EAAA,YAAA,CAAA,GAAA,YAAA,CAAA,IAAA,CAAA,KAAA,WAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,SAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,SAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,YAAA,UAAA,EAAA,YAAA,CAAA,IAAA,CAAA,KAAA,UAAA,QAAA,SAAA,GAAA,IAAA,EAAA,EAAA,KAAA,GAAA,IAAA,EAAA,SAAA,EAAA,UAAA,GAAA,WAAA,IAAA,EAAA,KAAA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,mBAAA,EAAA,GAAA,EAAA,SAAA,GAAA,MAAA,mBAAA,EAAA,EAAA,SAAA,GAAA,GAAA,EAAA,MAAA,GAAA,CAAA,EAAA,IAAA,EAAA,aAAA,EAAA,YAAA,QAAA,SAAA,GAAA,OAAA,EAAA,EAAA,GAAA,KAAA,EAAA,aAAA,EAAA,YAAA,QAAA,SAAA,GAAA,OAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,WAAA,WAAA,IAAA,EAAA,EAAA,SAAA,uBAAA,GAAA,IAAA,EAAA,WAAA,CAAA,IAAA,EAAA,IAAA,EAAA,iBAAA,8CAAA,OAAA,EAAA,KAAA,EAAA,GAAA,SAAA,IAAA,EAAA,QAAA,EAAA,MAAA,EAAA,WAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,CAAA,GAAA,OAAA,GAAA,EAAA,GAAA,MAAA,KAAA,KAAA,GAAA,EAAA,IAAA,IAAA,EAAA,UAAA,SAAA,GAAA,EAAA,EAAA,UAAA,GAAA,KAAA,OAAA,EAAA,UAAA,EAAA,EAAA,QAAA,GACA,CAAA,gBAAA,OAAA,aAAA,OAAA,wBAAA,OAAA,oBAAA,OAAA,wBAAA,OAAA,mBAAA,OAAA,eAAA,OAAA,eAAA,OAAA,kBAAA,OAAA,sBAAA,OAAA,OAAA,SAAA,OAAA,CAAA,SAAA,EAAA,EAAA,GACA,EAAA,UAAA,OAAA,IACA,EAAA,EAAA,UAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAA,CAAA,WAAA,EAAA,6BAAA,OAAA,EAAA,KAAA,EAAA,aAAA,KAAA,EAAA,aAAA,OAAA,EAAA,eAAA,MAAA,EAAA,qBAAA,OAAA,eAAA,EAAA,KAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,IAAA,EAAA,IAAA,EAAA,YAAA,MACA,CAAA,4BAAA,OAAA,YAAA,OAAA,cAAA,OAAA,mBAAA,OAAA,OAAA,UAAA,GAAA,CAAA,QAAA;;AC/EA,OAAA,QAAA,SAAA,EAAA,GAGA,OAFA,EAAA,iBAAA,EAAA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,OAAA,SAAA,EAAA,GACA,OAAA,MAAA,QAAA,IAAA,EAAA,EACA,EAAA,OAAA,EAAA,EAAA,EAAA,IAGA,EAAA,OAAA,IAEA,IAVA,CAAA,EAAA,GANA,MAAA,QAAA,GACA,EAAA,IAAA,SAAA,GAAA,OAAA,IAEA;;;ACNA,IAOIa,EACAC,EARAC,EAAUpD,OAAOC,QAAU,GAU/B,SAASoD,IACC,MAAA,IAAIC,MAAM,mCAEpB,SAASC,IACC,MAAA,IAAID,MAAM,qCAsBpB,SAASE,EAAWC,GACZP,GAAAA,IAAqBlE,WAEdA,OAAAA,WAAWyE,EAAK,GAGvB,IAACP,IAAqBG,IAAqBH,IAAqBlE,WAEzDA,OADPkE,EAAmBlE,WACZA,WAAWyE,EAAK,GAEvB,IAEOP,OAAAA,EAAiBO,EAAK,GAC/B,MAAM7K,GACA,IAEOsK,OAAAA,EAAiBQ,KAAK,KAAMD,EAAK,GAC1C,MAAM7K,GAEGsK,OAAAA,EAAiBQ,KAAK,KAAMD,EAAK,KAMpD,SAASE,EAAgBC,GACjBT,GAAAA,IAAuBjE,aAEhBA,OAAAA,aAAa0E,GAGpB,IAACT,IAAuBI,IAAwBJ,IAAuBjE,aAEhEA,OADPiE,EAAqBjE,aACdA,aAAa0E,GAEpB,IAEOT,OAAAA,EAAmBS,GAC5B,MAAOhL,GACD,IAEOuK,OAAAA,EAAmBO,KAAK,KAAME,GACvC,MAAOhL,GAGEuK,OAAAA,EAAmBO,KAAK,KAAME,MAjEhD,WACO,IAEIV,EADsB,mBAAflE,WACYA,WAEAqE,EAEzB,MAAOzK,GACLsK,EAAmBG,EAEnB,IAEIF,EADwB,mBAAjBjE,aACcA,aAEAqE,EAE3B,MAAO3K,GACLuK,EAAqBI,GAjB5B,GAwED,IAEIM,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAahJ,OACbiJ,EAAQD,EAAaK,OAAOJ,GAE5BE,GAAc,EAEdF,EAAMjJ,QACNsJ,KAIR,SAASA,IACDJ,IAAAA,EAAAA,CAGAK,IAAAA,EAAUZ,EAAWS,GACzBF,GAAW,EAGLM,IADFA,IAAAA,EAAMP,EAAMjJ,OACVwJ,GAAK,CAGA,IAFPR,EAAeC,EACfA,EAAQ,KACCE,EAAaK,GACdR,GACAA,EAAaG,GAAYM,MAGjCN,GAAc,EACdK,EAAMP,EAAMjJ,OAEhBgJ,EAAe,KACfE,GAAW,EACXJ,EAAgBS,IAiBpB,SAASG,EAAKd,EAAKe,GACVf,KAAAA,IAAMA,EACNe,KAAAA,MAAQA,EAYjB,SAASC,KA5BTrB,EAAQsB,SAAW,SAAUjB,GACrB/I,IAAAA,EAAO,IAAIiK,MAAM/J,UAAUC,OAAS,GACpCD,GAAAA,UAAUC,OAAS,EACd,IAAA,IAAIF,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAClCD,EAAKC,EAAI,GAAKC,UAAUD,GAGhCmJ,EAAMc,KAAK,IAAIL,EAAKd,EAAK/I,IACJ,IAAjBoJ,EAAMjJ,QAAiBkJ,GACvBP,EAAWW,IASnBI,EAAKM,UAAUP,IAAM,WACZb,KAAAA,IAAI3I,MAAM,KAAM,KAAK0J,QAE9BpB,EAAQ0B,MAAQ,UAEhB1B,EAAQ2B,IAAM,GACd3B,EAAQ4B,KAAO,GACf5B,EAAQ6B,QAAU,GAClB7B,EAAQ8B,SAAW,GAInB9B,EAAQ+B,GAAKV,EACbrB,EAAQgC,YAAcX,EACtBrB,EAAQpG,KAAOyH,EACfrB,EAAQiC,IAAMZ,EACdrB,EAAQkC,eAAiBb,EACzBrB,EAAQmC,mBAAqBd,EAC7BrB,EAAQoC,KAAOf,EACfrB,EAAQqC,gBAAkBhB,EAC1BrB,EAAQsC,oBAAsBjB,EAE9BrB,EAAQuC,UAAY,SAAUC,GAAe,MAAA,IAE7CxC,EAAQyC,QAAU,SAAUD,GAClB,MAAA,IAAItC,MAAM,qCAGpBF,EAAQ0C,IAAM,WAAqB,MAAA,KACnC1C,EAAQ2C,MAAQ,SAAUC,GAChB,MAAA,IAAI1C,MAAM,mCAEpBF,EAAQ6C,MAAQ,WAAoB,OAAA;;;ACvIpC,IAAA,EAAA,QAAA,WA9CA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EACA,GAAA,EAWA,SAAA,EAAA,GACA,SAAA,IACA,GAAA,EAAA,EAAA,GACA,EAAA,KAEA,EAAA,EAAA,SAAA,GACA,IAGA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,GAAA,GACA,KAAA,GAAA,IACA,EAAA,GArBA,MAAA,QAAA,IACA,EAAA,GACA,EAAA,EAAA,SAEA,EAAA,OAAA,KAAA,GACA,EAAA,GACA,EAAA,EAAA,QAmBA,EAGA,EAEA,EAAA,QAAA,SAAA,GACA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAIA,EAAA,QAAA,SAAA,EAAA,GACA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OATA,EAAA,MAaA,GAAA,EA9CA,OAAA,QAAA;;ACAA,OAAA,QAAA,EAEA,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,gBAEA,SAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EAAA,CACA,IAAA,EAAA,EAEA,KADA,EAAA,OAAA,SAAA,cAAA,IAEA,MAAA,IAAA,MAAA,IAAA,EAAA,sCAIA,IAAA,EACA,MAAA,IAAA,MAAA,IAAA,EAAA,iCAOA,IAAA,EAQA,MAZA,mBAAA,IACA,EAAA,CAAA,OAAA,IAKA,EAAA,iBAAA,YAAA,GAAA,GACA,EAAA,iBAAA,WAAA,GAAA,GACA,EAAA,iBAAA,YAAA,GAAA,GACA,EAAA,iBAAA,OAAA,GAAA,GAGA,WACA,IACA,EAAA,oBAAA,YAAA,GAAA,GACA,EAAA,oBAAA,WAAA,GAAA,GACA,EAAA,oBAAA,YAAA,GAAA,GACA,EAAA,oBAAA,OAAA,GAAA,IAGA,SAAA,EAAA,GAQA,OAPA,EAAA,aACA,EAAA,YAAA,GAIA,EAAA,kBACA,EAAA,kBACA,EAGA,SAAA,EAAA,GAQA,GAPA,EAAA,kBACA,EAAA,iBAEA,EAAA,YACA,EAAA,WAAA,GAGA,EAAA,aAAA,MAAA,CAGA,IAAA,EAAA,MAAA,KAAA,EAAA,aAAA,OACA,EAAA,EAAA,OAAA,SAAA,GAAA,MAAA,SAAA,EAAA,OACA,EAAA,EAAA,OAAA,SAAA,GAAA,MAAA,WAAA,EAAA,OAEA,GAAA,IAAA,EAAA,SAAA,EAAA,WAAA,OACA,GAAA,IAAA,EAAA,SAAA,EAAA,OAAA,OACA,GAAA,IAAA,EAAA,QAAA,IAAA,EAAA,OAAA,OAQA,OALA,EAAA,UAAA,IAAA,QACA,aAAA,GAEA,EAAA,aAAA,WAAA,QAEA,EAGA,SAAA,EAAA,GAWA,OAVA,EAAA,kBACA,EAAA,iBAEA,EAAA,aACA,EAAA,YAAA,GAGA,aAAA,GACA,EAAA,WAAA,EAAA,KAEA,EAGA,SAAA,EAAA,GACA,EAAA,kBACA,EAAA,iBAEA,EAAA,aACA,EAAA,YAAA,GAGA,aAAA,GACA,IAEA,IAAA,EAAA,CACA,EAAA,EAAA,QACA,EAAA,EAAA,SAIA,EAAA,EAAA,aAAA,QAAA,QASA,GARA,GAAA,EAAA,YACA,EAAA,WAAA,EAAA,GAOA,EAAA,QAAA,EAAA,aAAA,MAAA,CACA,IAAA,EAAA,EAAA,aAAA,MAGA,EAAA,MAAA,KAAA,EAAA,aAAA,OAAA,OAAA,SAAA,GACA,MAAA,SAAA,EAAA,OAGA,GAAA,IAAA,EAAA,OAAA,OAEA,EAAA,EAAA,IAAA,SAAA,GACA,OAAA,SAAA,GACA,EAAA,EAAA,mBAAA,MAEA,SAAA,EAAA,GAGA,GAAA,EAAA,MAAA,EAEA,IAAA,EAAA,EAAA,GAEA,EAAA,EAAA,OAAA,SAAA,GACA,OAAA,EAAA,SAGA,EAAA,EAAA,OAAA,SAAA,GACA,OAAA,EAAA,cAGA,EAAA,OAAA,EAAA,EAAA,EAAA,KAIA,OAAA,EAGA,SAAA,IACA,EAAA,UAAA,OAAA,SAIA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,GAEA,GAAA,EAAA,OACA,EAAA,KAAA,SAAA,GACA,EAAA,SAAA,EAAA,SACA,EAAA,QAAA,EACA,EAAA,aAAA,EACA,EAAA,KAAA,IACA,SAAA,GACA,EAAA,UAEA,GAAA,EAAA,YAAA,CACA,IAAA,EAAA,EAAA,gBAIA,SAAA,IACA,EAAA,YAAA,SAAA,GACA,EAAA,OAAA,GACA,EAAA,EAAA,OAAA,MAAA,KAAA,IACA,KAQA,EAAA,EAAA,IAAA,SAAA,GACA,OAAA,SAAA,GACA,EAAA,EAAA,MAEA,SAAA,EAAA,GACA,EACA,EAAA,IAEA,EAAA,KAAA,CACA,SAAA,EAAA,SACA,KAAA,EAAA,KACA,QAAA,EACA,aAAA,IAEA,EAAA,KAAA,QA7BA;;;AC5KA,aAEA,MAAM,OAAE/F,GAAWkC,QAAQ,aACrB,GAAE8D,EAAF,KAAMC,EAAN,OAAYC,GAAWhE,QAAQ,SAC/BiE,EAAK,IAAIH,EAAGI,MACZC,EAAWnE,QAAQ,aAuDzB,SAASoE,IACDC,MAAAA,uEAA8EvG,IACpFgG,EAAGQ,UAAU,cAAeD,EAASE,IAChCA,GAAKC,QAAQ1I,MAAM,+BAAgCyI,GAGtDT,EAAGQ,UAAU,oBADA,uBAC4BC,IACpCA,GAAKC,QAAQ1I,MAAM,6BAA8ByI,OA3D1D/G,OAAOsG,GAAKA,EAEZtG,OAAOiH,KAAOV,EACdvG,OAAOwG,OAASA,EAChBQ,QAAQE,KAAK,mGACbF,QAAQE,KAAK,kDACbF,QAAQE,KAAK,qEA0Db9G,OAAOC,QAAU,CACfuG,QAAAA,EACAN,GAAAA,EACAG,GAAAA,EACAF,KAAAA,EACAC,OAAAA;;AC7EF,aAEA,MAAM,QAAElL,GAAYkH,QAAQ,kBACtB2E,EAAU3E,QAAQ,cAClB,OAAElC,GAAWkC,QAAQ,YACrB4E,EAAa5E,QAAQ,gBAO3B,SAAS6E,IACDC,MAAAA,EAAQ3J,SAAS4J,iBAAiB,kBACpCD,GAEJA,EAAMzH,QAAQ2H,IACNP,MAAAA,EAAOO,EAAKC,UAClBD,EAAKC,UAAY,GAEXC,MAAAA,EAAI/J,SAASgK,cAAc,KACjCD,EAAEpN,KAAO2M,EACTS,EAAED,UAAYR,EACdS,EAAE7I,OAAS,SACX2I,EAAKI,YAAYF,KAOrB,SAASjF,IACJ,KAAE,kBAAmBhG,WAEtB,YADAuK,QAAQa,IAAI,gEAKRC,MAAAA,EAAK,IAAIxM,2CAAiDyM,mBAAmBzH,MAGnFwH,EAAGE,YAAY5M,KAAK,KAClBiM,IACAF,EAAQ1E,UAIVqF,EAAG3K,iBAAiB,YAAcyC,IAC5BA,EAAMV,UACRkI,EAAWR,YAKfkB,EAAG1L,WAEL4D,OAAOiI,OAAS,CACdxF,MAAAA,GAGFrC,OAAOC,QAAQoC,MAAQA;;oECvDvB,IAAA,EAAA,QAAA,YAIM,EAAY,EAUZ,EAAuB,WAK7B,EAAA,WAKE,SAAA,EAAY,EAAc,EAAgC,GAIxD,QAJwD,IAAA,IAAA,GAAA,GAAA,KAAA,UAAA,EAJhD,KAAA,MAA4B,KAC5B,KAAA,UAAuC,GAI1C,IACH,EAAe,CAAC,EAAG,EAAA,eAAgB,EAAA,gBAAiB,EAAA,iBAElD,EAAM,CACR,KAAK,MAAQ,IAAI,YAAY,EAAO,GACpC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAQ,EAC1B,KAAK,IAAI,EAAG,GAGhB,KAAK,OAAS,EAiMlB,OA9LS,EAAA,UAAA,IAAP,SAAW,GACT,IAAM,EAAa,KAAK,MAAM,EAAQ,EAAS,GAC/C,MAAO,CACL,KAAK,MAAM,EAAQ,EAAS,GAC3B,EAAa,EACV,KAAK,UAAU,GACf,EAAe,OAAO,aAAa,GAAc,GACrD,KAAK,MAAM,EAAQ,EAAS,GAC3B,EAAa,EACV,KAAK,UAAU,GAAO,WAAW,KAAK,UAAU,GAAO,OAAS,GAChE,IAID,EAAA,UAAA,SAAP,SAAgB,GACd,OAAO,KAAK,MAAM,EAAQ,EAAS,IAG9B,EAAA,UAAA,IAAP,SAAW,EAAe,GACxB,KAAK,MAAM,EAAQ,EAAS,GAAiB,EAAM,GAC/C,EAAM,GAAG,OAAS,GACpB,KAAK,UAAU,GAAS,EAAM,GAC9B,KAAK,MAAM,EAAQ,EAAS,GAAkB,EAAQ,GAEtD,KAAK,MAAM,EAAQ,EAAS,GAAkB,EAAM,GAAG,WAAW,GAEpE,KAAK,MAAM,EAAQ,EAAS,GAAiB,EAAM,IAG9C,EAAA,UAAA,YAAP,SAAmB,EAAa,EAAW,GAEzC,GADA,GAAO,KAAK,OACR,EAAI,KAAK,OAAS,EAAK,CACzB,IAAK,IAAI,EAAI,KAAK,OAAS,EAAM,EAAI,EAAG,GAAK,IAAK,EAChD,KAAK,IAAI,EAAM,EAAI,EAAG,KAAK,IAAI,EAAM,IAEvC,IAAS,EAAI,EAAG,EAAI,IAAK,EACvB,KAAK,IAAI,EAAM,EAAG,QAGpB,IAAS,EAAI,EAAK,EAAI,KAAK,SAAU,EACnC,KAAK,IAAI,EAAG,IAKX,EAAA,UAAA,YAAP,SAAmB,EAAa,EAAW,GAEzC,GADA,GAAO,KAAK,OACR,EAAI,KAAK,OAAS,EAAK,CACzB,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,OAAS,EAAM,IAAK,EAC3C,KAAK,IAAI,EAAM,EAAG,KAAK,IAAI,EAAM,EAAI,IAEvC,IAAS,EAAI,KAAK,OAAS,EAAG,EAAI,KAAK,SAAU,EAC/C,KAAK,IAAI,EAAG,QAGd,IAAS,EAAI,EAAK,EAAI,KAAK,SAAU,EACnC,KAAK,IAAI,EAAG,IAKX,EAAA,UAAA,aAAP,SAAoB,EAAe,EAAa,GAC9C,KAAO,EAAQ,GAAQ,EAAQ,KAAK,QAClC,KAAK,IAAI,IAAS,IAIf,EAAA,UAAA,OAAP,SAAc,EAAc,GAC1B,GAAI,IAAS,KAAK,OAAlB,CAGA,GAAI,EAAO,KAAK,OAAQ,CACtB,IAAM,EAAO,IAAI,YAAY,EAAO,GAChC,KAAK,SACH,EAAO,EAAY,KAAK,MAAM,OAChC,EAAK,IAAI,KAAK,MAAM,SAAS,EAAG,EAAO,IAEvC,EAAK,IAAI,KAAK,QAGlB,KAAK,MAAQ,EACb,IAAK,IAAI,EAAI,KAAK,OAAQ,EAAI,IAAQ,EACpC,KAAK,IAAI,EAAG,QAGd,GAAI,EAAM,EACF,EAAO,IAAI,YAAY,EAAO,IAC/B,IAAI,KAAK,MAAM,SAAS,EAAG,EAAO,IACvC,KAAK,MAAQ,EAEb,IAAM,EAAO,OAAO,KAAK,KAAK,WAC9B,IAAS,EAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CACpC,IAAM,EAAM,SAAS,EAAK,GAAI,IAC1B,GAAO,UACF,KAAK,UAAU,SAI1B,KAAK,MAAQ,KACb,KAAK,UAAY,GAGrB,KAAK,OAAS,IAIT,EAAA,UAAA,KAAP,SAAY,GACV,KAAK,UAAY,GACjB,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,SAAU,EACjC,KAAK,IAAI,EAAG,IAKT,EAAA,UAAA,SAAP,SAAgB,GASd,IAAK,IAAM,KARP,KAAK,SAAW,EAAK,OACvB,KAAK,MAAQ,IAAI,YAAY,EAAK,OAGlC,KAAK,MAAM,IAAI,EAAK,OAEtB,KAAK,OAAS,EAAK,OACnB,KAAK,UAAY,GACA,EAAK,UACpB,KAAK,UAAU,GAAM,EAAK,UAAU,GAEtC,KAAK,UAAY,EAAK,WAIjB,EAAA,UAAA,MAAP,WACE,IAAM,EAAU,IAAI,EAAW,GAK/B,IAAK,IAAM,KAFX,EAAQ,MAAQ,IAAI,YAAY,KAAK,OACrC,EAAQ,OAAS,KAAK,OACL,KAAK,UACpB,EAAQ,UAAU,GAAM,KAAK,UAAU,GAGzC,OADA,EAAQ,UAAY,KAAK,UAClB,GAGF,EAAA,UAAA,iBAAP,WACE,IAAK,IAAI,EAAI,KAAK,OAAS,EAAG,GAAK,IAAK,EACtC,GAAgD,IAA5C,KAAK,MAAM,EAAI,EAAS,GAC1B,OAAO,EAAI,KAAK,MAAM,EAAI,EAAS,GAGvC,OAAO,GAGF,EAAA,UAAA,cAAP,SAAqB,EAAiB,EAAgB,EAAiB,EAAgB,GACrF,IAAM,EAAU,EAAI,MACpB,GAAI,EACF,IAAK,IAAI,EAAO,EAAS,EAAG,GAAQ,EAAG,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,IAC7B,KAAK,OAAO,EAAU,GAAQ,EAAY,GAAK,GAAS,EAAS,GAAQ,EAAY,QAIzF,IAAS,EAAO,EAAG,EAAO,EAAQ,IAChC,IAAS,EAAI,EAAG,EAAI,EAAW,IAC7B,KAAK,OAAO,EAAU,GAAQ,EAAY,GAAK,GAAS,EAAS,GAAQ,EAAY,GAM3F,IAAM,EAAkB,OAAO,KAAK,EAAI,WACxC,IAAS,EAAI,EAAG,EAAI,EAAgB,OAAQ,IAAK,CAC/C,IAAM,EAAM,SAAS,EAAgB,GAAI,IACrC,GAAO,IACT,KAAK,UAAU,EAAM,EAAS,GAAW,EAAI,UAAU,MAKtD,EAAA,UAAA,kBAAP,SAAyB,EAA4B,EAAsB,QAAlD,IAAA,IAAA,GAAA,QAA4B,IAAA,IAAA,EAAA,QAAsB,IAAA,IAAA,EAAiB,KAAK,QAC3F,IACF,EAAS,KAAK,IAAI,EAAQ,KAAK,qBAGjC,IADA,IAAI,EAAS,GACN,EAAW,GAAQ,CACxB,IAAM,EAAa,KAAK,MAAM,EAAW,EAAS,GAClD,GAAW,EAAa,EAAwB,KAAK,UAAU,GAAY,EAAe,OAAO,aAAa,GAAc,EAAA,qBAC5H,GAAY,KAAK,MAAM,EAAW,EAAS,IAAkB,EAE/D,OAAO,GAEX,EAhNA,GAAa,QAAA,WAAA;;oECnBb,IAAA,EAAA,QAAA,YAgBA,SAAgB,EAA6B,EAAkC,EAAiB,EAAiB,GAK/G,IAFA,IAAM,EAAqB,GAElB,EAAI,EAAG,EAAI,EAAM,OAAS,EAAG,IAAK,CAEzC,IAAI,EAAI,EACJ,EAAW,EAAM,MAAM,GAC3B,GAAK,EAAS,UAAd,CAMA,IADA,IAAM,EAA6B,CAAC,EAAM,IAAI,IACvC,EAAI,EAAM,QAAU,EAAS,WAClC,EAAa,KAAK,GAClB,EAAW,EAAM,MAAM,GAKzB,GAAI,GAAmB,GAAK,EAAkB,EAC5C,GAAK,EAAa,OAAS,MAD7B,CAUA,IAJA,IAAI,EAAgB,EAChB,EAAU,EAA4B,EAAc,EAAe,GACnE,EAAe,EACf,EAAS,EACN,EAAe,EAAa,QAAQ,CACzC,IAAM,EAAuB,EAA4B,EAAc,EAAc,GAC/E,EAAoB,EAAuB,EAC3C,EAAqB,EAAU,EAC/B,EAAc,KAAK,IAAI,EAAmB,GAEhD,EAAa,GAAe,cAAc,EAAa,GAAe,EAAQ,EAAS,GAAa,IAEpG,GAAW,KACK,IACd,IACA,EAAU,IAEZ,GAAU,KACK,IACb,IACA,EAAS,GAIK,IAAZ,GAAmC,IAAlB,GAC2C,IAA1D,EAAa,EAAgB,GAAG,SAAS,EAAU,KACrD,EAAa,GAAe,cAAc,EAAa,EAAgB,GAAI,EAAU,EAAG,IAAW,GAAG,GAEtG,EAAa,EAAgB,GAAG,IAAI,EAAU,EAAG,EAAA,iBAMvD,EAAa,GAAe,aAAa,EAAS,EAAS,EAAA,gBAI3D,IADA,IAAI,EAAgB,EACX,EAAI,EAAa,OAAS,EAAG,EAAI,IACpC,EAAI,GAAwD,IAAvC,EAAa,GAAG,oBADE,IAEzC,IAMA,EAAgB,IAClB,EAAS,KAAK,EAAI,EAAa,OAAS,GACxC,EAAS,KAAK,IAGhB,GAAK,EAAa,OAAS,IAE7B,OAAO,EAQT,SAAgB,EAA4B,EAAkC,GAM5E,IALA,IAAM,EAAmB,GAErB,EAAoB,EACpB,EAAoB,EAAS,GAC7B,EAAoB,EACf,EAAI,EAAG,EAAI,EAAM,OAAQ,IAChC,GAAI,IAAsB,EAAG,CAC3B,IAAM,EAAgB,IAAW,GAGjC,EAAM,KAAK,SAAU,CACnB,MAAO,EAAI,EACX,OAAQ,IAGV,GAAK,EAAgB,EACrB,GAAqB,EACrB,EAAoB,IAAW,QAE/B,EAAO,KAAK,GAGhB,MAAO,CACL,OAAM,EACN,aAAc,GAUlB,SAAgB,EAA2B,EAAkC,GAG3E,IADA,IAAM,EAA+B,GAC5B,EAAI,EAAG,EAAI,EAAU,OAAQ,IACpC,EAAe,KAAK,EAAM,IAAI,EAAU,KAI1C,IAAS,EAAI,EAAG,EAAI,EAAe,OAAQ,IACzC,EAAM,IAAI,EAAG,EAAe,IAE9B,EAAM,OAAS,EAAU,OAiB3B,SAAgB,EAA+B,EAA4B,EAAiB,GAS1F,IARA,IAAM,EAA2B,GAC3B,EAAc,EAAa,IAAI,SAAC,EAAG,GAAM,OAAA,EAA4B,EAAc,EAAG,KAAU,OAAO,SAAC,EAAG,GAAM,OAAA,EAAI,IAIvH,EAAS,EACT,EAAU,EACV,EAAiB,EACd,EAAiB,GAAa,CACnC,GAAI,EAAc,EAAiB,EAAS,CAE1C,EAAe,KAAK,EAAc,GAClC,MAEF,GAAU,EACV,IAAM,EAAmB,EAA4B,EAAc,EAAS,GACxE,EAAS,IACX,GAAU,EACV,KAEF,IAAM,EAA8D,IAA/C,EAAa,GAAS,SAAS,EAAS,GACzD,GACF,IAEF,IAAM,EAAa,EAAe,EAAU,EAAI,EAChD,EAAe,KAAK,GACpB,GAAkB,EAGpB,OAAO,EAGT,SAAgB,EAA4B,EAAqB,EAAW,GAE1E,GAAI,IAAM,EAAM,OAAS,EACvB,OAAO,EAAM,GAAG,mBAKlB,IAAM,EAAO,EAAM,GAAG,IAAI,EAAO,GAC3B,EAA4C,KAA/B,EAAK,EAAA,uBAAgE,IAAhC,EAAK,EAAA,uBACvD,EAA2D,IAA7B,EAAM,EAAI,GAAG,SAAS,GAC1D,OAAI,GAAc,EACT,EAAO,EAET,EAvMT,QAAA,6BAAA,EAyFA,QAAA,4BAAA,EAmCA,QAAA,2BAAA,EA4BA,QAAA,+BAAA,EAiCA,QAAA,4BAAA;;oECnMA,IAAA,EAAA,WAIE,SAAA,IAHU,KAAA,aAA8B,GAC9B,KAAA,aAAuB,EAiCnC,OAzBS,EAAA,UAAA,QAAP,WACE,KAAK,aAAc,EACnB,KAAK,aAAa,QAAQ,SAAA,GAAK,OAAA,EAAE,YACjC,KAAK,aAAa,OAAS,GAOtB,EAAA,UAAA,SAAP,SAAuC,GACrC,KAAK,aAAa,KAAK,IAQlB,EAAA,UAAA,WAAP,SAAyC,GACvC,IAAM,EAAQ,KAAK,aAAa,QAAQ,IACzB,IAAX,GACF,KAAK,aAAa,OAAO,EAAO,IAGtC,EAnCA,GAAsB,QAAA,WAAA;;yaCJtB,IAAA,EAAA,QAAA,eAEA,EAAA,SAAA,GAGE,SAAA,IAAA,IAAA,EACE,EAAA,KAAA,OAAO,YAGP,EAAK,QAAgB,EAAM,SAAW,KAkF1C,OAzFkC,EAAA,EAAA,GAUzB,EAAA,UAAA,GAAP,SAAU,EAAc,GACtB,KAAK,QAAQ,GAAQ,KAAK,QAAQ,IAAS,GAC3C,KAAK,QAAQ,GAAM,KAAK,IAQnB,EAAA,UAAA,sBAAP,SAA6B,EAAc,GAA3C,IAAA,EAAA,KAEE,KAAK,GAAG,EAAM,GACd,IAAI,GAAW,EACf,MAAO,CACL,QAAS,WACH,IAIJ,EAAK,IAAI,EAAM,GACf,GAAW,MAKV,EAAA,UAAA,IAAP,SAAW,EAAc,GACvB,GAAK,KAAK,QAAQ,GAOlB,IAHA,IAAM,EAAM,KAAK,QAAQ,GACrB,EAAI,EAAI,OAEL,KACL,GAAI,EAAI,KAAO,EAEb,YADA,EAAI,OAAO,EAAG,IAMb,EAAA,UAAA,mBAAP,SAA0B,GACpB,KAAK,QAAQ,WACP,KAAK,QAAQ,IAIlB,EAAA,UAAA,KAAP,SAAY,OAAc,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GACxB,GAAK,KAAK,QAAQ,GAIlB,IADA,IAAM,EAAM,KAAK,QAAQ,GAChB,EAAI,EAAG,EAAI,EAAI,OAAQ,IAC9B,EAAI,GAAG,MAAM,KAAM,IAIhB,EAAA,UAAA,uBAAP,SAA8B,OAAc,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GAC1C,GAAK,KAAK,QAAQ,GAKlB,IAFA,IAAM,EAAM,KAAK,QAAQ,GACrB,EAAS,EAAI,OACR,EAAI,EAAG,EAAI,EAAI,OAAQ,IAC9B,EAAI,GAAG,MAAM,KAAM,GACnB,GAAK,EAAS,EAAI,OAClB,EAAS,EAAI,QAIV,EAAA,UAAA,UAAP,SAAiB,GACf,OAAO,KAAK,QAAQ,IAAS,IAGxB,EAAA,UAAA,QAAP,WACE,EAAA,UAAM,QAAO,KAAA,MACb,KAAK,QAAU,IAEnB,EAzFA,CAAkC,EAAA,YAArB,QAAA,aAAA;;yaCJb,IAAA,EAAA,QAAA,kBAiBA,EAAA,SAAA,GAKE,SAAA,EACU,GADV,IAAA,EAGE,EAAA,KAAA,OAAO,YAFC,EAAA,WAAA,EAGR,EAAK,OAAS,IAAI,MAAS,EAAK,YAChC,EAAK,YAAc,EACnB,EAAK,QAAU,IAmMnB,OA9MqC,EAAA,EAAA,GAcnC,OAAA,eAAW,EAAA,UAAA,YAAS,KAApB,WACE,OAAO,KAAK,gBAGd,SAAqB,GAEnB,GAAI,KAAK,aAAe,EAAxB,CAOA,IADA,IAAM,EAAW,IAAI,MAAqB,GACjC,EAAI,EAAG,EAAI,KAAK,IAAI,EAAc,KAAK,QAAS,IACvD,EAAS,GAAK,KAAK,OAAO,KAAK,gBAAgB,IAEjD,KAAK,OAAS,EACd,KAAK,WAAa,EAClB,KAAK,YAAc,oCAGrB,OAAA,eAAW,EAAA,UAAA,SAAM,KAAjB,WACE,OAAO,KAAK,aAGd,SAAkB,GAChB,GAAI,EAAY,KAAK,QACnB,IAAK,IAAI,EAAI,KAAK,QAAS,EAAI,EAAW,IACxC,KAAK,OAAO,QAAK,EAGrB,KAAK,QAAU,mCAWV,EAAA,UAAA,IAAP,SAAW,GACT,OAAO,KAAK,OAAO,KAAK,gBAAgB,KAWnC,EAAA,UAAA,IAAP,SAAW,EAAe,GACxB,KAAK,OAAO,KAAK,gBAAgB,IAAU,GAQtC,EAAA,UAAA,KAAP,SAAY,GACV,KAAK,OAAO,KAAK,gBAAgB,KAAK,UAAY,EAC9C,KAAK,UAAY,KAAK,YACxB,KAAK,cAAgB,KAAK,YAAc,KAAK,WAC7C,KAAK,uBAAuB,OAAQ,IAEpC,KAAK,WASF,EAAA,UAAA,QAAP,WACE,GAAI,KAAK,UAAY,KAAK,WACxB,MAAM,IAAI,MAAM,4CAIlB,OAFA,KAAK,cAAgB,KAAK,YAAc,KAAK,WAC7C,KAAK,uBAAuB,OAAQ,GAC7B,KAAK,OAAO,KAAK,gBAAgB,KAAK,QAAU,KAMzD,OAAA,eAAW,EAAA,UAAA,SAAM,KAAjB,WACE,OAAO,KAAK,UAAY,KAAK,4CAOxB,EAAA,UAAA,IAAP,WACE,OAAO,KAAK,OAAO,KAAK,gBAAgB,KAAK,UAAY,KAYpD,EAAA,UAAA,OAAP,SAAc,EAAe,OAAqB,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GAEhD,GAAI,EAAa,CACf,IAAK,IAAI,EAAI,EAAO,EAAI,KAAK,QAAU,EAAa,IAClD,KAAK,OAAO,KAAK,gBAAgB,IAAM,KAAK,OAAO,KAAK,gBAAgB,EAAI,IAE9E,KAAK,SAAW,EAIlB,IAAS,EAAI,KAAK,QAAU,EAAG,GAAK,EAAO,IACzC,KAAK,OAAO,KAAK,gBAAgB,EAAI,EAAM,SAAW,KAAK,OAAO,KAAK,gBAAgB,IAEzF,IAAS,EAAI,EAAG,EAAI,EAAM,OAAQ,IAChC,KAAK,OAAO,KAAK,gBAAgB,EAAQ,IAAM,EAAM,GAIvD,GAAI,KAAK,QAAU,EAAM,OAAS,KAAK,WAAY,CACjD,IAAM,EAAe,KAAK,QAAU,EAAM,OAAU,KAAK,WACzD,KAAK,aAAe,EACpB,KAAK,QAAU,KAAK,WACpB,KAAK,uBAAuB,OAAQ,QAEpC,KAAK,SAAW,EAAM,QAQnB,EAAA,UAAA,UAAP,SAAiB,GACX,EAAQ,KAAK,UACf,EAAQ,KAAK,SAEf,KAAK,aAAe,EACpB,KAAK,SAAW,EAChB,KAAK,uBAAuB,OAAQ,IAG/B,EAAA,UAAA,cAAP,SAAqB,EAAe,EAAe,GACjD,KAAI,GAAS,GAAb,CAGA,GAAI,EAAQ,GAAK,GAAS,KAAK,QAC7B,MAAM,IAAI,MAAM,+BAElB,GAAI,EAAQ,EAAS,EACnB,MAAM,IAAI,MAAM,gDAGlB,GAAI,EAAS,EAAG,CACd,IAAK,IAAI,EAAI,EAAQ,EAAG,GAAK,EAAG,IAC9B,KAAK,IAAI,EAAQ,EAAI,EAAQ,KAAK,IAAI,EAAQ,IAEhD,IAAM,EAAgB,EAAQ,EAAQ,EAAU,KAAK,QACrD,GAAI,EAAe,EAEjB,IADA,KAAK,SAAW,EACT,KAAK,QAAU,KAAK,YACzB,KAAK,UACL,KAAK,cACL,KAAK,uBAAuB,OAAQ,QAIxC,IAAS,EAAI,EAAG,EAAI,EAAO,IACzB,KAAK,IAAI,EAAQ,EAAI,EAAQ,KAAK,IAAI,EAAQ,MAW5C,EAAA,UAAA,gBAAR,SAAwB,GACtB,OAAQ,KAAK,YAAc,GAAS,KAAK,YAE7C,EA9MA,CAAqC,EAAA,cAAxB,QAAA,aAAA;;oECdA,QAAA,cAAgB,IAChB,QAAA,uBAAyB,IACzB,QAAA,YAAc,GAEd,QAAA,wBAA0B;;;ACwmBN,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA9mBjC,IAA0C,EAAA,QAAA,gBAC0I,EAAA,QAAA,kBACnG,EAAA,QAAA,yBAC5B,EAAA,QAAA,yBACE,EAAA,QAAA,0BAG1C,QAAA,aAAe,IAAa,EAAa,eAAI,EAC7C,QAAA,qBAAuB,EACvB,QAAA,qBAAuB,EACvB,QAAA,sBAAwB,EACxB,QAAA,qBAAuB,EACvB,QAAA,gBAAkB,WAElB,QAAA,eAAiB,GACjB,QAAA,gBAAkB,EAClB,QAAA,eAAiB,EAEjB,QAAA,qBAAuB,IACvB,QAAA,sBAAwB,EACxB,QAAA,qBAAuB,GAEvB,QAAA,eAA2B,CAAC,QAAY,aAAE,QAAc,eAAE,QAAe,gBAAE,QAAc,gBAStG,IAAA,EAAA,WAsBE,SACU,EAAA,EACA,GADA,KAAS,UAAT,EACA,KAAc,eAAd,EAZH,KAAO,QAAa,GAczB,KAAK,MAAQ,KAAK,UAAU,KAC5B,KAAK,MAAQ,KAAK,UAAU,KAC5B,KAAK,QA4gBT,OAzgBS,EAAY,UAAA,aAAnB,SAAoB,EAAc,GAChC,IAAM,EAAyB,CAAC,EAAM,QAAc,eAAE,QAAe,gBAAE,QAAc,gBACrF,OAAO,IAAI,EAAU,WAAC,KAAK,MAAO,EAAc,IAGlD,OAAW,eAAA,EAAa,UAAA,gBAAA,CAAxB,IAAA,WACE,OAAO,KAAK,gBAAkB,KAAK,MAAM,UAAY,KAAK,OA0iB7B,YAAA,EAAA,cAAA,IAviB/B,OAAW,eAAA,EAAkB,UAAA,qBAAA,CAA7B,IAAA,WACE,IACM,EADY,KAAK,MAAQ,KAAK,EACN,KAAK,MACnC,OAAQ,GAAa,GAAK,EAAY,KAAK,OAoiBd,YAAA,EAAA,cAAA,IA5hBvB,EAAuB,UAAA,wBAA/B,SAAgC,GAC9B,IAAK,KAAK,eACR,OAAO,EAGT,IAAM,EAAsB,EAAO,KAAK,UAAU,QAAQ,WAE1D,OAAO,EAAsB,QAAe,gBAAG,QAAe,gBAAG,GAM5D,EAAgB,UAAA,iBAAvB,SAAwB,GACtB,GAA0B,IAAtB,KAAK,MAAM,OAAc,MACV,IAAb,IACF,EAAW,QAAY,cAGzB,IADA,IAAI,EAAI,KAAK,MACN,KACL,KAAK,MAAM,KAAK,KAAK,aAAa,MAQjC,EAAK,UAAA,MAAZ,WACE,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,MAAQ,IAAI,EAAY,aAAc,KAAK,wBAAwB,KAAK,QAC7E,KAAK,UAAY,EACjB,KAAK,aAAe,KAAK,MAAQ,EACjC,KAAK,iBAQA,EAAM,UAAA,OAAb,SAAc,EAAiB,GAG7B,IAAM,EAAe,KAAK,wBAAwB,GAOlD,GANI,EAAe,KAAK,MAAM,YAC5B,KAAK,MAAM,UAAY,GAKrB,KAAK,MAAM,OAAS,EAAG,CAEzB,GAAI,KAAK,MAAQ,EACf,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,MAAM,OAAQ,IACrC,KAAK,MAAM,IAAI,GAAG,OAAO,EAAS,QAAc,gBAKpD,IAAI,EAAS,EACb,GAAI,KAAK,MAAQ,EACf,IAAK,IAAI,EAAI,KAAK,MAAO,EAAI,EAAS,IAChC,KAAK,MAAM,OAAS,EAAU,KAAK,QACjC,KAAK,MAAQ,GAAK,KAAK,MAAM,QAAU,KAAK,MAAQ,KAAK,EAAI,EAAS,GAGxE,KAAK,QACL,IACI,KAAK,MAAQ,GAEf,KAAK,SAKP,KAAK,MAAM,KAAK,IAAI,EAAU,WAAC,EAAS,QAAc,uBAK5D,IAAS,EAAI,KAAK,MAAO,EAAI,EAAS,IAChC,KAAK,MAAM,OAAS,EAAU,KAAK,QACjC,KAAK,MAAM,OAAS,KAAK,MAAQ,KAAK,EAAI,EAE5C,KAAK,MAAM,OAGX,KAAK,QACL,KAAK,UAQb,GAAI,EAAe,KAAK,MAAM,UAAW,CAEvC,IAAM,EAAe,KAAK,MAAM,OAAS,EACrC,EAAe,IACjB,KAAK,MAAM,UAAU,GACrB,KAAK,MAAQ,KAAK,IAAI,KAAK,MAAQ,EAAc,GACjD,KAAK,MAAQ,KAAK,IAAI,KAAK,MAAQ,EAAc,IAEnD,KAAK,MAAM,UAAY,EAIzB,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAU,GACpC,KAAK,EAAI,KAAK,IAAI,KAAK,EAAG,EAAU,GAChC,IACF,KAAK,GAAK,GAEZ,KAAK,OAAS,KAAK,IAAI,KAAK,OAAQ,EAAU,GAC9C,KAAK,OAAS,KAAK,IAAI,KAAK,OAAQ,EAAU,GAE9C,KAAK,UAAY,EAKnB,GAFA,KAAK,aAAe,EAAU,EAE1B,KAAK,mBACP,KAAK,QAAQ,EAAS,GAGlB,KAAK,MAAQ,GACf,IAAS,EAAI,EAAG,EAAI,KAAK,MAAM,OAAQ,IACrC,KAAK,MAAM,IAAI,GAAG,OAAO,EAAS,QAAc,gBAKtD,KAAK,MAAQ,EACb,KAAK,MAAQ,GAGf,OAAY,eAAA,EAAgB,UAAA,mBAAA,CAA5B,IAAA,WACE,OAAO,KAAK,iBAAoB,KAAK,UAAkB,uBA+Y1B,YAAA,EAAA,cAAA,IA5YvB,EAAO,UAAA,QAAf,SAAgB,EAAiB,GAC3B,KAAK,QAAU,IAKf,EAAU,KAAK,MACjB,KAAK,cAAc,EAAS,GAE5B,KAAK,eAAe,EAAS,KAIzB,EAAa,UAAA,cAArB,SAAsB,EAAiB,GACrC,IAAM,EAAqB,EAA4B,6BAAC,KAAK,MAAO,KAAK,MAAO,EAAS,KAAK,MAAQ,KAAK,GAC3G,GAAI,EAAS,OAAS,EAAG,CACvB,IAAM,EAAkB,EAA2B,4BAAC,KAAK,MAAO,GAChE,EAA0B,2BAAC,KAAK,MAAO,EAAgB,QACvD,KAAK,4BAA4B,EAAS,EAAS,EAAgB,gBAI/D,EAA2B,UAAA,4BAAnC,SAAoC,EAAiB,EAAiB,GAGpE,IADA,IAAI,EAAsB,EACnB,KAAwB,GACV,IAAf,KAAK,OACH,KAAK,EAAI,GACX,KAAK,IAEH,KAAK,MAAM,OAAS,GAEtB,KAAK,MAAM,KAAK,IAAI,EAAU,WAAC,EAAS,QAAc,mBAGpD,KAAK,QAAU,KAAK,OACtB,KAAK,QAEP,KAAK,UAKH,EAAc,UAAA,eAAtB,SAAuB,EAAiB,GAMtC,IAHA,IAAM,EAAW,GACb,EAAgB,EAEX,EAAI,KAAK,MAAM,OAAS,EAAG,GAAK,EAAG,IAAK,CAE/C,IAAI,EAAW,KAAK,MAAM,IAAI,GAC9B,GAAK,EAAS,aAAa,EAAS,oBAAsB,GAA1D,CAMA,IADA,IAAM,EAA6B,CAAC,GAC7B,EAAS,WAAa,EAAI,GAC/B,EAAW,KAAK,MAAM,MAAM,GAC5B,EAAa,QAAQ,GAKvB,IAAM,EAAY,KAAK,MAAQ,KAAK,EACpC,KAAI,GAAa,GAAK,EAAY,EAAI,EAAa,QAAnD,CAIA,IAAM,EAAiB,EAAa,EAAa,OAAS,GAAG,mBACvD,EAAkB,EAA8B,+BAAC,EAAc,KAAK,MAAO,GAC3E,EAAa,EAAgB,OAAS,EAAa,OACrD,OAAoB,EAGtB,EAFiB,IAAf,KAAK,OAAe,KAAK,IAAM,KAAK,MAAM,OAAS,EAEtC,KAAK,IAAI,EAAG,KAAK,EAAI,KAAK,MAAM,UAAY,GAE5C,KAAK,IAAI,EAAG,KAAK,MAAM,OAAS,KAAK,MAAM,UAAY,GAKxE,IADA,IAAM,EAAyB,GACtB,EAAI,EAAG,EAAI,EAAY,IAAK,CACnC,IAAM,EAAU,KAAK,aAAa,QAAY,cAAE,GAChD,EAAS,KAAK,GAEZ,EAAS,OAAS,IACpB,EAAS,KAAK,CAGZ,MAAO,EAAI,EAAa,OAAS,EACjC,SAAQ,IAEV,GAAiB,EAAS,QAE5B,EAAa,KAAb,MAAA,EAAqB,GAGrB,IAAI,EAAgB,EAAgB,OAAS,EACzC,EAAU,EAAgB,GACd,IAAZ,IAEF,EAAU,IADV,IAKF,IAFA,IAAI,EAAe,EAAa,OAAS,EAAa,EAClD,EAAS,EACN,GAAgB,GAAG,CACxB,IAAM,EAAc,KAAK,IAAI,EAAQ,GAQrC,GAPA,EAAa,GAAe,cAAc,EAAa,GAAe,EAAS,EAAa,EAAU,EAAa,GAAa,GAEhH,KADhB,GAAW,KAGT,EAAU,IADV,IAIa,KADf,GAAU,GACQ,CAChB,IACA,IAAM,EAAoB,KAAK,IAAI,EAAc,GACjD,EAAS,EAA2B,4BAAC,EAAc,EAAmB,KAAK,QAK/E,IAAS,EAAI,EAAG,EAAI,EAAa,OAAQ,IACnC,EAAgB,GAAK,GACvB,EAAa,GAAG,IAAI,EAAgB,GAAI,QAAc,gBAM1D,IADA,IAAI,EAAsB,EAAa,EAChC,KAAwB,GACV,IAAf,KAAK,MACH,KAAK,EAAI,EAAU,GACrB,KAAK,IACL,KAAK,MAAM,QAEX,KAAK,QACL,KAAK,SAIH,KAAK,MAAQ,KAAK,IAAI,KAAK,MAAM,UAAW,KAAK,MAAM,OAAS,GAAiB,IAC/E,KAAK,QAAU,KAAK,OACtB,KAAK,QAEP,KAAK,WASb,GAAI,EAAS,OAAS,EAAG,CAGvB,IAAM,EAA+B,GAG/B,EAA8B,GACpC,IAAS,EAAI,EAAG,EAAI,KAAK,MAAM,OAAQ,IACrC,EAAc,KAAK,KAAK,MAAM,IAAI,IAEpC,IAAM,EAAsB,KAAK,MAAM,OAEnC,EAAoB,EAAsB,EAC1C,EAAoB,EACpB,EAAe,EAAS,GAC5B,KAAK,MAAM,OAAS,KAAK,IAAI,KAAK,MAAM,UAAW,KAAK,MAAM,OAAS,GACvE,IAAI,EAAqB,EACzB,IAAS,EAAI,KAAK,IAAI,KAAK,MAAM,UAAY,EAAG,EAAsB,EAAgB,GAAI,GAAK,EAAG,IAChG,GAAI,GAAgB,EAAa,MAAQ,EAAoB,EAAoB,CAE/E,IAAK,IAAI,EAAQ,EAAa,SAAS,OAAS,EAAG,GAAS,EAAG,IAC7D,KAAK,MAAM,IAAI,IAAK,EAAa,SAAS,IAE5C,IAGA,EAAa,KAAK,CAChB,MAAO,EAAoB,EAC3B,OAAQ,EAAa,SAAS,SAGhC,GAAsB,EAAa,SAAS,OAC5C,EAAe,IAAW,QAE1B,KAAK,MAAM,IAAI,EAAG,EAAc,MAKpC,IAAI,EAAqB,EACzB,IAAS,EAAI,EAAa,OAAS,EAAG,GAAK,EAAG,IAC5C,EAAa,GAAG,OAAS,EACzB,KAAK,MAAM,KAAK,SAAU,EAAa,IACvC,GAAsB,EAAa,GAAG,OAExC,IAAM,EAAe,KAAK,IAAI,EAAG,EAAsB,EAAgB,KAAK,MAAM,WAC9E,EAAe,GACjB,KAAK,MAAM,uBAAuB,OAAQ,KAoBzC,EAAwB,UAAA,yBAA/B,SAAgC,EAAmB,EAAqB,GACtE,SADsE,IAAA,IAAA,GAA0B,GACzF,GAAa,CAClB,IAAM,EAAO,KAAK,MAAM,IAAI,GAC5B,IAAK,EACH,MAAO,EAAE,GAAI,GAGf,IADA,IAAM,EAAS,EAAc,EAAK,mBAAqB,EAAK,OACnD,EAAI,EAAG,EAAI,IAAU,EAM5B,GALI,EAAK,IAAI,GAAG,QAAqB,yBAGnC,GAAe,EAAK,IAAI,GAAG,QAAoB,sBAAE,QAAU,GAEzD,EAAc,EAChB,MAAO,CAAC,EAAW,GAGvB,IAEF,MAAO,CAAC,EAAW,IAad,EAA2B,UAAA,4BAAlC,SAAmC,EAAmB,EAAoB,EAAsB,QAAtB,IAAA,IAAA,EAAoB,GAC5F,IAAM,EAAO,KAAK,MAAM,IAAI,GAC5B,OAAK,EAGE,EAAK,kBAAkB,EAAW,EAAU,GAF1C,IAKJ,EAAsB,UAAA,uBAA7B,SAA8B,GAI5B,IAHA,IAAI,EAAQ,EACR,EAAO,EAEJ,EAAQ,GAAK,KAAK,MAAM,IAAI,GAAO,WACxC,IAGF,KAAO,EAAO,EAAI,KAAK,MAAM,QAAU,KAAK,MAAM,IAAI,EAAO,GAAG,WAC9D,IAEF,MAAO,CAAE,MAAK,EAAE,KAAI,IAOf,EAAa,UAAA,cAApB,SAAqB,GAUnB,IATI,MAAA,EACG,KAAK,KAAK,KACb,EAAI,KAAK,SAAS,KAGpB,KAAK,KAAO,GACZ,EAAI,GAGC,EAAI,KAAK,MAAO,GAAK,KAAK,UAAU,QAAQ,aACjD,KAAK,KAAK,IAAK,GAQZ,EAAQ,UAAA,SAAf,SAAgB,GAId,IAHI,MAAA,IACF,EAAI,KAAK,IAEH,KAAK,OAAO,IAAM,EAAI,IAC9B,OAAO,GAAK,KAAK,MAAQ,KAAK,MAAQ,EAAI,EAAI,EAAI,EAAI,GAOjD,EAAQ,UAAA,SAAf,SAAgB,GAId,IAHI,MAAA,IACF,EAAI,KAAK,IAEH,KAAK,OAAO,IAAM,EAAI,KAAK,QACnC,OAAO,GAAK,KAAK,MAAQ,KAAK,MAAQ,EAAI,EAAI,EAAI,EAAI,GAGjD,EAAS,UAAA,UAAhB,SAAiB,GAAjB,IA4BC,EAAA,KA3BO,EAAS,IAAI,EAAO,GA0B1B,OAzBA,KAAK,QAAQ,KAAK,GAClB,EAAO,SAAS,KAAK,MAAM,sBAAsB,OAAQ,SAAA,GACvD,EAAO,MAAQ,EAEX,EAAO,KAAO,GAChB,EAAO,aAGX,EAAO,SAAS,KAAK,MAAM,sBAAsB,SAAU,SAAC,GACtD,EAAO,MAAQ,EAAM,QACvB,EAAO,MAAQ,EAAM,WAGzB,EAAO,SAAS,KAAK,MAAM,sBAAsB,SAAU,SAAC,GAEtD,EAAO,MAAQ,EAAM,OAAS,EAAO,KAAO,EAAM,MAAQ,EAAM,QAClE,EAAO,UAIL,EAAO,KAAO,EAAM,QACtB,EAAO,MAAQ,EAAM,WAGzB,EAAO,SAAS,EAAO,sBAAsB,UAAW,WAAM,OAAA,EAAK,cAAc,MAC1E,GAGD,EAAa,UAAA,cAArB,SAAsB,GACpB,KAAK,QAAQ,OAAO,KAAK,QAAQ,QAAQ,GAAS,IAG7C,EAAQ,UAAA,SAAf,SAAgB,EAAoB,EAAqB,EAAmB,EAAwB,GAClG,OAAO,IAAI,EAAqB,KAAM,EAAW,EAAY,EAAU,EAAe,IAEzF,EAxiBD,GAAa,QAAM,OAAA,EA0iBnB,IAAA,EAAA,SAAA,GAQE,SACS,EAAA,GADT,IAGE,EAAA,EAAO,KAAA,OACR,KAyB8B,OA5BtB,EAAI,KAAJ,EAND,EAAG,IAAW,EAAO,UACtB,EAAU,YAAY,EAiCE,EAdjC,OAvB4B,EAAY,EAAA,GAMtC,OAAW,eAAA,EAAE,UAAA,KAAA,CAAb,IAAA,WAA0B,OAAO,KAAK,KA+BP,YAAA,EAAA,cAAA,IAvBxB,EAAO,UAAA,QAAd,WACM,KAAK,aAGT,KAAK,YAAa,EAElB,KAAK,KAAK,WACV,EAAM,UAAA,QAAS,KAAA,QApBF,EAAO,QAAG,EAsB1B,EAvBD,CAA4B,EAAY,cAA3B,QAAM,OAAA,EAqCnB,IAAA,EAAA,WAGE,SACU,EAAA,EACA,EACA,EACA,EACA,EACA,QAHA,IAAA,IAAA,EAAuB,QACvB,IAAA,IAAA,EAAoB,EAAQ,MAAM,aAClC,IAAA,IAAA,EAA0B,QAC1B,IAAA,IAAA,EAAwB,GALxB,KAAO,QAAP,EACA,KAAU,WAAV,EACA,KAAW,YAAX,EACA,KAAS,UAAT,EACA,KAAc,eAAd,EACA,KAAY,aAAZ,EAEJ,KAAK,YAAc,IACrB,KAAK,YAAc,GAEjB,KAAK,UAAY,KAAK,QAAQ,MAAM,SACtC,KAAK,UAAY,KAAK,QAAQ,MAAM,QAEtC,KAAK,SAAW,KAAK,YA0BzB,OAvBS,EAAO,UAAA,QAAd,WACE,OAAO,KAAK,SAAW,KAAK,WAGvB,EAAI,UAAA,KAAX,WACE,IAAM,EAAQ,KAAK,QAAQ,uBAAuB,KAAK,UAEnD,EAAM,MAAQ,KAAK,YAAc,KAAK,iBACxC,EAAM,MAAQ,KAAK,YAAc,KAAK,gBAEpC,EAAM,KAAO,KAAK,UAAY,KAAK,eACrC,EAAM,KAAO,KAAK,UAAY,KAAK,cAGrC,EAAM,MAAQ,KAAK,IAAI,EAAM,MAAO,GACpC,EAAM,KAAO,KAAK,IAAI,EAAM,KAAM,KAAK,QAAQ,MAAM,QAErD,IADA,IAAI,EAAS,GACJ,EAAI,EAAM,MAAO,GAAK,EAAM,OAAQ,EAC3C,GAAU,KAAK,QAAQ,4BAA4B,EAAG,KAAK,YAG7D,OADA,KAAK,SAAW,EAAM,KAAO,EACtB,CAAC,MAAO,EAAO,QAAS,IAElC,EA3CD,GAAa,QAAoB,qBAAA;;yaC9mBjC,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,yBAMA,EAAA,SAAA,GASE,SAAA,EAAoB,GAApB,IAAA,EACE,EAAA,KAAA,OAAO,YADW,EAAA,UAAA,EAElB,EAAK,QAAU,IAAI,EAAA,OAAO,EAAK,WAAW,GAC1C,EAAK,QAAQ,mBAIb,EAAK,KAAO,IAAI,EAAA,OAAO,EAAK,WAAW,GACvC,EAAK,cAAgB,EAAK,QAE1B,EAAK,kBAiFT,OApG+B,EAAA,EAAA,GAyB7B,OAAA,eAAW,EAAA,UAAA,MAAG,KAAd,WACE,OAAO,KAAK,sCAMd,OAAA,eAAW,EAAA,UAAA,SAAM,KAAjB,WACE,OAAO,KAAK,+CAMd,OAAA,eAAW,EAAA,UAAA,SAAM,KAAjB,WACE,OAAO,KAAK,yCAMP,EAAA,UAAA,qBAAP,WACM,KAAK,gBAAkB,KAAK,UAGhC,KAAK,QAAQ,EAAI,KAAK,KAAK,EAC3B,KAAK,QAAQ,EAAI,KAAK,KAAK,EAI3B,KAAK,KAAK,QACV,KAAK,cAAgB,KAAK,QAC1B,KAAK,KAAK,WAAY,CACpB,aAAc,KAAK,QACnB,eAAgB,KAAK,SAOlB,EAAA,UAAA,kBAAP,SAAyB,GACnB,KAAK,gBAAkB,KAAK,OAKhC,KAAK,KAAK,iBAAiB,GAC3B,KAAK,KAAK,EAAI,KAAK,QAAQ,EAC3B,KAAK,KAAK,EAAI,KAAK,QAAQ,EAC3B,KAAK,cAAgB,KAAK,KAC1B,KAAK,KAAK,WAAY,CACpB,aAAc,KAAK,KACnB,eAAgB,KAAK,YASlB,EAAA,UAAA,OAAP,SAAc,EAAiB,GAC7B,KAAK,QAAQ,OAAO,EAAS,GAC7B,KAAK,KAAK,OAAO,EAAS,IAOrB,EAAA,UAAA,cAAP,SAAqB,GACnB,KAAK,QAAQ,cAAc,GAC3B,KAAK,KAAK,cAAc,IAE5B,EApGA,CAA+B,EAAA,cAAlB,QAAA,UAAA;;oECIb,IAAA,EAAA,WAwBE,SAAA,EACU,EACA,EACA,GAFA,KAAA,UAAA,EACA,KAAA,iBAAA,EACA,KAAA,UAAA,EAER,KAAK,cAAe,EACpB,KAAK,uBAAwB,EAC7B,KAAK,qBAAuB,CAAE,MAAO,KAAM,IAAK,MAsLpD,OAhLS,EAAA,UAAA,iBAAP,WACE,KAAK,cAAe,EACpB,KAAK,qBAAqB,MAAQ,KAAK,UAAU,MAAM,OACvD,KAAK,iBAAiB,YAAc,GACpC,KAAK,iBAAiB,UAAU,IAAI,WAO/B,EAAA,UAAA,kBAAP,SAAyB,GAAzB,IAAA,EAAA,KACE,KAAK,iBAAiB,YAAc,EAAG,KACvC,KAAK,4BACL,WAAW,WACT,EAAK,qBAAqB,IAAM,EAAK,UAAU,MAAM,QACpD,IAOE,EAAA,UAAA,eAAP,WACE,KAAK,sBAAqB,IAQrB,EAAA,UAAA,QAAP,SAAe,GACb,GAAI,KAAK,cAAgB,KAAK,sBAAuB,CACnD,GAAmB,MAAf,EAAG,QAEL,OAAO,EACF,GAAmB,KAAf,EAAG,SAAiC,KAAf,EAAG,SAAiC,KAAf,EAAG,QAEtD,OAAO,EAIT,KAAK,sBAAqB,GAG5B,OAAmB,MAAf,EAAG,UAGL,KAAK,6BACE,IAcH,EAAA,UAAA,qBAAR,SAA6B,GAA7B,IAAA,EAAA,KAKE,GAJA,KAAK,iBAAiB,UAAU,OAAO,UACvC,KAAK,cAAe,EACpB,KAAK,yBAEA,EAKE,CAGL,IAAM,EAA6B,CACjC,MAAO,KAAK,qBAAqB,MACjC,IAAK,KAAK,qBAAqB,KAWjC,KAAK,uBAAwB,EAC7B,WAAW,WAET,GAAI,EAAK,sBAAuB,CAC9B,EAAK,uBAAwB,EAC7B,IAAI,OAAK,EAGP,EAFE,EAAK,aAEC,EAAK,UAAU,MAAM,UAAU,EAA2B,MAAO,EAA2B,KAK5F,EAAK,UAAU,MAAM,UAAU,EAA2B,OAEpE,EAAK,UAAU,QAAQ,KAExB,OAtCoB,CAEvB,KAAK,uBAAwB,EAC7B,IAAM,EAAQ,KAAK,UAAU,MAAM,UAAU,KAAK,qBAAqB,MAAO,KAAK,qBAAqB,KACxG,KAAK,UAAU,QAAQ,KA4CnB,EAAA,UAAA,0BAAR,WAAA,IAAA,EAAA,KACQ,EAAW,KAAK,UAAU,MAChC,WAAW,WAET,IAAK,EAAK,aAAc,CACtB,IACM,EADW,EAAK,UAAU,MACV,QAAQ,EAAU,IACpC,EAAK,OAAS,GAChB,EAAK,UAAU,QAAQ,KAG1B,IASE,EAAA,UAAA,0BAAP,SAAiC,GAAjC,IAAA,EAAA,KACE,GAAK,KAAK,aAAV,CAIA,GAAI,KAAK,UAAU,OAAO,mBAAoB,CAC5C,IAAM,EAAa,KAAK,KAAK,KAAK,UAAU,YAAY,OAAS,KAAK,UAAU,QAAQ,YAClF,EAAY,KAAK,UAAU,OAAO,EAAI,EACtC,EAAa,KAAK,UAAU,OAAO,EAAI,KAAK,UAAU,YAAY,MAExE,KAAK,iBAAiB,MAAM,KAAO,EAAa,KAChD,KAAK,iBAAiB,MAAM,IAAM,EAAY,KAC9C,KAAK,iBAAiB,MAAM,OAAS,EAAa,KAClD,KAAK,iBAAiB,MAAM,WAAa,EAAa,KACtD,KAAK,iBAAiB,MAAM,WAAa,KAAK,UAAU,QAAQ,WAChE,KAAK,iBAAiB,MAAM,SAAW,KAAK,UAAU,QAAQ,SAAW,KAGzE,IAAM,EAAwB,KAAK,iBAAiB,wBACpD,KAAK,UAAU,MAAM,KAAO,EAAa,KACzC,KAAK,UAAU,MAAM,IAAM,EAAY,KACvC,KAAK,UAAU,MAAM,MAAQ,EAAsB,MAAQ,KAC3D,KAAK,UAAU,MAAM,OAAS,EAAsB,OAAS,KAC7D,KAAK,UAAU,MAAM,WAAa,EAAsB,OAAS,KAG9D,GACH,WAAW,WAAM,OAAA,EAAK,2BAA0B,IAAO,KAQnD,EAAA,UAAA,uBAAR,WACE,KAAK,UAAU,MAAM,KAAO,GAC5B,KAAK,UAAU,MAAM,IAAM,IAE/B,EArNA,GAAa,QAAA,kBAAA;;aCLb,SAAgB,EACd,EACA,EACA,EACA,GAGA,OADA,EAAK,iBAAiB,EAAM,EAAS,GAC9B,CACL,QAAS,WACF,IAIL,EAAK,oBAAoB,EAAM,EAAS,GACxC,EAAO,KACP,EAAU,+DAfhB,QAAA,yBAAA;;yaCJA,IAAA,EAAA,QAAA,sBACA,EAAA,QAAA,kBAEM,EAA4B,GAMlC,EAAA,SAAA,GAwBE,SAAA,EACU,EACA,EACA,EACA,GAJV,IAAA,EAME,EAAA,KAAA,OAAO,YALC,EAAA,UAAA,EACA,EAAA,iBAAA,EACA,EAAA,YAAA,EACA,EAAA,aAAA,EA3BH,EAAA,eAAyB,EACxB,EAAA,kBAA4B,EAC5B,EAAA,0BAAoC,EACpC,EAAA,4BAAsC,EACtC,EAAA,0BAAoC,EAEpC,EAAA,eAAyB,EAKzB,EAAA,oBAA8B,EAE9B,EAAA,uBAAwC,KACxC,EAAA,wBAAkC,EAoBxC,EAAK,eAAkB,EAAK,iBAAiB,YAAc,EAAK,YAAY,aAAgB,EAC5F,EAAK,SAAS,EAAA,yBAAyB,EAAK,iBAAkB,SAAU,EAAK,UAAU,KAAK,KAG5F,WAAW,WAAM,OAAA,EAAK,kBAAkB,KAoL5C,OA3N8B,EAAA,EAAA,GA0CrB,EAAA,UAAA,eAAP,SAAsB,GACpB,KAAK,iBAAiB,MAAM,gBAAkB,EAAO,WAAW,KAO1D,EAAA,UAAA,SAAR,WAAA,IAAA,EAAA,KACsC,OAAhC,KAAK,yBACP,KAAK,uBAAyB,sBAAsB,WAAM,OAAA,EAAK,oBAI3D,EAAA,UAAA,cAAR,WACE,GAAI,KAAK,aAAa,OAAS,EAAG,CAChC,KAAK,kBAAoB,KAAK,UAAU,SAAS,WAAW,iBAAmB,OAAO,iBACtF,KAAK,4BAA8B,KAAK,iBAAiB,aACzD,IAAM,EAAkB,KAAK,MAAM,KAAK,kBAAoB,KAAK,4BAA8B,KAAK,4BAA8B,KAAK,UAAU,SAAS,WAAW,cACjK,KAAK,4BAA8B,IACrC,KAAK,0BAA4B,EACjC,KAAK,YAAY,MAAM,OAAS,KAAK,0BAA4B,MAKrE,IAAM,EAAY,KAAK,UAAU,OAAO,MAAQ,KAAK,kBACjD,KAAK,iBAAiB,YAAc,IAGtC,KAAK,wBAAyB,EAC9B,KAAK,iBAAiB,UAAY,GAGpC,KAAK,uBAAyB,MAMzB,EAAA,UAAA,eAAP,WAEE,GAAI,KAAK,4BAA8B,KAAK,UAAU,OAAO,MAAM,OAGjE,OAFA,KAAK,0BAA4B,KAAK,UAAU,OAAO,MAAM,YAC7D,KAAK,WAKP,GAAI,KAAK,8BAAsC,KAAK,UAAW,SAAS,WAAW,aAAnF,CAMA,IAAM,EAAe,KAAK,UAAU,OAAO,MAAQ,KAAK,kBACpD,KAAK,iBAAmB,GAMxB,KAAK,iBAAmB,KAAK,iBAAiB,WAM9C,KAAK,UAAU,SAAS,WAAW,iBAAmB,OAAO,mBAAqB,KAAK,mBAXzF,KAAK,gBAPL,KAAK,YA6BD,EAAA,UAAA,UAAR,SAAkB,GAMhB,GAJA,KAAK,eAAiB,KAAK,iBAAiB,UAIvC,KAAK,iBAAiB,aAK3B,GAAI,KAAK,uBACP,KAAK,wBAAyB,MADhC,CAKA,IACM,EADS,KAAK,MAAM,KAAK,eAAiB,KAAK,mBAC/B,KAAK,UAAU,OAAO,MAC5C,KAAK,UAAU,YAAY,GAAM,KAS5B,EAAA,UAAA,QAAP,SAAe,GACb,IAAM,EAAS,KAAK,mBAAmB,GACxB,IAAX,IAGJ,KAAK,iBAAiB,WAAa,EAEnC,EAAG,mBAGG,EAAA,UAAA,mBAAR,SAA2B,GAEzB,GAAkB,IAAd,EAAG,OACL,OAAO,EAIT,IAAI,EAAS,EAAG,OAMhB,OALI,EAAG,YAAc,WAAW,eAC9B,GAAU,KAAK,kBACN,EAAG,YAAc,WAAW,iBACrC,GAAU,KAAK,kBAAoB,KAAK,UAAU,MAE7C,GAQF,EAAA,UAAA,iBAAP,SAAwB,GAEtB,GAAkB,IAAd,EAAG,OACL,OAAO,EAIT,IAAI,EAAS,EAAG,OAShB,OARI,EAAG,YAAc,WAAW,iBAC9B,GAAU,KAAK,kBAAoB,EACnC,KAAK,qBAAuB,EAC5B,EAAS,KAAK,MAAM,KAAK,IAAI,KAAK,uBAAyB,KAAK,oBAAsB,EAAI,GAAK,GAC/F,KAAK,qBAAuB,GACnB,EAAG,YAAc,WAAW,iBACrC,GAAU,KAAK,UAAU,MAEpB,GAOF,EAAA,UAAA,aAAP,SAAoB,GAClB,KAAK,YAAc,EAAG,QAAQ,GAAG,OAO5B,EAAA,UAAA,YAAP,SAAmB,GACjB,IAAM,EAAS,KAAK,YAAc,EAAG,QAAQ,GAAG,MAChD,KAAK,YAAc,EAAG,QAAQ,GAAG,MAClB,IAAX,IAGJ,KAAK,iBAAiB,WAAa,EACnC,EAAG,mBAEP,EA3NA,CAA8B,EAAA,YAAjB,QAAA,SAAA;;aCGb,SAAgB,EAAuB,GACrC,OAAO,EAAK,QAAQ,SAAU,MAOhC,SAAgB,EAAoB,EAAc,GAChD,OAAI,EACK,SAAc,EAAO,SAEvB,EAOT,SAAgB,EAAY,EAAoB,EAAiB,GAC3D,EAAK,QAAQ,OACf,OAAO,cAAc,QAAQ,OAAQ,EAAiB,eAEtD,EAAG,cAAc,QAAQ,aAAc,EAAiB,eAI1D,EAAG,iBAQL,SAAgB,EAAa,EAAoB,GAC/C,EAAG,kBAIH,IAAM,EAAgB,SAAS,GAE7B,EAAO,EADP,EAAO,EAAuB,GACG,EAAK,oBACtC,EAAK,QAAQ,GACb,EAAK,SAAS,MAAQ,GACtB,EAAK,KAAK,QAAS,GACnB,EAAK,OAAO,IAGV,EAAK,QAAQ,OACX,OAAO,eAET,EADO,OAAO,cAAc,QAAQ,SAIlC,EAAG,eAEL,EADO,EAAG,cAAc,QAAQ,eAWtC,SAAgB,EAA6B,EAAgB,GAG3D,IAAM,EAAM,EAAK,cAAc,wBACzB,EAAO,EAAG,QAAU,EAAI,KAAO,GAC/B,EAAM,EAAG,QAAU,EAAI,IAAM,GAGnC,EAAK,SAAS,MAAM,SAAW,WAC/B,EAAK,SAAS,MAAM,MAAQ,OAC5B,EAAK,SAAS,MAAM,OAAS,OAC7B,EAAK,SAAS,MAAM,KAAU,EAAI,KAClC,EAAK,SAAS,MAAM,IAAS,EAAG,KAChC,EAAK,SAAS,MAAM,OAAS,OAE7B,EAAK,SAAS,QAId,WAAW,WACT,EAAK,SAAS,MAAM,SAAW,KAC/B,EAAK,SAAS,MAAM,MAAQ,KAC5B,EAAK,SAAS,MAAM,OAAS,KAC7B,EAAK,SAAS,MAAM,KAAO,KAC3B,EAAK,SAAS,MAAM,IAAM,KAC1B,EAAK,SAAS,MAAM,OAAS,MAC5B,KAUL,SAAgB,EAAkB,EAAgB,EAAiB,EAAqC,GACtG,EAA6B,EAAI,GAE7B,IAAqB,EAAiB,mBAAmB,IAC3D,EAAiB,mBAAmB,GAItC,EAAK,SAAS,MAAQ,EAAiB,cACvC,EAAK,SAAS,gEAhHhB,QAAA,uBAAA,EAQA,QAAA,oBAAA,EAWA,QAAA,YAAA,EAgBA,QAAA,aAAA,EAgCA,QAAA,6BAAA,EAoCA,QAAA,kBAAA;;aClHA,IAAiB,EA2EA,yDA3EjB,SAAipErB,CAAiB,EAAA,QAAA,KAAA,QAAA,GAAE,KA2EnB,SAAiB,GAEF,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,GAAK,IAEL,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,GAAK,IAEL,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,KAAO,IAEP,EAAA,IAAM,IAEN,EAAA,IAAM,IAEN,EAAA,GAAK,IAEL,EAAA,IAAM,IAEN,EAAA,GAAK,IAEL,EAAA,IAAM,IAhErB,CAAiB,EAAA,QAAA,KAAA,QAAA,GAAE;;oECxEN,QAAA,SAA+C,GAK/C,QAAA,gBAAmC,QAAA,SAAY,EAY5D,QAAA,SAAS,GAAO,CACd,IAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EAAI,CACd,IAAK,KAOP,QAAA,SAAY,EAAI,KAOhB,QAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EACZ,QAAA,SAAS,GAAO,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EACZ,QAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAY,EACZ,QAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,QAAA,SAAS,KAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK;;aC/OP,SAAgB,EAA2B,EAAU,EAAe,EAAgB,GAElF,OAAI,EAAM,KACD,EAAM,KAAK,EAAO,EAAO,GAE3B,EAAa,EAAO,EAAO,EAAO,GAG3C,SAAgB,EAAmC,EAAU,EAAe,EAAmB,GAK7F,QAL0E,IAAA,IAAA,EAAA,QAAmB,IAAA,IAAA,EAAc,EAAM,QAK7G,GAAS,EAAM,OACjB,OAAO,EAET,GAAS,EAAM,OAAS,GAAS,EAAM,OAErC,EADE,GAAO,EAAM,OACT,EAAM,QAEL,EAAM,OAAS,GAAO,EAAM,OAErC,IAAK,IAAI,EAAI,EAAO,EAAI,IAAO,EAC7B,EAAM,GAAK,EAEb,OAAO,EAOT,SAAgB,EAA6B,EAAM,GACjD,IAAM,EAAS,IAAK,EAAE,YAAoB,EAAE,OAAS,EAAE,QAGvD,OAFA,EAAO,IAAI,GACX,EAAO,IAAI,EAAG,EAAE,QACT,yDApCT,QAAA,KAAA,EAQA,QAAA,aAAA,EAwBA,QAAA,OAAA;;oECzCA,IAAA,EAAA,QAAA,4BA0IA,SAAgB,EAAmB,GAGjC,IAFA,IAAI,EAAS,EACP,EAAS,EAAE,OACR,EAAI,EAAG,EAAI,IAAU,EAAG,CAC/B,IAAI,EAAO,EAAE,WAAW,GAExB,GAAI,OAAU,GAAQ,GAAQ,MAAQ,CACpC,KAAM,GAAK,EAMT,OAAO,EAAS,QAAA,QAAQ,GAE1B,IAAM,EAAS,EAAE,WAAW,GAGxB,OAAU,GAAU,GAAU,MAChC,EAAyB,MAAjB,EAAO,OAAkB,EAAS,MAAS,MAEnD,GAAU,QAAA,QAAQ,GAGtB,GAAU,QAAA,QAAQ,GAEpB,OAAO,EAlKI,QAAA,QAAU,SAAU,GAG/B,IAAM,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAA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A,IAAA,EAAA,eAAA,EAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,EAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,EAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,EAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,EAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,EAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,EAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,EAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,EAAA,KAAA,KAAA,eAAA,KAAA,KACA,IAAA,EAAA,cAAA,EAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,EAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,EAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,EAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,EAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KACA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KACA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IACA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,IAAA,KAAA,KAAA,gBAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KACA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,cAAA,IAAA,KAAA,KAAA,eAAA,KAAA,KAAA,IAAA,EAAA,eAAA,KAAA,KAAA,KAAA,kBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,KAAA,KAAA,KAAA,kBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,KAAA,KAAA,KAAA,kBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,KAAA,KAAA,KAAA,kBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,KAAA,KAAA,KAAA,kBAAA,KAAA,KAAA,IACA,EAAA,eAAA,KAAA,KAAA,KAAA,kBAAA,KAAA,KAAA,IAAA,EAAA,eAAA,KAAA,KA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EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,MAAA,MAAA,MAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,MAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,EAAA,CAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,GAAA,OAAA,GAAA,MAAA,GAAA,MAAA,GAAA,UAAA,GAAA,IAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,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","file":"index.js","sourceRoot":"../browser-shell/src","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {Deferred} from 'workbox-core/_private/Deferred.mjs';\nimport {logger} from 'workbox-core/_private/logger.mjs';\nimport {messageSW} from './messageSW.mjs';\nimport {EventTargetShim} from './utils/EventTargetShim.mjs';\nimport {urlsMatch} from './utils/urlsMatch.mjs';\nimport {WorkboxEvent} from './utils/WorkboxEvent.mjs';\nimport './_version.mjs';\n\n\n// The time a SW must be in the waiting phase before we can conclude\n// `skipWaiting()` wasn't called. This 200 amount wasn't scientifically\n// chosen, but it seems to avoid false positives in my testing.\nconst WAITING_TIMEOUT_DURATION = 200;\n\n// The amount of time after a registration that we can reasonably conclude\n// that the registration didn't trigger an update.\nconst REGISTRATION_TIMEOUT_DURATION = 60000;\n\n/**\n * A class to aid in handling service worker registration, updates, and\n * reacting to service worker lifecycle events.\n *\n * @fires [message]{@link module:workbox-window.Workbox#message}\n * @fires [installed]{@link module:workbox-window.Workbox#installed}\n * @fires [waiting]{@link module:workbox-window.Workbox#waiting}\n * @fires [controlling]{@link module:workbox-window.Workbox#controlling}\n * @fires [activated]{@link module:workbox-window.Workbox#activated}\n * @fires [redundant]{@link module:workbox-window.Workbox#redundant}\n * @fires [externalinstalled]{@link module:workbox-window.Workbox#externalinstalled}\n * @fires [externalwaiting]{@link module:workbox-window.Workbox#externalwaiting}\n * @fires [externalactivated]{@link module:workbox-window.Workbox#externalactivated}\n *\n * @memberof module:workbox-window\n */\nclass Workbox extends EventTargetShim {\n  /**\n   * Creates a new Workbox instance with a script URL and service worker\n   * options. The script URL and options are the same as those used when\n   * calling `navigator.serviceWorker.register(scriptURL, options)`. See:\n   * https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register\n   *\n   * @param {string} scriptURL The service worker script associated with this\n   *     instance.\n   * @param {Object} [registerOptions] The service worker options associated\n   *     with this instance.\n   */\n  constructor(scriptURL, registerOptions = {}) {\n    super();\n\n    this._scriptURL = scriptURL;\n    this._registerOptions = registerOptions;\n    this._updateFoundCount = 0;\n\n    // Deferreds we can resolve later.\n    this._swDeferred = new Deferred();\n    this._activeDeferred = new Deferred();\n    this._controllingDeferred = new Deferred();\n\n    // Bind event handler callbacks.\n    this._onMessage = this._onMessage.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n    this._onUpdateFound = this._onUpdateFound.bind(this);\n    this._onControllerChange = this._onControllerChange.bind(this);\n  }\n\n  /**\n   * Registers a service worker for this instances script URL and service\n   * worker options. By default this method delays registration until after\n   * the window has loaded.\n   *\n   * @param {Object} [options]\n   * @param {Function} [options.immediate=false] Setting this to true will\n   *     register the service worker immediately, even if the window has\n   *     not loaded (not recommended).\n   */\n  async register({immediate = false} = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._registrationTime) {\n        logger.error('Cannot re-register a Workbox instance after it has ' +\n            'been registered. Create a new instance instead.');\n        return;\n      }\n    }\n\n    if (!immediate && document.readyState !== 'complete') {\n      await new Promise((res) => addEventListener('load', res));\n    }\n\n    // Set this flag to true if any service worker was controlling the page\n    // at registration time.\n    this._isUpdate = Boolean(navigator.serviceWorker.controller);\n\n    // Before registering, attempt to determine if a SW is already controlling\n    // the page, and if that SW script (and version, if specified) matches this\n    // instance's script.\n    this._compatibleControllingSW = this._getControllingSWIfCompatible();\n\n    this._registration = await this._registerScript();\n\n    // If we have a compatible controller, store the controller as the \"own\"\n    // SW, resolve active/controlling deferreds and add necessary listeners.\n    if (this._compatibleControllingSW) {\n      this._sw = this._compatibleControllingSW;\n      this._activeDeferred.resolve(this._compatibleControllingSW);\n      this._controllingDeferred.resolve(this._compatibleControllingSW);\n\n      this._reportWindowReady(this._compatibleControllingSW);\n      this._compatibleControllingSW.addEventListener(\n          'statechange', this._onStateChange, {once: true});\n    }\n\n    // If there's a waiting service worker with a matching URL before the\n    // `updatefound` event fires, it likely means that this site is open\n    // in another tab, or the user refreshed the page (and thus the prevoius\n    // page wasn't fully unloaded before this page started loading).\n    // https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting\n    const waitingSW = this._registration.waiting;\n    if (waitingSW && urlsMatch(waitingSW.scriptURL, this._scriptURL)) {\n      // Store the waiting SW as the \"own\" Sw, even if it means overwriting\n      // a compatible controller.\n      this._sw = waitingSW;\n\n      // Run this in the next microtask, so any code that adds an event\n      // listener after awaiting `register()` will get this event.\n      Promise.resolve().then(() => {\n        this.dispatchEvent(new WorkboxEvent('waiting', {\n          sw: waitingSW,\n          wasWaitingBeforeRegister: true,\n        }));\n        if (process.env.NODE_ENV !== 'production') {\n          logger.warn('A service worker was already waiting to activate ' +\n              'before this script was registered...');\n        }\n      });\n    }\n\n    // If an \"own\" SW is already set, resolve the deferred.\n    if (this._sw) {\n      this._swDeferred.resolve(this._sw);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      logger.log('Successfully registered service worker.', this._scriptURL);\n\n      if (navigator.serviceWorker.controller) {\n        if (this._compatibleControllingSW) {\n          logger.debug('A service worker with the same script URL ' +\n              'is already controlling this page.');\n        } else {\n          logger.debug('A service worker with a different script URL is ' +\n              'currently controlling the page. The browser is now fetching ' +\n              'the new script now...');\n        }\n      }\n\n      const currentPageIsOutOfScope = () => {\n        const scopeURL = new URL(\n            this._registerOptions.scope || this._scriptURL, document.baseURI);\n        const scopeURLBasePath = new URL('./', scopeURL.href).pathname;\n        return !location.pathname.startsWith(scopeURLBasePath);\n      };\n      if (currentPageIsOutOfScope()) {\n        logger.warn('The current page is not in scope for the registered ' +\n            'service worker. Was this a mistake?');\n      }\n    }\n\n    this._registration.addEventListener('updatefound', this._onUpdateFound);\n    navigator.serviceWorker.addEventListener(\n        'controllerchange', this._onControllerChange, {once: true});\n\n    // Add message listeners.\n    if ('BroadcastChannel' in self) {\n      this._broadcastChannel = new BroadcastChannel('workbox');\n      this._broadcastChannel.addEventListener('message', this._onMessage);\n    }\n    navigator.serviceWorker.addEventListener('message', this._onMessage);\n\n    return this._registration;\n  }\n\n  /**\n   * Resolves to the service worker registered by this instance as soon as it\n   * is active. If a service worker was already controlling at registration\n   * time then it will resolve to that if the script URLs (and optionally\n   * script versions) match, otherwise it will wait until an update is found\n   * and activates.\n   *\n   * @return {Promise<ServiceWorker>}\n   */\n  get active() {\n    return this._activeDeferred.promise;\n  }\n\n  /**\n   * Resolves to the service worker registered by this instance as soon as it\n   * is controlling the page. If a service worker was already controlling at\n   * registration time then it will resolve to that if the script URLs (and\n   * optionally script versions) match, otherwise it will wait until an update\n   * is found and starts controlling the page.\n   * Note: the first time a service worker is installed it will active but\n   * not start controlling the page unless `clients.claim()` is called in the\n   * service worker.\n   *\n   * @return {Promise<ServiceWorker>}\n   */\n  get controlling() {\n    return this._controllingDeferred.promise;\n  }\n\n  /**\n   * Resolves with a reference to a service worker that matches the script URL\n   * of this instance, as soon as it's available.\n   *\n   * If, at registration time, there's already an active or waiting service\n   * worker with a matching script URL, it will be used (with the waiting\n   * service worker taking precedence over the active service worker if both\n   * match, since the waiting service worker would have been registered more\n   * recently).\n   * If there's no matching active or waiting service worker at registration\n   * time then the promise will not resolve until an update is found and starts\n   * installing, at which point the installing service worker is used.\n   *\n   * @return {Promise<ServiceWorker>}\n   */\n  async getSW() {\n    // If `this._sw` is set, resolve with that as we want `getSW()` to\n    // return the correct (new) service worker if an update is found.\n    return this._sw || this._swDeferred.promise;\n  }\n\n  /**\n   * Sends the passed data object to the service worker registered by this\n   * instance (via [`getSW()`]{@link module:workbox-window.Workbox#getSW}) and resolves\n   * with a response (if any).\n   *\n   * A response can be set in a message handler in the service worker by\n   * calling `event.ports[0].postMessage(...)`, which will resolve the promise\n   * returned by `messageSW()`. If no response is set, the promise will never\n   * resolve.\n   *\n   * @param {Object} data An object to send to the service worker\n   * @return {Promise<Object>}\n   */\n  async messageSW(data) {\n    const sw = await this.getSW();\n    return messageSW(sw, data);\n  }\n\n  /**\n   * Checks for a service worker already controlling the page and returns\n   * it if its script URL matchs.\n   *\n   * @private\n   * @return {ServiceWorker|undefined}\n   */\n  _getControllingSWIfCompatible() {\n    const controller = navigator.serviceWorker.controller;\n    if (controller && urlsMatch(controller.scriptURL, this._scriptURL)) {\n      return controller;\n    }\n  }\n\n  /**\n   * Registers a service worker for this instances script URL and register\n   * options and tracks the time registration was complete.\n   *\n   * @private\n   */\n  async _registerScript() {\n    try {\n      const reg = await navigator.serviceWorker.register(\n          this._scriptURL, this._registerOptions);\n\n      // Keep track of when registration happened, so it can be used in the\n      // `this._onUpdateFound` heuristic. Also use the presence of this\n      // property as a way to see if `.register()` has been called.\n      this._registrationTime = performance.now();\n\n      return reg;\n    } catch (error) {\n      if (process.env.NODE_ENV !== 'production') {\n        logger.error(error);\n      }\n      // Re-throw the error.\n      throw error;\n    }\n  }\n\n\n  /**\n   * Sends a message to the passed service worker that the window is ready.\n   *\n   * @param {ServiceWorker} sw\n   * @private\n   */\n  _reportWindowReady(sw) {\n    messageSW(sw, {\n      type: 'WINDOW_READY',\n      meta: 'workbox-window',\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onUpdateFound() {\n    const installingSW = this._registration.installing;\n\n    // If the script URL passed to `navigator.serviceWorker.register()` is\n    // different from the current controlling SW's script URL, we know any\n    // successful registration calls will trigger an `updatefound` event.\n    // But if the registered script URL is the same as the current controlling\n    // SW's script URL, we'll only get an `updatefound` event if the file\n    // changed since it was last registered. This can be a problem if the user\n    // opens up the same page in a different tab, and that page registers\n    // a SW that triggers an update. It's a problem because this page has no\n    // good way of knowing whether the `updatefound` event came from the SW\n    // script it registered or from a registration attempt made by a newer\n    // version of the page running in another tab.\n    // To minimize the possibility of a false positive, we use the logic here:\n    let updateLikelyTriggeredExternally =\n        // Since we enforce only calling `register()` once, and since we don't\n        // add the `updatefound` event listener until the `register()` call, if\n        // `_updateFoundCount` is > 0 then it means this method has already\n        // been called, thus this SW must be external\n        this._updateFoundCount > 0 ||\n        // If the script URL of the installing SW is different from this\n        // instance's script URL, we know it's definitely not from our\n        // registration.\n        !urlsMatch(installingSW.scriptURL, this._scriptURL) ||\n        // If all of the above are false, then we use a time-based heuristic:\n        // Any `updatefound` event that occurs long after our registration is\n        // assumed to be external.\n        (performance.now() >\n            this._registrationTime + REGISTRATION_TIMEOUT_DURATION) ?\n                // If any of the above are not true, we assume the update was\n                // triggered by this instance.\n                true : false;\n\n    if (updateLikelyTriggeredExternally) {\n      this._externalSW = installingSW;\n      this._registration.removeEventListener(\n          'updatefound', this._onUpdateFound);\n    } else {\n      // If the update was not triggered externally we know the installing\n      // SW is the one we registered, so we set it.\n      this._sw = installingSW;\n      this._swDeferred.resolve(installingSW);\n\n      // The `installing` state isn't something we have a dedicated\n      // callback for, but we do log messages for it in development.\n      if (process.env.NODE_ENV !== 'production') {\n        if (navigator.serviceWorker.controller) {\n          logger.log('Updated service worker found. Installing now...');\n        } else {\n          logger.log('Service worker is installing...');\n        }\n      }\n    }\n\n    // Increment the `updatefound` count, so future invocations of this\n    // method can be sure they were triggered externally.\n    ++this._updateFoundCount;\n\n    // Add a `statechange` listener regardless of whether this update was\n    // triggered externally, since we have callbacks for both.\n    installingSW.addEventListener('statechange', this._onStateChange);\n  }\n\n  /**\n   * @private\n   * @param {Event} originalEvent\n   */\n  _onStateChange(originalEvent) {\n    const sw = originalEvent.target;\n    const {state} = sw;\n    const isExternal = sw === this._externalSW;\n    const eventPrefix = isExternal ? 'external' : '';\n\n    const eventProps = {sw, originalEvent};\n    if (!isExternal && this._isUpdate) {\n      eventProps.isUpdate = true;\n    }\n\n    this.dispatchEvent(new WorkboxEvent(\n        eventPrefix + state, eventProps));\n\n    if (state === 'installed') {\n      // This timeout is used to ignore cases where the service worker calls\n      // `skipWaiting()` in the install event, thus moving it directly in the\n      // activating state. (Since all service workers *must* go through the\n      // waiting phase, the only way to detect `skipWaiting()` called in the\n      // install event is to observe that the time spent in the waiting phase\n      // is very short.)\n      // NOTE: we don't need separate timeouts for the own and external SWs\n      // since they can't go through these phases at the same time.\n      this._waitingTimeout = setTimeout(() => {\n        // Ensure the SW is still waiting (it may now be redundant).\n        if (state === 'installed' && this._registration.waiting === sw) {\n          this.dispatchEvent(new WorkboxEvent(\n              eventPrefix + 'waiting', eventProps));\n\n          if (process.env.NODE_ENV !== 'production') {\n            if (isExternal) {\n              logger.warn('An external service worker has installed but is ' +\n                  'waiting for this client to close before activating...');\n            } else {\n              logger.warn('The service worker has installed but is waiting ' +\n                  'for existing clients to close before activating...');\n            }\n          }\n        }\n      }, WAITING_TIMEOUT_DURATION);\n    } else if (state === 'activating') {\n      clearTimeout(this._waitingTimeout);\n      if (!isExternal) {\n        this._activeDeferred.resolve(sw);\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      switch (state) {\n        case 'installed':\n          if (isExternal) {\n            logger.warn('An external service worker has installed. ' +\n                'You may want to suggest users reload this page.');\n          } else {\n            logger.log('Registered service worker installed.');\n          }\n          break;\n        case 'activated':\n          if (isExternal) {\n            logger.warn('An external service worker has activated.');\n          } else {\n            logger.log('Registered service worker activated.');\n            if (sw !== navigator.serviceWorker.controller) {\n              logger.warn('The registered service worker is active but ' +\n                  'not yet controlling the page. Reload or run ' +\n                  '`clients.claim()` in the service worker.');\n            }\n          }\n          break;\n        case 'redundant':\n          if (sw === this._compatibleControllingSW) {\n            logger.log('Previously controlling service worker now redundant!');\n          } else if (!isExternal) {\n            logger.log('Registered service worker now redundant!');\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} originalEvent\n   */\n  _onControllerChange(originalEvent) {\n    const sw = this._sw;\n    if (sw === navigator.serviceWorker.controller) {\n      this.dispatchEvent(new WorkboxEvent('controlling', {sw, originalEvent}));\n      if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered service worker now controlling this page.');\n      }\n      this._controllingDeferred.resolve(sw);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} originalEvent\n   */\n  _onMessage(originalEvent) {\n    const {data} = originalEvent;\n    this.dispatchEvent(new WorkboxEvent('message', {data, originalEvent}));\n  }\n}\n\n// The jsdoc comments below outline the events this instance may dispatch:\n// -----------------------------------------------------------------------\n\n/**\n * The `message` event is dispatched any time a `postMessage` (or a\n * `BroadcastChannel` message with the `workbox` channel name) is received.\n *\n * @event module:workbox-window.Workbox#message\n * @type {WorkboxEvent}\n * @property {*} data The `data` property from the original `message` event.\n * @property {Event} originalEvent The original [`message`]{@link https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent}\n *     event.\n * @property {string} type `message`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\n/**\n * The `installed` event is dispatched if the state of a\n * [`Workbox`]{@link module:workbox-window.Workbox} instance's\n * [registered service worker]{@link https://developers.google.com/web/tools/workbox/modules/workbox-precaching#def-registered-sw}\n * changes to `installed`.\n *\n * Then can happen either the very first time a service worker is installed,\n * or after an update to the current service worker is found. In the case\n * of an update being found, the event's `isUpdate` property will be `true`.\n *\n * @event module:workbox-window.Workbox#installed\n * @type {WorkboxEvent}\n * @property {ServiceWorker} sw The service worker instance.\n * @property {Event} originalEvent The original [`statechange`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/onstatechange}\n *     event.\n * @property {boolean|undefined} isUpdate True if a service worker was already\n *     controlling when this `Workbox` instance called `register()`.\n * @property {string} type `installed`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\n/**\n * The `waiting` event is dispatched if the state of a\n * [`Workbox`]{@link module:workbox-window.Workbox} instance's\n * [registered service worker]{@link https://developers.google.com/web/tools/workbox/modules/workbox-precaching#def-registered-sw}\n * changes to `installed` and then doesn't immediately change to `activating`.\n * It may also be dispatched if a service worker with the same\n * [`scriptURL`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/scriptURL}\n * was already waiting when the [`register()`]{@link module:workbox-window.Workbox#register}\n * method was called.\n *\n * @event module:workbox-window.Workbox#waiting\n * @type {WorkboxEvent}\n * @property {ServiceWorker} sw The service worker instance.\n * @property {Event} originalEvent The native `controllerchange` event\n * @property {boolean|undefined} isUpdate True if a service worker was already\n *     controlling when this `Workbox` instance called `register()`.\n * @property {boolean|undefined} wasWaitingBeforeRegister True if a service worker with\n *     a matching `scriptURL` was already waiting when this `Workbox`\n *     instance called `register()`.\n * @property {string} type `waiting`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\n/**\n * The `controlling` event is dispatched if a\n * [`controllerchange`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/oncontrollerchange}\n * fires on the service worker [container]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer}\n * and the [`scriptURL`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/scriptURL}\n * of the new [controller]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/controller}\n * matches the `scriptURL` of the `Workbox` instance's\n * [registered service worker]{@link https://developers.google.com/web/tools/workbox/modules/workbox-precaching#def-registered-sw}.\n *\n * @event module:workbox-window.Workbox#controlling\n * @type {WorkboxEvent}\n * @property {ServiceWorker} sw The service worker instance.\n * @property {Event} originalEvent The original [`controllerchange`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/oncontrollerchange}\n *     event.\n * @property {boolean|undefined} isUpdate True if a service worker was already\n *     controlling when this service worker was registered.\n * @property {string} type `controlling`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\n/**\n * The `activated` event is dispatched if the state of a\n * [`Workbox`]{@link module:workbox-window.Workbox} instance's\n * [registered service worker]{@link https://developers.google.com/web/tools/workbox/modules/workbox-precaching#def-registered-sw}\n * changes to `activated`.\n *\n * @event module:workbox-window.Workbox#activated\n * @type {WorkboxEvent}\n * @property {ServiceWorker} sw The service worker instance.\n * @property {Event} originalEvent The original [`statechange`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/onstatechange}\n *     event.\n * @property {boolean|undefined} isUpdate True if a service worker was already\n *     controlling when this `Workbox` instance called `register()`.\n * @property {string} type `activated`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\n/**\n * The `redundant` event is dispatched if the state of a\n * [`Workbox`]{@link module:workbox-window.Workbox} instance's\n * [registered service worker]{@link https://developers.google.com/web/tools/workbox/modules/workbox-precaching#def-registered-sw}\n * changes to `redundant`.\n *\n * @event module:workbox-window.Workbox#redundant\n * @type {WorkboxEvent}\n * @property {ServiceWorker} sw The service worker instance.\n * @property {Event} originalEvent The original [`statechange`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/onstatechange}\n *     event.\n * @property {boolean|undefined} isUpdate True if a service worker was already\n *     controlling when this `Workbox` instance called `register()`.\n * @property {string} type `redundant`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\n/**\n * The `externalinstalled` event is dispatched if the state of an\n * [external service worker]{@link https://developers.google.com/web/tools/workbox/modules/workbox-precaching#def-external-sw}\n * changes to `installed`.\n *\n * @event module:workbox-window.Workbox#externalinstalled\n * @type {WorkboxEvent}\n * @property {ServiceWorker} sw The service worker instance.\n * @property {Event} originalEvent The original [`statechange`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/onstatechange}\n *     event.\n * @property {string} type `externalinstalled`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\n/**\n * The `externalwaiting` event is dispatched if the state of an\n * [external service worker]{@link https://developers.google.com/web/tools/workbox/modules/workbox-precaching#def-external-sw}\n * changes to `waiting`.\n *\n * @event module:workbox-window.Workbox#externalwaiting\n * @type {WorkboxEvent}\n * @property {ServiceWorker} sw The service worker instance.\n * @property {Event|undefined} originalEvent The original [`statechange`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/onstatechange}\n *     event.\n * @property {string} type `externalwaiting`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\n/**\n * The `externalactivated` event is dispatched if the state of an\n * [external service worker]{@link https://developers.google.com/web/tools/workbox/modules/workbox-precaching#def-external-sw}\n * changes to `activated`.\n *\n * @event module:workbox-window.Workbox#externalactivated\n * @type {WorkboxEvent}\n * @property {ServiceWorker} sw The service worker instance.\n * @property {Event} originalEvent The original [`statechange`]{@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/onstatechange}\n *     event.\n * @property {string} type `externalactivated`.\n * @property {Workbox} target The `Workbox` instance.\n */\n\nexport {Workbox};\n","try{self['workbox:window:4.2.0']&&_()}catch(e){}// eslint-disable-line","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport './_version.mjs';\n\n\n/**\n * Sends a data object to a service worker via `postMessage` and resolves with\n * a response (if any).\n *\n * A response can be set in a message handler in the service worker by\n * calling `event.ports[0].postMessage(...)`, which will resolve the promise\n * returned by `messageSW()`. If no response is set, the promise will not\n * resolve.\n *\n * @param {ServiceWorker} sw The service worker to send the message to.\n * @param {Object} data An object to send to the service worker.\n * @return {Promise<Object|undefined>}\n *\n * @memberof module:workbox-window\n */\nconst messageSW = (sw, data) => {\n  return new Promise((resolve) => {\n    let messageChannel = new MessageChannel();\n    messageChannel.port1.onmessage = (evt) => resolve(evt.data);\n    sw.postMessage(data, [messageChannel.port2]);\n  });\n};\n\nexport {messageSW};\n","try{self['workbox:core:4.2.0']&&_()}catch(e){}// eslint-disable-line","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport '../_version.mjs';\n\n\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nexport class Deferred {\n  /**\n   * Creates a promise and exposes its resolve and reject functions as methods.\n   */\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport '../_version.mjs';\n\n\n/**\n * Returns true if two URLs have the same `.href` property. The URLS can be\n * relative, and if they are the current location href is used to resolve URLs.\n *\n * @private\n * @param {string} url1\n * @param {string} url2\n * @return {boolean}\n */\nconst urlsMatch = (url1, url2) => {\n  return new URL(url1, location).href === new URL(url2, location).href;\n};\n\nexport {urlsMatch};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport '../_version.mjs';\n\n/**\n * A minimal `Event` subclass shim.\n * This doesn't *actually* subclass `Event` because not all browsers support\n * constructable `EventTarget`, and using a real `Event` will error.\n * @private\n */\nclass WorkboxEvent {\n  /**\n   * @param {string} type\n   * @param {Object} props\n   */\n  constructor(type, props) {\n    Object.assign(this, props, {type});\n  }\n}\n\nexport {WorkboxEvent};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport '../_version.mjs';\n\n\n/**\n * A minimal `EventTarget` shim.\n * This is necessary because not all browsers support constructable\n * `EventTarget`, so using a real `EventTarget` will error.\n * @private\n */\nclass EventTargetShim {\n  /**\n   * Creates an event listener registry\n   */\n  constructor() {\n    // A registry of event types to listeners.\n    this._eventListenerRegistry = {};\n  }\n  /**\n   * @param {string} type\n   * @param {Function} listener\n   */\n  addEventListener(type, listener) {\n    this._getEventListenersByType(type).add(listener);\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} listener\n   */\n  removeEventListener(type, listener) {\n    this._getEventListenersByType(type).delete(listener);\n  }\n\n  /**\n   * @param {Event} event\n   */\n  dispatchEvent(event) {\n    event.target = this;\n    this._getEventListenersByType(event.type).forEach(\n        (listener) => listener(event));\n  }\n\n  /**\n   * Returns a Set of listeners associated with the passed event type.\n   * If no handlers have been registered, an empty Set is returned.\n   *\n   * @param {string} type The event type.\n   * @return {Set} An array of handler functions.\n   */\n  _getEventListenersByType(type) {\n    return this._eventListenerRegistry[type] =\n        (this._eventListenerRegistry[type] || new Set());\n  }\n}\n\nexport {EventTargetShim};\n","'use strict';\n\n// Locally root will be / but on gh-pages, /browser-shell/\n// Strip the leading and trailing / (if present), since we'll\n// add that in nohost.\nconst pathname = window.location.pathname;\nconst basename = pathname.replace(/\\/(index.html)?$/, '');\nconst webRoot = basename.replace(/^\\//, '');\n\nmodule.exports = {\n  fsRoot: webRoot ? `${webRoot}/fs` : 'fs',\n\n  stateUrl: 'bin/vm-state.bin',\n  vmStateCache: 'vm-state',\n\n  // https://github.com/sonatard/color-theme-molokai/blob/2320bc6150c5dd2be353a9a7967e8c482dc48b61/molokai.minttyrc\n  molokaiTheme: {\n    background: '#252525',\n    cursor: '#A0A0A0',\n    foreground: '#A0A0A0',\n    black: '#252525',\n    blue: '#268BD2',\n    brightBlack: '#505354',\n    brightBlue: '#62ADE3',\n    brightCyan: '#94D8E5',\n    brightGreen: '#B7EB46',\n    brightMagenta: '#BFA0FE',\n    brightRed: '#FF5995',\n    brightWhite: '#F8F8F2',\n    brightYellow: '#FEED6C',\n    cyan: '#56C2D6',\n    green: '#82B414 ',\n    magenta: '#8C54FE',\n    red: '#F92672',\n    white: '#CCCCC6',\n    yellow: '#FD971F'\n  },\n\n  defaultEmulatorOptions: {\n    memory_size: 32 * 1024 * 1024,\n    vga_memory_size: 2 * 1024 * 1024,\n    /* If you need to debug the main console, add this back.\n    screen_container: document.getElementById('screen_container'),\n    */\n    bios: {\n      url: 'browser-shell/dist/bin/seabios.bin',\n    },\n    vga_bios: {\n      url: 'browser-shell/dist/bin/vgabios.bin',\n    },\n    cdrom: {\n      url: 'browser-shell/dist/bin/v86-linux.iso',\n    },\n    // Mouse disabled, undo if you want to interact with the screen\n    disable_mouse: true,\n    // Keyboard disabled, undo if you want to type in screen\n    disable_keyboard: true,\n    // Disable sound\n    disable_speaker: true,\n    autostart: true\n  }\n};\n","'use strict';\n\nconst { fsRoot } = require('./config');\n\nfunction start() {\n  // Open a page to the nohost web server for this filesystem.  \n  const iframe = document.querySelector('#nohost-server');\n  const iframeWindow = iframe.contentWindow;\n\n  // Back\n  document.querySelector('#browser-back').onclick = function(e) {\n    e.preventDefault();\n    iframeWindow.history.back(); \n  };\n\n  // Forward\n  document.querySelector('#browser-forward').onclick = function(e) {\n    e.preventDefault();\n    iframeWindow.history.forward();\n  };\n\n  function goHome() {\n    iframe.src = `/${fsRoot}`;\n  }\n\n  // Forward\n  document.querySelector('#browser-home').onclick = function(e) {\n    e.preventDefault();\n    goHome();\n  };\n\n  // Refresh\n  document.querySelector('#browser-refresh').onclick = function(e) {\n    e.preventDefault();\n    iframeWindow.location.reload(true);\n  };\n\n  goHome();\n}\n\nmodule.exports.start = start;\n","parcelRequire=function(e,r,n,t){var i=\"function\"==typeof parcelRequire&&parcelRequire,o=\"function\"==typeof require&&require;function u(n,t){if(!r[n]){if(!e[n]){var f=\"function\"==typeof parcelRequire&&parcelRequire;if(!t&&f)return f(n,!0);if(i)return i(n,!0);if(o&&\"string\"==typeof n)return o(n);var c=new Error(\"Cannot find module '\"+n+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}p.resolve=function(r){return e[n][1][r]||r},p.cache={};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,p,l,l.exports,this)}return r[n].exports;function p(e){return u(p.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=i,u.register=function(r,n){e[r]=[function(e,r){r.exports=n},{}]};for(var f=0;f<n.length;f++)u(n[f]);if(n.length){var c=u(n[n.length-1]);\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=c:\"function\"==typeof define&&define.amd?define(function(){return c}):t&&(this[t]=c)}return u}({\"0c0E\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var r=\"__ES6-PROMISIFY--CUSTOM-ARGUMENTS__\";function o(e){if(\"function\"!=typeof e)throw new TypeError(\"Argument to promisify must be a function\");var n=e[r],t=o.Promise||Promise;if(\"function\"!=typeof t)throw new Error(\"No Promise implementation found; do you need a polyfill?\");return function(){for(var r=this,o=arguments.length,i=Array(o),f=0;f<o;f++)i[f]=arguments[f];return new t(function(o,t){i.push(function(r){if(r)return t(r);for(var e=arguments.length,i=Array(e>1?e-1:0),f=1;f<e;f++)i[f-1]=arguments[f];if(1===i.length||!n)return o(i[0]);var u={};i.forEach(function(r,o){var e=n[o];e&&(u[e]=r)}),o(u)}),e.call.apply(e,[r].concat(i))})}}o.argumentNames=r,o.Promise=void 0,exports.promisify=o;\n},{}],\"pBGv\":[function(require,module,exports) {\n\nvar t,e,n=module.exports={};function r(){throw new Error(\"setTimeout has not been defined\")}function o(){throw new Error(\"clearTimeout has not been defined\")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===r||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}function u(t){if(e===clearTimeout)return clearTimeout(t);if((e===o||!e)&&clearTimeout)return e=clearTimeout,clearTimeout(t);try{return e(t)}catch(n){try{return e.call(null,t)}catch(n){return e.call(this,t)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:r}catch(n){t=r}try{e=\"function\"==typeof clearTimeout?clearTimeout:o}catch(n){e=o}}();var c,s=[],l=!1,a=-1;function f(){l&&c&&(l=!1,c.length?s=c.concat(s):a=-1,s.length&&h())}function h(){if(!l){var t=i(f);l=!0;for(var e=s.length;e;){for(c=s,s=[];++a<e;)c&&c[a].run();a=-1,e=s.length}c=null,l=!1,u(t)}}function m(t,e){this.fun=t,this.array=e}function p(){}n.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];s.push(new m(t,e)),1!==s.length||l||i(h)},m.prototype.run=function(){this.fun.apply(null,this.array)},n.title=\"browser\",n.browser=!0,n.env={},n.argv=[],n.version=\"\",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(t){return[]},n.binding=function(t){throw new Error(\"process.binding is not supported\")},n.cwd=function(){return\"/\"},n.chdir=function(t){throw new Error(\"process.chdir is not supported\")},n.umask=function(){return 0};\n},{}],\"UUq2\":[function(require,module,exports) {\nvar process = require(\"process\");\nvar r=require(\"process\");function t(r,t){for(var e=0,n=r.length-1;n>=0;n--){var s=r[n];\".\"===s?r.splice(n,1):\"..\"===s?(r.splice(n,1),e++):e&&(r.splice(n,1),e--)}if(t)for(;e--;e)r.unshift(\"..\");return r}var e=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/,n=function(r){return e.exec(r).slice(1)};function s(r,t){if(r.filter)return r.filter(t);for(var e=[],n=0;n<r.length;n++)t(r[n],n,r)&&e.push(r[n]);return e}exports.resolve=function(){for(var e=\"\",n=!1,o=arguments.length-1;o>=-1&&!n;o--){var i=o>=0?arguments[o]:r.cwd();if(\"string\"!=typeof i)throw new TypeError(\"Arguments to path.resolve must be strings\");i&&(e=i+\"/\"+e,n=\"/\"===i.charAt(0))}return(n?\"/\":\"\")+(e=t(s(e.split(\"/\"),function(r){return!!r}),!n).join(\"/\"))||\".\"},exports.normalize=function(r){var e=exports.isAbsolute(r),n=\"/\"===o(r,-1);return(r=t(s(r.split(\"/\"),function(r){return!!r}),!e).join(\"/\"))||e||(r=\".\"),r&&n&&(r+=\"/\"),(e?\"/\":\"\")+r},exports.isAbsolute=function(r){return\"/\"===r.charAt(0)},exports.join=function(){var r=Array.prototype.slice.call(arguments,0);return exports.normalize(s(r,function(r,t){if(\"string\"!=typeof r)throw new TypeError(\"Arguments to path.join must be strings\");return r}).join(\"/\"))},exports.relative=function(r,t){function e(r){for(var t=0;t<r.length&&\"\"===r[t];t++);for(var e=r.length-1;e>=0&&\"\"===r[e];e--);return t>e?[]:r.slice(t,e-t+1)}r=exports.resolve(r).substr(1),t=exports.resolve(t).substr(1);for(var n=e(r.split(\"/\")),s=e(t.split(\"/\")),o=Math.min(n.length,s.length),i=o,u=0;u<o;u++)if(n[u]!==s[u]){i=u;break}var l=[];for(u=i;u<n.length;u++)l.push(\"..\");return(l=l.concat(s.slice(i))).join(\"/\")},exports.sep=\"/\",exports.delimiter=\":\",exports.dirname=function(r){var t=n(r),e=t[0],s=t[1];return e||s?(s&&(s=s.substr(0,s.length-1)),e+s):\".\"},exports.basename=function(r,t){var e=n(r)[2];return t&&e.substr(-1*t.length)===t&&(e=e.substr(0,e.length-t.length)),e},exports.extname=function(r){return n(r)[3]};var o=\"b\"===\"ab\".substr(-1)?function(r,t,e){return r.substr(t,e)}:function(r,t,e){return t<0&&(t=r.length+t),r.substr(t,e)};\n},{\"process\":\"pBGv\"}],\"8thZ\":[function(require,module,exports) {\nvar process = require(\"process\");\nvar e=require(\"process\");e.cwd=function(){return\"/\"};var r=require(\"path\"),n=Object.create(r);n.basename=function(e,n){var i=r.basename(e,n);return\"\"===i?\"/\":i},n.normalize=function(e){return\"/\"===(e=r.normalize(e))?e:n.removeTrailing(e)},n.isNull=function(e){return-1!==(\"\"+e).indexOf(\"\\0\")},n.addTrailing=function(e){return e.replace(/\\/*$/,\"/\")},n.removeTrailing=function(e){return\"\"===(e=e.replace(/\\/*$/,\"\"))?\"/\":e},module.exports=n;\n},{\"path\":\"UUq2\",\"process\":\"pBGv\"}],\"gCho\":[function(require,module,exports) {\nvar _=\"READ\",E=\"WRITE\",O=\"CREATE\",R=\"EXCLUSIVE\",I=\"TRUNCATE\",S=\"APPEND\",T=\"CREATE\",N=\"REPLACE\";module.exports={FILE_SYSTEM_NAME:\"local\",FILE_STORE_NAME:\"files\",IDB_RO:\"readonly\",IDB_RW:\"readwrite\",WSQL_VERSION:\"1\",WSQL_SIZE:5242880,WSQL_DESC:\"FileSystem Storage\",NODE_TYPE_FILE:\"FILE\",NODE_TYPE_DIRECTORY:\"DIRECTORY\",NODE_TYPE_SYMBOLIC_LINK:\"SYMLINK\",NODE_TYPE_META:\"META\",DEFAULT_DIR_PERMISSIONS:493,DEFAULT_FILE_PERMISSIONS:420,FULL_READ_WRITE_EXEC_PERMISSIONS:511,READ_WRITE_PERMISSIONS:438,SYMLOOP_MAX:10,BINARY_MIME_TYPE:\"application/octet-stream\",JSON_MIME_TYPE:\"application/json\",ROOT_DIRECTORY_NAME:\"/\",FS_FORMAT:\"FORMAT\",FS_NOCTIME:\"NOCTIME\",FS_NOMTIME:\"NOMTIME\",FS_NODUPEIDCHECK:\"FS_NODUPEIDCHECK\",O_READ:_,O_WRITE:E,O_CREATE:O,O_EXCLUSIVE:R,O_TRUNCATE:I,O_APPEND:S,O_FLAGS:{r:[_],\"r+\":[_,E],w:[E,O,I],\"w+\":[E,_,O,I],wx:[E,O,R,I],\"wx+\":[E,_,O,R,I],a:[E,O,S],\"a+\":[E,_,O,S],ax:[E,O,R,S],\"ax+\":[E,_,O,R,S]},XATTR_CREATE:T,XATTR_REPLACE:N,FS_READY:\"READY\",FS_PENDING:\"PENDING\",FS_ERROR:\"ERROR\",SUPER_NODE_ID:\"00000000-0000-0000-0000-000000000000\",STDIN:0,STDOUT:1,STDERR:2,FIRST_DESCRIPTOR:3,ENVIRONMENT:{TMP:\"/tmp\",PATH:\"\"},fsConstants:{O_RDONLY:0,O_WRONLY:1,O_RDWR:2,S_IFMT:61440,S_IFREG:32768,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960,S_IFSOCK:49152,O_CREAT:512,O_EXCL:2048,O_NOCTTY:131072,O_TRUNC:1024,O_APPEND:8,O_DIRECTORY:1048576,O_NOFOLLOW:256,O_SYNC:128,O_DSYNC:4194304,O_SYMLINK:2097152,O_NONBLOCK:4,S_IRWXU:448,S_IRUSR:256,S_IWUSR:128,S_IXUSR:64,S_IRWXG:56,S_IRGRP:32,S_IWGRP:16,S_IXGRP:8,S_IRWXO:7,S_IROTH:4,S_IWOTH:2,S_IXOTH:1,F_OK:0,R_OK:4,W_OK:2,X_OK:1,UV_FS_COPYFILE_EXCL:1,COPYFILE_EXCL:1}};\n},{}],\"yh9p\":[function(require,module,exports) {\n\"use strict\";exports.byteLength=u,exports.toByteArray=i,exports.fromByteArray=d;for(var r=[],t=[],e=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",o=0,a=n.length;o<a;++o)r[o]=n[o],t[n.charCodeAt(o)]=o;function h(r){var t=r.length;if(t%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var e=r.indexOf(\"=\");return-1===e&&(e=t),[e,e===t?0:4-e%4]}function u(r){var t=h(r),e=t[0],n=t[1];return 3*(e+n)/4-n}function c(r,t,e){return 3*(t+e)/4-e}function i(r){for(var n,o=h(r),a=o[0],u=o[1],i=new e(c(r,a,u)),f=0,A=u>0?a-4:a,d=0;d<A;d+=4)n=t[r.charCodeAt(d)]<<18|t[r.charCodeAt(d+1)]<<12|t[r.charCodeAt(d+2)]<<6|t[r.charCodeAt(d+3)],i[f++]=n>>16&255,i[f++]=n>>8&255,i[f++]=255&n;return 2===u&&(n=t[r.charCodeAt(d)]<<2|t[r.charCodeAt(d+1)]>>4,i[f++]=255&n),1===u&&(n=t[r.charCodeAt(d)]<<10|t[r.charCodeAt(d+1)]<<4|t[r.charCodeAt(d+2)]>>2,i[f++]=n>>8&255,i[f++]=255&n),i}function f(t){return r[t>>18&63]+r[t>>12&63]+r[t>>6&63]+r[63&t]}function A(r,t,e){for(var n,o=[],a=t;a<e;a+=3)n=(r[a]<<16&16711680)+(r[a+1]<<8&65280)+(255&r[a+2]),o.push(f(n));return o.join(\"\")}function d(t){for(var e,n=t.length,o=n%3,a=[],h=0,u=n-o;h<u;h+=16383)a.push(A(t,h,h+16383>u?u:h+16383));return 1===o?(e=t[n-1],a.push(r[e>>2]+r[e<<4&63]+\"==\")):2===o&&(e=(t[n-2]<<8)+t[n-1],a.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+\"=\")),a.join(\"\")}t[\"-\".charCodeAt(0)]=62,t[\"_\".charCodeAt(0)]=63;\n},{}],\"JgNJ\":[function(require,module,exports) {\nexports.read=function(o,t,a,r,h){var M,p,w=8*h-r-1,f=(1<<w)-1,N=f>>1,n=-7,i=a?h-1:0,e=a?-1:1,s=o[t+i];for(i+=e,M=s&(1<<-n)-1,s>>=-n,n+=w;n>0;M=256*M+o[t+i],i+=e,n-=8);for(p=M&(1<<-n)-1,M>>=-n,n+=r;n>0;p=256*p+o[t+i],i+=e,n-=8);if(0===M)M=1-N;else{if(M===f)return p?NaN:1/0*(s?-1:1);p+=Math.pow(2,r),M-=N}return(s?-1:1)*p*Math.pow(2,M-r)},exports.write=function(o,t,a,r,h,M){var p,w,f,N=8*M-h-1,n=(1<<N)-1,i=n>>1,e=23===h?Math.pow(2,-24)-Math.pow(2,-77):0,s=r?0:M-1,u=r?1:-1,l=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(w=isNaN(t)?1:0,p=n):(p=Math.floor(Math.log(t)/Math.LN2),t*(f=Math.pow(2,-p))<1&&(p--,f*=2),(t+=p+i>=1?e/f:e*Math.pow(2,1-i))*f>=2&&(p++,f/=2),p+i>=n?(w=0,p=n):p+i>=1?(w=(t*f-1)*Math.pow(2,h),p+=i):(w=t*Math.pow(2,i-1)*Math.pow(2,h),p=0));h>=8;o[a+s]=255&w,s+=u,w/=256,h-=8);for(p=p<<h|w,N+=h;N>0;o[a+s]=255&p,s+=u,p/=256,N-=8);o[a+s-u]|=128*l};\n},{}],\"REa7\":[function(require,module,exports) {\nvar r={}.toString;module.exports=Array.isArray||function(t){return\"[object Array]\"==r.call(t)};\n},{}],\"dskh\":[function(require,module,exports) {\n\nvar global = arguments[3];\nvar t=arguments[3],r=require(\"base64-js\"),e=require(\"ieee754\"),n=require(\"isarray\");function i(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&\"function\"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(r){return!1}}function o(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(t,r){if(o()<r)throw new RangeError(\"Invalid typed array length\");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(r)).__proto__=u.prototype:(null===t&&(t=new u(r)),t.length=r),t}function u(t,r,e){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(t,r,e);if(\"number\"==typeof t){if(\"string\"==typeof r)throw new Error(\"If encoding is specified then the first argument must be a string\");return p(this,t)}return h(this,t,r,e)}function h(t,r,e,n){if(\"number\"==typeof r)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!=typeof ArrayBuffer&&r instanceof ArrayBuffer?g(t,r,e,n):\"string\"==typeof r?l(t,r,e):y(t,r)}function f(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function a(t,r,e,n){return f(r),r<=0?s(t,r):void 0!==e?\"string\"==typeof n?s(t,r).fill(e,n):s(t,r).fill(e):s(t,r)}function p(t,r){if(f(r),t=s(t,r<0?0:0|w(r)),!u.TYPED_ARRAY_SUPPORT)for(var e=0;e<r;++e)t[e]=0;return t}function l(t,r,e){if(\"string\"==typeof e&&\"\"!==e||(e=\"utf8\"),!u.isEncoding(e))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|v(r,e),i=(t=s(t,n)).write(r,e);return i!==n&&(t=t.slice(0,i)),t}function c(t,r){var e=r.length<0?0:0|w(r.length);t=s(t,e);for(var n=0;n<e;n+=1)t[n]=255&r[n];return t}function g(t,r,e,n){if(r.byteLength,e<0||r.byteLength<e)throw new RangeError(\"'offset' is out of bounds\");if(r.byteLength<e+(n||0))throw new RangeError(\"'length' is out of bounds\");return r=void 0===e&&void 0===n?new Uint8Array(r):void 0===n?new Uint8Array(r,e):new Uint8Array(r,e,n),u.TYPED_ARRAY_SUPPORT?(t=r).__proto__=u.prototype:t=c(t,r),t}function y(t,r){if(u.isBuffer(r)){var e=0|w(r.length);return 0===(t=s(t,e)).length?t:(r.copy(t,0,0,e),t)}if(r){if(\"undefined\"!=typeof ArrayBuffer&&r.buffer instanceof ArrayBuffer||\"length\"in r)return\"number\"!=typeof r.length||d(r.length)?s(t,0):c(t,r);if(\"Buffer\"===r.type&&n(r.data))return c(t,r.data)}throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}function w(t){if(t>=o())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+o().toString(16)+\" bytes\");return 0|t}function E(t){return+t!=t&&(t=0),u.alloc(+t)}function v(t,r){if(u.isBuffer(t))return t.length;if(\"undefined\"!=typeof ArrayBuffer&&\"function\"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var e=t.length;if(0===e)return 0;for(var n=!1;;)switch(r){case\"ascii\":case\"latin1\":case\"binary\":return e;case\"utf8\":case\"utf-8\":case void 0:return K(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*e;case\"hex\":return e>>>1;case\"base64\":return I(t).length;default:if(n)return K(t).length;r=(\"\"+r).toLowerCase(),n=!0}}function R(t,r,e){var n=!1;if((void 0===r||r<0)&&(r=0),r>this.length)return\"\";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return\"\";if((e>>>=0)<=(r>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return k(this,r,e);case\"utf8\":case\"utf-8\":return O(this,r,e);case\"ascii\":return L(this,r,e);case\"latin1\":case\"binary\":return M(this,r,e);case\"base64\":return S(this,r,e);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return N(this,r,e);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function _(t,r,e){var n=t[r];t[r]=t[e],t[e]=n}function A(t,r,e,n,i){if(0===t.length)return-1;if(\"string\"==typeof e?(n=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=i?0:t.length-1),e<0&&(e=t.length+e),e>=t.length){if(i)return-1;e=t.length-1}else if(e<0){if(!i)return-1;e=0}if(\"string\"==typeof r&&(r=u.from(r,n)),u.isBuffer(r))return 0===r.length?-1:m(t,r,e,n,i);if(\"number\"==typeof r)return r&=255,u.TYPED_ARRAY_SUPPORT&&\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,r,e):Uint8Array.prototype.lastIndexOf.call(t,r,e):m(t,[r],e,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function m(t,r,e,n,i){var o,s=1,u=t.length,h=r.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||r.length<2)return-1;s=2,u/=2,h/=2,e/=2}function f(t,r){return 1===s?t[r]:t.readUInt16BE(r*s)}if(i){var a=-1;for(o=e;o<u;o++)if(f(t,o)===f(r,-1===a?0:o-a)){if(-1===a&&(a=o),o-a+1===h)return a*s}else-1!==a&&(o-=o-a),a=-1}else for(e+h>u&&(e=u-h),o=e;o>=0;o--){for(var p=!0,l=0;l<h;l++)if(f(t,o+l)!==f(r,l)){p=!1;break}if(p)return o}return-1}function b(t,r,e,n){e=Number(e)||0;var i=t.length-e;n?(n=Number(n))>i&&(n=i):n=i;var o=r.length;if(o%2!=0)throw new TypeError(\"Invalid hex string\");n>o/2&&(n=o/2);for(var s=0;s<n;++s){var u=parseInt(r.substr(2*s,2),16);if(isNaN(u))return s;t[e+s]=u}return s}function T(t,r,e,n){return x(K(r,t.length-e),t,e,n)}function B(t,r,e,n){return x(Q(r),t,e,n)}function U(t,r,e,n){return B(t,r,e,n)}function Y(t,r,e,n){return x(I(r),t,e,n)}function P(t,r,e,n){return x(W(r,t.length-e),t,e,n)}function S(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function O(t,r,e){e=Math.min(t.length,e);for(var n=[],i=r;i<e;){var o,s,u,h,f=t[i],a=null,p=f>239?4:f>223?3:f>191?2:1;if(i+p<=e)switch(p){case 1:f<128&&(a=f);break;case 2:128==(192&(o=t[i+1]))&&(h=(31&f)<<6|63&o)>127&&(a=h);break;case 3:o=t[i+1],s=t[i+2],128==(192&o)&&128==(192&s)&&(h=(15&f)<<12|(63&o)<<6|63&s)>2047&&(h<55296||h>57343)&&(a=h);break;case 4:o=t[i+1],s=t[i+2],u=t[i+3],128==(192&o)&&128==(192&s)&&128==(192&u)&&(h=(15&f)<<18|(63&o)<<12|(63&s)<<6|63&u)>65535&&h<1114112&&(a=h)}null===a?(a=65533,p=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|1023&a),n.push(a),i+=p}return C(n)}exports.Buffer=u,exports.SlowBuffer=E,exports.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:i(),exports.kMaxLength=o(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,r,e){return h(null,t,r,e)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,\"undefined\"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,r,e){return a(null,t,r,e)},u.allocUnsafe=function(t){return p(null,t)},u.allocUnsafeSlow=function(t){return p(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,r){if(!u.isBuffer(t)||!u.isBuffer(r))throw new TypeError(\"Arguments must be Buffers\");if(t===r)return 0;for(var e=t.length,n=r.length,i=0,o=Math.min(e,n);i<o;++i)if(t[i]!==r[i]){e=t[i],n=r[i];break}return e<n?-1:n<e?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function(t,r){if(!n(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var e;if(void 0===r)for(r=0,e=0;e<t.length;++e)r+=t[e].length;var i=u.allocUnsafe(r),o=0;for(e=0;e<t.length;++e){var s=t[e];if(!u.isBuffer(s))throw new TypeError('\"list\" argument must be an Array of Buffers');s.copy(i,o),o+=s.length}return i},u.byteLength=v,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var r=0;r<t;r+=2)_(this,r,r+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var r=0;r<t;r+=4)_(this,r,r+3),_(this,r+1,r+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var r=0;r<t;r+=8)_(this,r,r+7),_(this,r+1,r+6),_(this,r+2,r+5),_(this,r+3,r+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?\"\":0===arguments.length?O(this,0,t):R.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t=\"\",r=exports.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\"hex\",0,r).match(/.{2}/g).join(\" \"),this.length>r&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},u.prototype.compare=function(t,r,e,n,i){if(!u.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===r&&(r=0),void 0===e&&(e=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),r<0||e>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&r>=e)return 0;if(n>=i)return-1;if(r>=e)return 1;if(this===t)return 0;for(var o=(i>>>=0)-(n>>>=0),s=(e>>>=0)-(r>>>=0),h=Math.min(o,s),f=this.slice(n,i),a=t.slice(r,e),p=0;p<h;++p)if(f[p]!==a[p]){o=f[p],s=a[p];break}return o<s?-1:s<o?1:0},u.prototype.includes=function(t,r,e){return-1!==this.indexOf(t,r,e)},u.prototype.indexOf=function(t,r,e){return A(this,t,r,e,!0)},u.prototype.lastIndexOf=function(t,r,e){return A(this,t,r,e,!1)},u.prototype.write=function(t,r,e,n){if(void 0===r)n=\"utf8\",e=this.length,r=0;else if(void 0===e&&\"string\"==typeof r)n=r,e=this.length,r=0;else{if(!isFinite(r))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");r|=0,isFinite(e)?(e|=0,void 0===n&&(n=\"utf8\")):(n=e,e=void 0)}var i=this.length-r;if((void 0===e||e>i)&&(e=i),t.length>0&&(e<0||r<0)||r>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");for(var o=!1;;)switch(n){case\"hex\":return b(this,t,r,e);case\"utf8\":case\"utf-8\":return T(this,t,r,e);case\"ascii\":return B(this,t,r,e);case\"latin1\":case\"binary\":return U(this,t,r,e);case\"base64\":return Y(this,t,r,e);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return P(this,t,r,e);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var D=4096;function C(t){var r=t.length;if(r<=D)return String.fromCharCode.apply(String,t);for(var e=\"\",n=0;n<r;)e+=String.fromCharCode.apply(String,t.slice(n,n+=D));return e}function L(t,r,e){var n=\"\";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(127&t[i]);return n}function M(t,r,e){var n=\"\";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(t[i]);return n}function k(t,r,e){var n=t.length;(!r||r<0)&&(r=0),(!e||e<0||e>n)&&(e=n);for(var i=\"\",o=r;o<e;++o)i+=H(t[o]);return i}function N(t,r,e){for(var n=t.slice(r,e),i=\"\",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function F(t,r,e){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+r>e)throw new RangeError(\"Trying to access beyond buffer length\")}function j(t,r,e,n,i,o){if(!u.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>i||r<o)throw new RangeError('\"value\" argument is out of bounds');if(e+n>t.length)throw new RangeError(\"Index out of range\")}function q(t,r,e,n){r<0&&(r=65535+r+1);for(var i=0,o=Math.min(t.length-e,2);i<o;++i)t[e+i]=(r&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function V(t,r,e,n){r<0&&(r=4294967295+r+1);for(var i=0,o=Math.min(t.length-e,4);i<o;++i)t[e+i]=r>>>8*(n?i:3-i)&255}function X(t,r,e,n,i,o){if(e+n>t.length)throw new RangeError(\"Index out of range\");if(e<0)throw new RangeError(\"Index out of range\")}function J(t,r,n,i,o){return o||X(t,r,n,4,3.4028234663852886e38,-3.4028234663852886e38),e.write(t,r,n,i,23,4),n+4}function Z(t,r,n,i,o){return o||X(t,r,n,8,1.7976931348623157e308,-1.7976931348623157e308),e.write(t,r,n,i,52,8),n+8}u.prototype.slice=function(t,r){var e,n=this.length;if((t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(r=void 0===r?n:~~r)<0?(r+=n)<0&&(r=0):r>n&&(r=n),r<t&&(r=t),u.TYPED_ARRAY_SUPPORT)(e=this.subarray(t,r)).__proto__=u.prototype;else{var i=r-t;e=new u(i,void 0);for(var o=0;o<i;++o)e[o]=this[o+t]}return e},u.prototype.readUIntLE=function(t,r,e){t|=0,r|=0,e||F(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return n},u.prototype.readUIntBE=function(t,r,e){t|=0,r|=0,e||F(t,r,this.length);for(var n=this[t+--r],i=1;r>0&&(i*=256);)n+=this[t+--r]*i;return n},u.prototype.readUInt8=function(t,r){return r||F(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,r){return r||F(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,r){return r||F(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,r){return r||F(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,r){return r||F(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,r,e){t|=0,r|=0,e||F(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*r)),n},u.prototype.readIntBE=function(t,r,e){t|=0,r|=0,e||F(t,r,this.length);for(var n=r,i=1,o=this[t+--n];n>0&&(i*=256);)o+=this[t+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*r)),o},u.prototype.readInt8=function(t,r){return r||F(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,r){r||F(t,2,this.length);var e=this[t]|this[t+1]<<8;return 32768&e?4294901760|e:e},u.prototype.readInt16BE=function(t,r){r||F(t,2,this.length);var e=this[t+1]|this[t]<<8;return 32768&e?4294901760|e:e},u.prototype.readInt32LE=function(t,r){return r||F(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,r){return r||F(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,r){return r||F(t,4,this.length),e.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,r){return r||F(t,4,this.length),e.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,r){return r||F(t,8,this.length),e.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,r){return r||F(t,8,this.length),e.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,r,e,n){(t=+t,r|=0,e|=0,n)||j(this,t,r,e,Math.pow(2,8*e)-1,0);var i=1,o=0;for(this[r]=255&t;++o<e&&(i*=256);)this[r+o]=t/i&255;return r+e},u.prototype.writeUIntBE=function(t,r,e,n){(t=+t,r|=0,e|=0,n)||j(this,t,r,e,Math.pow(2,8*e)-1,0);var i=e-1,o=1;for(this[r+i]=255&t;--i>=0&&(o*=256);)this[r+i]=t/o&255;return r+e},u.prototype.writeUInt8=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[r]=255&t,r+1},u.prototype.writeUInt16LE=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):q(this,t,r,!0),r+2},u.prototype.writeUInt16BE=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):q(this,t,r,!1),r+2},u.prototype.writeUInt32LE=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t):V(this,t,r,!0),r+4},u.prototype.writeUInt32BE=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):V(this,t,r,!1),r+4},u.prototype.writeIntLE=function(t,r,e,n){if(t=+t,r|=0,!n){var i=Math.pow(2,8*e-1);j(this,t,r,e,i-1,-i)}var o=0,s=1,u=0;for(this[r]=255&t;++o<e&&(s*=256);)t<0&&0===u&&0!==this[r+o-1]&&(u=1),this[r+o]=(t/s>>0)-u&255;return r+e},u.prototype.writeIntBE=function(t,r,e,n){if(t=+t,r|=0,!n){var i=Math.pow(2,8*e-1);j(this,t,r,e,i-1,-i)}var o=e-1,s=1,u=0;for(this[r+o]=255&t;--o>=0&&(s*=256);)t<0&&0===u&&0!==this[r+o+1]&&(u=1),this[r+o]=(t/s>>0)-u&255;return r+e},u.prototype.writeInt8=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[r]=255&t,r+1},u.prototype.writeInt16LE=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):q(this,t,r,!0),r+2},u.prototype.writeInt16BE=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):q(this,t,r,!1),r+2},u.prototype.writeInt32LE=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24):V(this,t,r,!0),r+4},u.prototype.writeInt32BE=function(t,r,e){return t=+t,r|=0,e||j(this,t,r,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):V(this,t,r,!1),r+4},u.prototype.writeFloatLE=function(t,r,e){return J(this,t,r,!0,e)},u.prototype.writeFloatBE=function(t,r,e){return J(this,t,r,!1,e)},u.prototype.writeDoubleLE=function(t,r,e){return Z(this,t,r,!0,e)},u.prototype.writeDoubleBE=function(t,r,e){return Z(this,t,r,!1,e)},u.prototype.copy=function(t,r,e,n){if(e||(e=0),n||0===n||(n=this.length),r>=t.length&&(r=t.length),r||(r=0),n>0&&n<e&&(n=e),n===e)return 0;if(0===t.length||0===this.length)return 0;if(r<0)throw new RangeError(\"targetStart out of bounds\");if(e<0||e>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-r<n-e&&(n=t.length-r+e);var i,o=n-e;if(this===t&&e<r&&r<n)for(i=o-1;i>=0;--i)t[i+r]=this[i+e];else if(o<1e3||!u.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)t[i+r]=this[i+e];else Uint8Array.prototype.set.call(t,this.subarray(e,e+o),r);return o},u.prototype.fill=function(t,r,e,n){if(\"string\"==typeof t){if(\"string\"==typeof r?(n=r,r=0,e=this.length):\"string\"==typeof e&&(n=e,e=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!u.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n)}else\"number\"==typeof t&&(t&=255);if(r<0||this.length<r||this.length<e)throw new RangeError(\"Out of range index\");if(e<=r)return this;var o;if(r>>>=0,e=void 0===e?this.length:e>>>0,t||(t=0),\"number\"==typeof t)for(o=r;o<e;++o)this[o]=t;else{var s=u.isBuffer(t)?t:K(new u(t,n).toString()),h=s.length;for(o=0;o<e-r;++o)this[o+r]=s[o%h]}return this};var $=/[^+\\/0-9A-Za-z-_]/g;function z(t){if((t=G(t).replace($,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}function G(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}function H(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function K(t,r){var e;r=r||1/0;for(var n=t.length,i=null,o=[],s=0;s<n;++s){if((e=t.charCodeAt(s))>55295&&e<57344){if(!i){if(e>56319){(r-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(r-=3)>-1&&o.push(239,191,189);continue}i=e;continue}if(e<56320){(r-=3)>-1&&o.push(239,191,189),i=e;continue}e=65536+(i-55296<<10|e-56320)}else i&&(r-=3)>-1&&o.push(239,191,189);if(i=null,e<128){if((r-=1)<0)break;o.push(e)}else if(e<2048){if((r-=2)<0)break;o.push(e>>6|192,63&e|128)}else if(e<65536){if((r-=3)<0)break;o.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error(\"Invalid code point\");if((r-=4)<0)break;o.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return o}function Q(t){for(var r=[],e=0;e<t.length;++e)r.push(255&t.charCodeAt(e));return r}function W(t,r){for(var e,n,i,o=[],s=0;s<t.length&&!((r-=2)<0);++s)n=(e=t.charCodeAt(s))>>8,i=e%256,o.push(i),o.push(n);return o}function I(t){return r.toByteArray(z(t))}function x(t,r,e,n){for(var i=0;i<n&&!(i+e>=r.length||i>=t.length);++i)r[i+e]=t[i];return i}function d(t){return t!=t}\n},{\"base64-js\":\"yh9p\",\"ieee754\":\"JgNJ\",\"isarray\":\"REa7\",\"buffer\":\"dskh\"}],\"aSGf\":[function(require,module,exports) {\nvar Buffer = require(\"buffer\").Buffer;\nvar global = arguments[3];\nvar t=require(\"buffer\").Buffer,e=arguments[3],r=require(\"../constants.js\").FILE_SYSTEM_NAME,n=require(\"../constants.js\").FILE_STORE_NAME,o=require(\"../constants.js\").IDB_RW,u=require(\"../constants.js\").IDB_RO;function c(t,e){this.db=t,this.mode=e}function i(t){this.name=t||r,this.db=null}c.prototype._getObjectStore=function(){if(this.objectStore)return this.objectStore;var t=this.db.transaction(n,this.mode);return this.objectStore=t.objectStore(n),this.objectStore},c.prototype.clear=function(t){try{var e=this._getObjectStore().clear();e.onsuccess=function(){t()},e.onerror=function(e){e.preventDefault(),t(e.error)}}catch(r){t(r)}},c.prototype._get=function(t,e){try{var r=this._getObjectStore().get(t);r.onsuccess=function(t){var r=t.target.result;e(null,r)},r.onerror=function(t){t.preventDefault(),e(t.error)}}catch(n){e(n)}},c.prototype.getObject=function(t,e){this._get(t,e)},c.prototype.getBuffer=function(e,r){this._get(e,function(e,n){if(e)return r(e);r(null,t.from(n))})},c.prototype._put=function(t,e,r){try{var n=this._getObjectStore().put(e,t);n.onsuccess=function(t){var e=t.target.result;r(null,e)},n.onerror=function(t){t.preventDefault(),r(t.error)}}catch(o){r(o)}},c.prototype.putObject=function(t,e,r){this._put(t,e,r)},c.prototype.putBuffer=function(t,e,r){var n=e.buffer;this._put(t,n,r)},c.prototype.delete=function(t,e){try{var r=this._getObjectStore().delete(t);r.onsuccess=function(t){var r=t.target.result;e(null,r)},r.onerror=function(t){t.preventDefault(),e(t.error)}}catch(n){e(n)}},i.isSupported=function(){return!!(e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB)},i.prototype.open=function(t){var r=this;if(r.db)return t();try{var o=(e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB).open(r.name);o.onupgradeneeded=function(t){var e=t.target.result;e.objectStoreNames.contains(n)&&e.deleteObjectStore(n),e.createObjectStore(n)},o.onsuccess=function(e){r.db=e.target.result,t()},o.onerror=function(e){e.preventDefault(),t(e.error)}}catch(u){t(u)}},i.prototype.getReadOnlyContext=function(){return new c(this.db,u)},i.prototype.getReadWriteContext=function(){return new c(this.db,o)},module.exports=i;\n},{\"../constants.js\":\"gCho\",\"buffer\":\"dskh\"}],\"u4Zs\":[function(require,module,exports) {\nvar process = require(\"process\");\nvar define;\nvar e,t=require(\"process\");!function(){var n={};void 0!==t&&t.nextTick?(n.nextTick=t.nextTick,\"undefined\"!=typeof setImmediate?n.setImmediate=function(e){setImmediate(e)}:n.setImmediate=n.nextTick):\"function\"==typeof setImmediate?(n.nextTick=function(e){setImmediate(e)},n.setImmediate=n.nextTick):(n.nextTick=function(e){setTimeout(e,0)},n.setImmediate=n.nextTick),n.eachSeries=function(e,t,n){if(n=n||function(){},!e.length)return n();var i=0;!function o(){t(e[i],function(t){t?(n(t),n=function(){}):(i+=1)>=e.length?n():o()})}()},n.forEachSeries=n.eachSeries,void 0!==e&&e.amd?e([],function(){return n}):\"undefined\"!=typeof module&&module.exports?module.exports=n:root.async=n}();\n},{\"process\":\"pBGv\"}],\"Xhog\":[function(require,module,exports) {\nvar t=require(\"../constants.js\").FILE_SYSTEM_NAME,e=require(\"../../lib/async.js\").setImmediate,o=function(){var t={};return function(e){return t.hasOwnProperty(e)||(t[e]={}),t[e]}}();function n(t,e){this.readOnly=e,this.objectStore=t}function r(e){this.name=e||t}n.prototype.clear=function(t){if(this.readOnly)e(function(){t(\"[MemoryContext] Error: write operation on read only context\")});else{var o=this.objectStore;Object.keys(o).forEach(function(t){delete o[t]}),e(t)}},n.prototype.getObject=n.prototype.getBuffer=function(t,o){var n=this;e(function(){o(null,n.objectStore[t])})},n.prototype.putObject=n.prototype.putBuffer=function(t,o,n){this.readOnly?e(function(){n(\"[MemoryContext] Error: write operation on read only context\")}):(this.objectStore[t]=o,e(n))},n.prototype.delete=function(t,o){this.readOnly?e(function(){o(\"[MemoryContext] Error: write operation on read only context\")}):(delete this.objectStore[t],e(o))},r.isSupported=function(){return!0},r.prototype.open=function(t){this.db=o(this.name),e(t)},r.prototype.getReadOnlyContext=function(){return new n(this.db,!0)},r.prototype.getReadWriteContext=function(){return new n(this.db,!1)},module.exports=r;\n},{\"../constants.js\":\"gCho\",\"../../lib/async.js\":\"u4Zs\"}],\"UCG6\":[function(require,module,exports) {\nvar e=require(\"./indexeddb.js\"),r=require(\"./memory.js\");module.exports={IndexedDB:e,Default:e,Memory:r};\n},{\"./indexeddb.js\":\"aSGf\",\"./memory.js\":\"Xhog\"}],\"Hmaa\":[function(require,module,exports) {\nvar t={};[\"3:EACCES:permission denied\",\"9:EBADF:bad file descriptor\",\"10:EBUSY:resource busy or locked\",\"18:EINVAL:invalid argument\",\"27:ENOTDIR:not a directory\",\"28:EISDIR:illegal operation on a directory\",\"34:ENOENT:no such file or directory\",\"47:EEXIST:file already exists\",\"50:EPERM:operation not permitted\",\"51:ELOOP:too many symbolic links encountered\",\"53:ENOTEMPTY:directory not empty\",\"55:EIO:i/o error\",\"1000:ENOTMOUNTED:not mounted\",\"1001:EFILESYSTEMERROR:missing super node, use 'FORMAT' flag to format filesystem.\",\"1002:ENOATTR:attribute does not exist\"].forEach(function(e){var o=+(e=e.split(\":\"))[0],r=e[1],i=e[2];function s(t,e){Error.call(this),this.name=r,this.code=r,this.errno=o,this.message=t||i,e&&(this.path=e),this.stack=new Error(this.message).stack}s.prototype=Object.create(Error.prototype),s.prototype.constructor=s,s.prototype.toString=function(){var t=this.path?\", '\"+this.path+\"'\":\"\";return this.name+\": \"+this.message+t},t[r]=t[o]=s}),module.exports=t;\n},{}],\"lsut\":[function(require,module,exports) {\n\"use strict\";var t=require(\"../constants.js\").ENVIRONMENT;module.exports=function(n){(n=n||{}).TMP=n.TMP||t.TMP,n.PATH=n.PATH||t.PATH,this.get=function(t){return n[t]},this.set=function(t,s){n[t]=s}};\n},{\"../constants.js\":\"gCho\"}],\"bQx9\":[function(require,module,exports) {\nmodule.exports=function(t,o){for(var a=[],e=0;e<t.length;e++){var n=o(t[e],e);r(n)?a.push.apply(a,n):a.push(n)}return a};var r=Array.isArray||function(r){return\"[object Array]\"===Object.prototype.toString.call(r)};\n},{}],\"6D9y\":[function(require,module,exports) {\n\"use strict\";function e(e,r,i){e instanceof RegExp&&(e=n(e,i)),r instanceof RegExp&&(r=n(r,i));var o=t(e,r,i);return o&&{start:o[0],end:o[1],pre:i.slice(0,o[0]),body:i.slice(o[0]+e.length,o[1]),post:i.slice(o[1]+r.length)}}function n(e,n){var t=n.match(e);return t?t[0]:null}function t(e,n,t){var r,i,o,f,l,s=t.indexOf(e),c=t.indexOf(n,s+1),p=s;if(s>=0&&c>0){for(r=[],o=t.length;p>=0&&!l;)p==s?(r.push(p),s=t.indexOf(e,p+1)):1==r.length?l=[r.pop(),c]:((i=r.pop())<o&&(o=i,f=c),c=t.indexOf(n,p+1)),p=s<c&&s>=0?s:c;r.length&&(l=[o,f])}return l}module.exports=e,e.range=t;\n},{}],\"dwX/\":[function(require,module,exports) {\nvar t=require(\"concat-map\"),r=require(\"balanced-match\");module.exports=h;var o=\"\\0SLASH\"+Math.random()+\"\\0\",n=\"\\0OPEN\"+Math.random()+\"\\0\",a=\"\\0CLOSE\"+Math.random()+\"\\0\",p=\"\\0COMMA\"+Math.random()+\"\\0\",s=\"\\0PERIOD\"+Math.random()+\"\\0\";function u(t){return parseInt(t,10)==t?parseInt(t,10):t.charCodeAt(0)}function l(t){return t.split(\"\\\\\\\\\").join(o).split(\"\\\\{\").join(n).split(\"\\\\}\").join(a).split(\"\\\\,\").join(p).split(\"\\\\.\").join(s)}function f(t){return t.split(o).join(\"\\\\\").split(n).join(\"{\").split(a).join(\"}\").split(p).join(\",\").split(s).join(\".\")}function e(t){if(!t)return[\"\"];var o=[],n=r(\"{\",\"}\",t);if(!n)return t.split(\",\");var a=n.pre,p=n.body,s=n.post,u=a.split(\",\");u[u.length-1]+=\"{\"+p+\"}\";var l=e(s);return s.length&&(u[u.length-1]+=l.shift(),u.push.apply(u,l)),o.push.apply(o,u),o}function h(t){return t?(\"{}\"===t.substr(0,2)&&(t=\"\\\\{\\\\}\"+t.substr(2)),M(l(t),!0).map(f)):[]}function v(t){return t}function i(t){return\"{\"+t+\"}\"}function g(t){return/^-?0\\d/.test(t)}function b(t,r){return t<=r}function j(t,r){return t>=r}function M(o,n){var p=[],s=r(\"{\",\"}\",o);if(!s||/\\$$/.test(s.pre))return[o];var l,f=/^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(s.body),h=/^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(s.body),v=f||h,m=s.body.indexOf(\",\")>=0;if(!v&&!m)return s.post.match(/,.*\\}/)?M(o=s.pre+\"{\"+s.body+a+s.post):[o];if(v)l=s.body.split(/\\.\\./);else if(1===(l=e(s.body)).length&&1===(l=M(l[0],!1).map(i)).length)return(y=s.post.length?M(s.post,!1):[\"\"]).map(function(t){return s.pre+l[0]+t});var C,O=s.pre,y=s.post.length?M(s.post,!1):[\"\"];if(v){var A=u(l[0]),$=u(l[1]),E=Math.max(l[0].length,l[1].length),I=3==l.length?Math.abs(u(l[2])):1,S=b;$<A&&(I*=-1,S=j);var d=l.some(g);C=[];for(var L=A;S(L,$);L+=I){var Z;if(h)\"\\\\\"===(Z=String.fromCharCode(L))&&(Z=\"\");else if(Z=String(L),d){var D=E-Z.length;if(D>0){var H=new Array(D+1).join(\"0\");Z=L<0?\"-\"+H+Z.slice(1):H+Z}}C.push(Z)}}else C=t(l,function(t){return M(t,!1)});for(var R=0;R<C.length;R++)for(var k=0;k<y.length;k++){var q=O+C[R]+y[k];(!n||v||q)&&p.push(q)}return p}\n},{\"concat-map\":\"bQx9\",\"balanced-match\":\"6D9y\"}],\"Nt/K\":[function(require,module,exports) {\nmodule.exports=l,l.Minimatch=d;var t={sep:\"/\"};try{t=require(\"path\")}catch(O){}var r=l.GLOBSTAR=d.GLOBSTAR={},n=require(\"brace-expansion\"),e={\"!\":{open:\"(?:(?!(?:\",close:\"))[^/]*?)\"},\"?\":{open:\"(?:\",close:\")?\"},\"+\":{open:\"(?:\",close:\")+\"},\"*\":{open:\"(?:\",close:\")*\"},\"@\":{open:\"(?:\",close:\")\"}},i=\"[^/]\",a=i+\"*?\",o=\"(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?\",h=\"(?:(?!(?:\\\\/|^)\\\\.).)*?\",c=u(\"().*{}+?[]^$\\\\!\");function u(t){return t.split(\"\").reduce(function(t,r){return t[r]=!0,t},{})}var p=/\\/+/;function f(t,r){return r=r||{},function(n,e,i){return l(n,t,r)}}function g(t,r){t=t||{},r=r||{};var n={};return Object.keys(r).forEach(function(t){n[t]=r[t]}),Object.keys(t).forEach(function(r){n[r]=t[r]}),n}function l(t,r,n){if(\"string\"!=typeof r)throw new TypeError(\"glob pattern string required\");return n||(n={}),!(!n.nocomment&&\"#\"===r.charAt(0))&&(\"\"===r.trim()?\"\"===t:new d(r,n).match(t))}function d(r,n){if(!(this instanceof d))return new d(r,n);if(\"string\"!=typeof r)throw new TypeError(\"glob pattern string required\");n||(n={}),r=r.trim(),\"/\"!==t.sep&&(r=r.split(t.sep).join(\"/\")),this.options=n,this.set=[],this.pattern=r,this.regexp=null,this.negate=!1,this.comment=!1,this.empty=!1,this.make()}function b(){if(!this._made){var t=this.pattern,r=this.options;if(r.nocomment||\"#\"!==t.charAt(0))if(t){this.parseNegate();var n=this.globSet=this.braceExpand();r.debug&&(this.debug=console.error),this.debug(this.pattern,n),n=this.globParts=n.map(function(t){return t.split(p)}),this.debug(this.pattern,n),n=n.map(function(t,r,n){return t.map(this.parse,this)},this),this.debug(this.pattern,n),n=n.filter(function(t){return-1===t.indexOf(!1)}),this.debug(this.pattern,n),this.set=n}else this.empty=!0;else this.comment=!0}}function m(){var t=this.pattern,r=!1,n=0;if(!this.options.nonegate){for(var e=0,i=t.length;e<i&&\"!\"===t.charAt(e);e++)r=!r,n++;n&&(this.pattern=t.substr(n)),this.negate=r}}function v(t,r){if(r||(r=this instanceof d?this.options:{}),void 0===(t=void 0===t?this.pattern:t))throw new TypeError(\"undefined pattern\");return r.nobrace||!t.match(/\\{.*\\}/)?[t]:n(t)}l.filter=f,l.defaults=function(t){if(!t||!Object.keys(t).length)return l;var r=l,n=function(n,e,i){return r.minimatch(n,e,g(t,i))};return n.Minimatch=function(n,e){return new r.Minimatch(n,g(t,e))},n},d.defaults=function(t){return t&&Object.keys(t).length?l.defaults(t).Minimatch:d},d.prototype.debug=function(){},d.prototype.make=b,d.prototype.parseNegate=m,l.braceExpand=function(t,r){return v(t,r)},d.prototype.braceExpand=v,d.prototype.parse=y;var s={};function y(t,n){if(t.length>65536)throw new TypeError(\"pattern is too long\");var o=this.options;if(!o.noglobstar&&\"**\"===t)return r;if(\"\"===t)return\"\";var h,u=\"\",p=!!o.nocase,f=!1,g=[],l=[],d=!1,b=-1,m=-1,v=\".\"===t.charAt(0)?\"\":o.dot?\"(?!(?:^|\\\\/)\\\\.{1,2}(?:$|\\\\/))\":\"(?!\\\\.)\",y=this;function w(){if(h){switch(h){case\"*\":u+=a,p=!0;break;case\"?\":u+=i,p=!0;break;default:u+=\"\\\\\"+h}y.debug(\"clearStateChar %j %j\",h,u),h=!1}}for(var x,j=0,k=t.length;j<k&&(x=t.charAt(j));j++)if(this.debug(\"%s\\t%s %s %j\",t,j,u,x),f&&c[x])u+=\"\\\\\"+x,f=!1;else switch(x){case\"/\":return!1;case\"\\\\\":w(),f=!0;continue;case\"?\":case\"*\":case\"+\":case\"@\":case\"!\":if(this.debug(\"%s\\t%s %s %j <-- stateChar\",t,j,u,x),d){this.debug(\"  in class\"),\"!\"===x&&j===m+1&&(x=\"^\"),u+=x;continue}y.debug(\"call clearStateChar %j\",h),w(),h=x,o.noext&&w();continue;case\"(\":if(d){u+=\"(\";continue}if(!h){u+=\"\\\\(\";continue}g.push({type:h,start:j-1,reStart:u.length,open:e[h].open,close:e[h].close}),u+=\"!\"===h?\"(?:(?!(?:\":\"(?:\",this.debug(\"plType %j %j\",h,u),h=!1;continue;case\")\":if(d||!g.length){u+=\"\\\\)\";continue}w(),p=!0;var A=g.pop();u+=A.close,\"!\"===A.type&&l.push(A),A.reEnd=u.length;continue;case\"|\":if(d||!g.length||f){u+=\"\\\\|\",f=!1;continue}w(),u+=\"|\";continue;case\"[\":if(w(),d){u+=\"\\\\\"+x;continue}d=!0,m=j,b=u.length,u+=x;continue;case\"]\":if(j===m+1||!d){u+=\"\\\\\"+x,f=!1;continue}if(d){var $=t.substring(m+1,j);try{RegExp(\"[\"+$+\"]\")}catch(O){var R=this.parse($,s);u=u.substr(0,b)+\"\\\\[\"+R[0]+\"\\\\]\",p=p||R[1],d=!1;continue}}p=!0,d=!1,u+=x;continue;default:w(),f?f=!1:!c[x]||\"^\"===x&&d||(u+=\"\\\\\"),u+=x}for(d&&($=t.substr(m+1),R=this.parse($,s),u=u.substr(0,b)+\"\\\\[\"+R[0],p=p||R[1]),A=g.pop();A;A=g.pop()){var T=u.slice(A.reStart+A.open.length);this.debug(\"setting tail\",u,A),T=T.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g,function(t,r,n){return n||(n=\"\\\\\"),r+r+n+\"|\"}),this.debug(\"tail=%j\\n   %s\",T,T,A,u);var C=\"*\"===A.type?a:\"?\"===A.type?i:\"\\\\\"+A.type;p=!0,u=u.slice(0,A.reStart)+C+\"\\\\(\"+T}w(),f&&(u+=\"\\\\\\\\\");var L=!1;switch(u.charAt(0)){case\".\":case\"[\":case\"(\":L=!0}for(var q=l.length-1;q>-1;q--){var B=l[q],M=u.slice(0,B.reStart),N=u.slice(B.reStart,B.reEnd-8),_=u.slice(B.reEnd-8,B.reEnd),G=u.slice(B.reEnd);_+=G;var S=M.split(\"(\").length-1,P=G;for(j=0;j<S;j++)P=P.replace(/\\)[+*?]?/,\"\");var z=\"\";\"\"===(G=P)&&n!==s&&(z=\"$\"),u=M+N+G+z+_}if(\"\"!==u&&p&&(u=\"(?=.)\"+u),L&&(u=v+u),n===s)return[u,p];if(!p)return E(t);var D=o.nocase?\"i\":\"\";try{var F=new RegExp(\"^\"+u+\"$\",D)}catch(O){return new RegExp(\"$.\")}return F._glob=t,F._src=u,F}function w(){if(this.regexp||!1===this.regexp)return this.regexp;var t=this.set;if(!t.length)return this.regexp=!1,this.regexp;var n=this.options,e=n.noglobstar?a:n.dot?o:h,i=n.nocase?\"i\":\"\",c=t.map(function(t){return t.map(function(t){return t===r?e:\"string\"==typeof t?j(t):t._src}).join(\"\\\\/\")}).join(\"|\");c=\"^(?:\"+c+\")$\",this.negate&&(c=\"^(?!\"+c+\").*$\");try{this.regexp=new RegExp(c,i)}catch(u){this.regexp=!1}return this.regexp}function x(r,n){if(this.debug(\"match\",r,this.pattern),this.comment)return!1;if(this.empty)return\"\"===r;if(\"/\"===r&&n)return!0;var e=this.options;\"/\"!==t.sep&&(r=r.split(t.sep).join(\"/\")),r=r.split(p),this.debug(this.pattern,\"split\",r);var i,a,o=this.set;for(this.debug(this.pattern,\"set\",o),a=r.length-1;a>=0&&!(i=r[a]);a--);for(a=0;a<o.length;a++){var h=o[a],c=r;if(e.matchBase&&1===h.length&&(c=[i]),this.matchOne(c,h,n))return!!e.flipNegate||!this.negate}return!e.flipNegate&&this.negate}function E(t){return t.replace(/\\\\(.)/g,\"$1\")}function j(t){return t.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\"\\\\$&\")}l.makeRe=function(t,r){return new d(t,r||{}).makeRe()},d.prototype.makeRe=w,l.match=function(t,r,n){var e=new d(r,n=n||{});return t=t.filter(function(t){return e.match(t)}),e.options.nonull&&!t.length&&t.push(r),t},d.prototype.match=x,d.prototype.matchOne=function(t,n,e){var i=this.options;this.debug(\"matchOne\",{this:this,file:t,pattern:n}),this.debug(\"matchOne\",t.length,n.length);for(var a=0,o=0,h=t.length,c=n.length;a<h&&o<c;a++,o++){this.debug(\"matchOne loop\");var u,p=n[o],f=t[a];if(this.debug(n,p,f),!1===p)return!1;if(p===r){this.debug(\"GLOBSTAR\",[n,p,f]);var g=a,l=o+1;if(l===c){for(this.debug(\"** at the end\");a<h;a++)if(\".\"===t[a]||\"..\"===t[a]||!i.dot&&\".\"===t[a].charAt(0))return!1;return!0}for(;g<h;){var d=t[g];if(this.debug(\"\\nglobstar while\",t,g,n,l,d),this.matchOne(t.slice(g),n.slice(l),e))return this.debug(\"globstar found match!\",g,h,d),!0;if(\".\"===d||\"..\"===d||!i.dot&&\".\"===d.charAt(0)){this.debug(\"dot detected!\",t,g,n,l);break}this.debug(\"globstar swallow a segment, and continue\"),g++}return!(!e||(this.debug(\"\\n>>> no match, partial?\",t,g,n,l),g!==h))}if(\"string\"==typeof p?(u=i.nocase?f.toLowerCase()===p.toLowerCase():f===p,this.debug(\"string match\",p,f,u)):(u=f.match(p),this.debug(\"pattern match\",p,f,u)),!u)return!1}if(a===h&&o===c)return!0;if(a===h)return e;if(o===c)return a===h-1&&\"\"===t[a];throw new Error(\"wtf?\")};\n},{\"path\":\"UUq2\",\"brace-expansion\":\"dwX/\"}],\"Kf0M\":[function(require,module,exports) {\nvar n=require(\"es6-promisify\"),i=n.promisify,e=require(\"../path.js\"),t=require(\"../errors.js\"),o=require(\"./environment.js\"),r=require(\"../../lib/async.js\"),u=require(\"minimatch\");function f(n,r){var u=this,f=new o((r=r||{}).env),s=\"/\";Object.defineProperty(this,\"fs\",{get:function(){return n},enumerable:!0}),Object.defineProperty(this,\"env\",{get:function(){return f},enumerable:!0}),this.cd=function(i,o){i=e.resolve(s,i),n.stat(i,function(n,e){n?o(new t.ENOTDIR(null,i)):\"DIRECTORY\"===e.type?(s=i,o()):o(new t.ENOTDIR(null,i))})},this.pwd=function(){return s},this.promises={},[\"cd\",\"exec\",\"touch\",\"cat\",\"ls\",\"rm\",\"tempDir\",\"mkdirp\",\"find\"].forEach(function(n){u.promises[n]=i(u[n].bind(u))})}f.prototype.exec=function(n,i,t){var o=this.fs;\"function\"==typeof i&&(t=i,i=[]),i=i||[],t=t||function(){},n=e.resolve(this.pwd(),n),o.readFile(n,\"utf8\",function(n,e){if(n)t(n);else try{new Function(\"fs\",\"args\",\"callback\",e)(o,i,t)}catch(r){t(r)}})},f.prototype.touch=function(n,i,t){var o=this.fs;\"function\"==typeof i&&(t=i,i={}),i=i||{},t=t||function(){},n=e.resolve(this.pwd(),n),o.stat(n,function(e){e?!0===i.updateOnly?t():function(n){o.writeFile(n,\"\",t)}(n):function(n){var e=Date.now(),r=i.date||e,u=i.date||e;o.utimes(n,r,u,t)}(n)})},f.prototype.cat=function(n,i){var o=this,u=o.fs,f=\"\";i=i||function(){},n?(n=\"string\"==typeof n?[n]:n,r.eachSeries(n,function(n,i){var t=e.resolve(o.pwd(),n);u.readFile(t,\"utf8\",function(n,e){n?i(n):(f+=e+\"\\n\",i())})},function(n){n?i(n):i(null,f.replace(/\\n$/,\"\"))})):i(new t.EINVAL(\"Missing files argument\"))},f.prototype.ls=function(n,i,o){var u=this,f=u.fs;\"function\"==typeof i&&(o=i,i={}),i=i||{},o=o||function(){},n?function n(t,o){var s=e.resolve(u.pwd(),t),c=[];f.readdir(s,function(t,u){t?o(t):r.eachSeries(u,function(t,o){t=e.join(s,t),f.stat(t,function(t,r){if(t)o(t);else{var u=r;i.recursive&&\"DIRECTORY\"===r.type?n(e.join(s,u.name),function(n,i){n?o(n):(u.contents=i,c.push(u),o())}):(c.push(u),o())}})},function(n){o(n,c)})})}(n,o):o(new t.EINVAL(\"Missing dir argument\"))},f.prototype.rm=function(n,i,o){var u=this,f=u.fs;\"function\"==typeof i&&(o=i,i={}),i=i||{},o=o||function(){},n?function n(o,s){o=e.resolve(u.pwd(),o),f.stat(o,function(u,c){u?s(u):\"FILE\"!==c.type?f.readdir(o,function(u,c){u?s(u):0!==c.length?i.recursive?(c=c.map(function(n){return e.join(o,n)}),r.eachSeries(c,n,function(n){n?s(n):f.rmdir(o,s)})):s(new t.ENOTEMPTY(null,o)):f.rmdir(o,s)}):f.unlink(o,s)})}(n,o):o(new t.EINVAL(\"Missing path argument\"))},f.prototype.tempDir=function(n){var i=this.fs,e=this.env.get(\"TMP\");n=n||function(){},i.mkdir(e,function(){n(null,e)})},f.prototype.mkdirp=function(n,i){var o=this.fs;i=i||function(){},n?\"/\"!==n?function n(i,r){o.stat(i,function(u,f){if(f){if(f.isDirectory())return void r();if(f.isFile())return void r(new t.ENOTDIR(null,i))}else{if(u&&\"ENOENT\"!==u.code)return void r(u);var s=e.dirname(i);\"/\"===s?o.mkdir(i,function(n){n&&\"EEXIST\"!==n.code?r(n):r()}):n(s,function(n){if(n)return r(n);o.mkdir(i,function(n){n&&\"EEXIST\"!==n.code?r(n):r()})})}})}(n,i):i():i(new t.EINVAL(\"Missing path argument\"))},f.prototype.find=function(n,i,o){var f=this,s=f.fs;\"function\"==typeof i&&(o=i,i={}),o=o||function(){};var c=(i=i||{}).exec||function(n,i){i()},p=[];function a(n,t){var o=e.removeTrailing(n);!i.regex||i.regex.test(o)?i.name&&!u(e.basename(o),i.name)||i.path&&!u(e.dirname(o),i.path)?t():function(n,i){c(n,function(e){e?i(e):(p.push(n),i())})}(n,t):t()}function d(n,i){n=e.resolve(f.pwd(),n),s.readdir(n,function(t,o){t?\"ENOTDIR\"===t.code?a(n,i):i(t):a(e.addTrailing(n),function(t){t?i(t):(o=o.map(function(i){return e.join(n,i)}),r.eachSeries(o,d,function(n){i(n,p)}))})})}n?s.stat(n,function(i,e){i?o(i):e.isDirectory()?d(n,o):o(new t.ENOTDIR(null,n))}):o(new t.EINVAL(\"Missing path argument\"))},module.exports=f;\n},{\"es6-promisify\":\"0c0E\",\"../path.js\":\"8thZ\",\"../errors.js\":\"Hmaa\",\"./environment.js\":\"lsut\",\"../../lib/async.js\":\"u4Zs\",\"minimatch\":\"Nt/K\"}],\"J4Qg\":[function(require,module,exports) {\nfunction t(t,r){for(var o=r.length-1;o>=0;o--)r[o]===t&&r.splice(o,1);return r}var r=function(){};r.createInterface=function(r){var o={on:function(t,o){void 0===this[r]&&(this[r]={}),this[r].hasOwnProperty(t)||(this[r][t]=[]),this[r][t].push(o)},off:function(o,e){void 0!==this[r]&&this[r].hasOwnProperty(o)&&t(e,this[r][o])},trigger:function(t){if(void 0!==this[r]&&this[r].hasOwnProperty(t))for(var o=Array.prototype.slice.call(arguments,1),e=0;e<this[r][t].length;e++)this[r][t][e].apply(this[r][t][e],o)},removeAllListeners:function(t){if(void 0!==this[r]){var o=this;o[r][t].forEach(function(r){o.off(t,r)})}}};return o};var o=r.createInterface(\"_handlers\");r.prototype._on=o.on,r.prototype._off=o.off,r.prototype._trigger=o.trigger;var e=r.createInterface(\"handlers\");r.prototype.on=function(){e.on.apply(this,arguments),Array.prototype.unshift.call(arguments,\"on\"),this._trigger.apply(this,arguments)},r.prototype.off=e.off,r.prototype.trigger=e.trigger,r.prototype.removeAllListeners=e.removeAllListeners,module.exports=r;\n},{}],\"zFPO\":[function(require,module,exports) {\nfunction x(x){return x.replace(/[xy]/g,function(x){var n=16*Math.random()|0;return(\"x\"===x?n:3&n|8).toString(16)})}function n(){return x(\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\").toUpperCase()}function r(n){return x(\"x\".repeat(n=n||6))}function t(){}module.exports={guid:n,nop:t,randomChars:r};\n},{}],\"u7Jv\":[function(require,module,exports) {\nvar global = arguments[3];\nvar t=arguments[3];function e(t){return(e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}var n=require(\"./eventemitter.js\"),o=require(\"../src/shared.js\").guid;function r(t,e){var n=0;return function(){var o=Date.now();o-n>t&&(n=o,e.apply(this,arguments))}}function i(t,n){if(void 0!==t&&t||(t={}),\"object\"===e(n))for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o]);return t}var a=function(t){return void 0===t||void 0===t.localStorage?{getItem:function(){},setItem:function(){},removeItem:function(){}}:t.localStorage}(t);function s(){var e=this,n=Date.now();this.origin=o(),this.lastMessage=n,this.receivedIDs={},this.previousValues={};var r=function(){e._onStorageEvent.apply(e,arguments)};\"undefined\"!=typeof document&&(document.attachEvent?document.attachEvent(\"onstorage\",r):t.addEventListener(\"storage\",r,!1))}s.prototype._transaction=function(t){var e=1e3,n=20,o=this,r=!1,i=!1,s=null;function c(){if(!r){var u=Date.now(),f=0|a.getItem(p);if(f&&u-f<e)return i||(o._on(\"storage\",c),i=!0),void(s=setTimeout(c,n));r=!0,a.setItem(p,u),t(),function(){i&&o._off(\"storage\",c);s&&clearTimeout(s);a.removeItem(p)}()}}c()},s.prototype._cleanup_emit=r(100,function(){this._transaction(function(){var t,e=Date.now()-f,n=0;try{t=JSON.parse(a.getItem(c)||\"[]\")}catch(r){t=[]}for(var o=t.length-1;o>=0;o--)t[o].timestamp<e&&(t.splice(o,1),n++);n>0&&a.setItem(c,JSON.stringify(t))})}),s.prototype._cleanup_once=r(100,function(){var t=this;t._transaction(function(){Date.now();var e,n,o=0;try{n=JSON.parse(a.getItem(u)||\"{}\")}catch(r){n={}}for(e in n)t._once_expired(e,n)&&(delete n[e],o++);o>0&&a.setItem(u,JSON.stringify(n))})}),s.prototype._once_expired=function(t,n){if(!n)return!0;if(!n.hasOwnProperty(t))return!0;if(\"object\"!==e(n[t]))return!0;var o=n[t].ttl||m,r=Date.now();return n[t].timestamp<r-o},s.prototype._localStorageChanged=function(t,e){if(t&&t.key)return t.key===e;var n=a.getItem(e);return n!==this.previousValues[e]&&(this.previousValues[e]=n,!0)},s.prototype._onStorageEvent=function(e){e=e||t.event;var n=this;this._localStorageChanged(e,c)&&this._transaction(function(){var t,e=Date.now(),o=a.getItem(c);try{t=JSON.parse(o||\"[]\")}catch(i){t=[]}for(var r=0;r<t.length;r++)if(t[r].origin!==n.origin&&!(t[r].timestamp<n.lastMessage)){if(t[r].id){if(n.receivedIDs.hasOwnProperty(t[r].id))continue;n.receivedIDs[t[r].id]=!0}n.trigger(t[r].name,t[r].payload)}n.lastMessage=e}),this._trigger(\"storage\",e)},s.prototype._emit=function(t,e,n){if((n=\"string\"==typeof n||\"number\"==typeof n?String(n):null)&&n.length){if(this.receivedIDs.hasOwnProperty(n))return;this.receivedIDs[n]=!0}var o={id:n,name:t,origin:this.origin,timestamp:Date.now(),payload:e},r=this;this._transaction(function(){var n=a.getItem(c)||\"[]\",i=\"[]\"===n?\"\":\",\";n=[n.substring(0,n.length-1),i,JSON.stringify(o),\"]\"].join(\"\"),a.setItem(c,n),r.trigger(t,e),setTimeout(function(){r._cleanup_emit()},50)})},s.prototype.emit=function(t,e){this._emit.apply(this,arguments),this._trigger(\"emit\",t,e)},s.prototype.once=function(t,e,n){if(s.supported){var o=this;this._transaction(function(){var r;try{r=JSON.parse(a.getItem(u)||\"{}\")}catch(i){r={}}o._once_expired(t,r)&&(r[t]={},r[t].timestamp=Date.now(),\"number\"==typeof n&&(r[t].ttl=1e3*n),a.setItem(u,JSON.stringify(r)),e(),setTimeout(function(){o._cleanup_once()},50))})}},i(s.prototype,n.prototype),s.supported=void 0!==a;var c=\"intercom\",u=\"intercom_once\",p=\"intercom_lock\",f=5e4,m=36e5;s.destroy=function(){a.removeItem(p),a.removeItem(c),a.removeItem(u)},s.getInstance=function(){var t;return function(){return t||(t=new s),t}}(),module.exports=s;\n},{\"./eventemitter.js\":\"J4Qg\",\"../src/shared.js\":\"zFPO\"}],\"p3D+\":[function(require,module,exports) {\nvar e=require(\"../lib/eventemitter.js\"),t=require(\"./path.js\"),n=require(\"../lib/intercom.js\");function r(){e.call(this);var r,i,o=this,s=!1;function c(e){(i===e||s&&0===e.indexOf(r))&&o.trigger(\"change\",\"change\",e)}o.start=function(e,o,a){if(!i){if(t.isNull(e))throw new Error(\"Path must be a string without null bytes.\");i=t.normalize(e),(s=!0===a)&&(r=\"/\"===i?\"/\":i+\"/\"),n.getInstance().on(\"change\",c)}},o.close=function(){n.getInstance().off(\"change\",c),o.removeAllListeners(\"change\")}}r.prototype=new e,r.prototype.constructor=r,module.exports=r;\n},{\"../lib/eventemitter.js\":\"J4Qg\",\"./path.js\":\"8thZ\",\"../lib/intercom.js\":\"u7Jv\"}],\"RlAD\":[function(require,module,exports) {\nvar t=require(\"./constants.js\").NODE_TYPE_FILE;module.exports=function(s,e){this.id=s,this.type=e||t};\n},{\"./constants.js\":\"gCho\"}],\"U1jA\":[function(require,module,exports) {\nvar r=require(\"./constants\"),e=r.FIRST_DESCRIPTOR,n={},t=function(){for(var r=e;o(r);)r++;return r},o=function(r){return n[r]},i=function(r){var e=t();return n[e]=r,e},u=function(r){return delete n[r]};module.exports={allocDescriptor:i,releaseDescriptor:u,getOpenFileDescription:o};\n},{\"./constants\":\"gCho\"}],\"epsH\":[function(require,module,exports) {\nfunction t(t,i){if(!(t instanceof i))throw new TypeError(\"Cannot call a class as a function\")}function i(t,i){for(var s=0;s<i.length;s++){var e=i[s];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}function s(t,s,e){return s&&i(t.prototype,s),e&&i(t,e),t}var e=require(\"./constants\"),n=e.NODE_TYPE_FILE,r=e.NODE_TYPE_DIRECTORY,a=e.NODE_TYPE_SYMBOLIC_LINK,o=e.DEFAULT_FILE_PERMISSIONS,u=e.DEFAULT_DIR_PERMISSIONS,h=require(\"./constants\").fsConstants,c=h.S_IFREG,f=h.S_IFDIR,m=h.S_IFLNK;function d(t,i,s){if(t[i])return s();t.guid(function(e,n){if(e)return s(e);t[i]=n,s()})}function l(t,i){switch(t){case r:return(i||u)|f;case a:return(i||o)|m;case n:default:return(i||o)|c}}var p=function(){function i(s){t(this,i);var e=Date.now();this.id=s.id,this.data=s.data,this.size=s.size||0,this.atime=s.atime||e,this.ctime=s.ctime||e,this.mtime=s.mtime||e,this.flags=s.flags||[],this.xattrs=s.xattrs||{},this.nlinks=s.nlinks||0,\"string\"==typeof s.type?this.type=s.type:\"string\"==typeof s.mode?this.type=s.mode:this.type=n,this.permissions=s.permissions||l(this.type),this.uid=s.uid||0,this.gid=s.gid||0}return s(i,[{key:\"toJSON\",value:function(){return{id:this.id,data:this.data,size:this.size,atime:this.atime,ctime:this.ctime,mtime:this.ctime,flags:this.flags,xattrs:this.xattrs,nlinks:this.nlinks,mode:this.type,permissions:this.permissions,uid:this.uid,gid:this.gid}}},{key:\"mode\",get:function(){return l(this.type,this.permissions)},set:function(t){this.permissions=t}}]),i}();module.exports.create=function(t,i){d(t,\"id\",function(s){if(s)return i(s);d(t,\"data\",function(s){if(s)return i(s);i(null,new p(t))})})};\n},{\"./constants\":\"gCho\"}],\"E+68\":[function(require,module,exports) {\nvar e=require(\"./errors.js\"),t=require(\"./node\");function i(e,t,i,r){this.path=e,this.id=t,this.flags=i,this.position=r}i.prototype.getNode=function(i,r){var o=this.id,n=this.path;i.getObject(o,function(i,o){return i?r(i):o?void t.create(o,r):r(new e.EBADF(\"file descriptor refers to unknown node\",n))})},module.exports=i;\n},{\"./errors.js\":\"Hmaa\",\"./node\":\"epsH\"}],\"3YM/\":[function(require,module,exports) {\nvar t=require(\"./constants.js\");function e(e){var i=Date.now();this.id=t.SUPER_NODE_ID,this.type=t.NODE_TYPE_META,this.atime=e.atime||i,this.ctime=e.ctime||i,this.mtime=e.mtime||i,this.rnode=e.rnode}e.create=function(t,i){t.guid(function(n,o){n?i(n):(t.rnode=t.rnode||o,i(null,new e(t)))})},module.exports=e;\n},{\"./constants.js\":\"gCho\"}],\"OfGU\":[function(require,module,exports) {\n\"use strict\";var t=require(\"./constants.js\"),i=require(\"./path.js\");function e(t){return new Date(Number(t))}function s(t,s,o){this.dev=o,this.node=s.id,this.type=s.type,this.size=s.size,this.nlinks=s.nlinks,this.atime=e(s.atime),this.mtime=e(s.mtime),this.ctime=e(s.ctime),this.atimeMs=s.atime,this.mtimeMs=s.mtime,this.ctimeMs=s.ctime,this.version=s.version,this.mode=s.mode,this.uid=s.uid,this.gid=s.gid,this.name=i.basename(t)}s.prototype.isFile=function(){return this.type===t.NODE_TYPE_FILE},s.prototype.isDirectory=function(){return this.type===t.NODE_TYPE_DIRECTORY},s.prototype.isSymbolicLink=function(){return this.type===t.NODE_TYPE_SYMBOLIC_LINK},s.prototype.isSocket=s.prototype.isFIFO=s.prototype.isCharacterDevice=s.prototype.isBlockDevice=function(){return!1},module.exports=s;\n},{\"./constants.js\":\"gCho\",\"./path.js\":\"8thZ\"}],\"HvxC\":[function(require,module,exports) {\nvar Buffer = require(\"buffer\").Buffer;\nvar n=require(\"buffer\").Buffer;function t(n){return(t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&\"function\"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?\"symbol\":typeof n})(n)}var e=require(\"../path.js\"),i=e.normalize,u=e.dirname,o=e.basename,f=e.isAbsolute,s=require(\"../shared.js\"),r=require(\"../constants.js\"),a=r.NODE_TYPE_FILE,c=r.NODE_TYPE_DIRECTORY,p=r.NODE_TYPE_SYMBOLIC_LINK,d=r.NODE_TYPE_META,m=r.FULL_READ_WRITE_EXEC_PERMISSIONS,E=r.ROOT_DIRECTORY_NAME,w=r.SUPER_NODE_ID,O=r.SYMLOOP_MAX,l=r.O_READ,g=r.O_WRITE,v=r.O_CREATE,y=r.O_EXCLUSIVE,N=r.O_APPEND,A=r.O_FLAGS,D=r.XATTR_CREATE,I=r.XATTR_REPLACE,j=r.FS_NOMTIME,T=r.FS_NOCTIME,h=require(\"../errors.js\"),b=require(\"../directory-entry.js\"),L=require(\"../open-files.js\"),R=require(\"../open-file-description.js\"),F=require(\"../super-node.js\"),V=require(\"../node.js\"),B=require(\"../stats.js\");function P(n,t,e,i,u){var o=n.flags;o.includes(T)&&delete i.ctime,o.includes(j)&&delete i.mtime;var f=!1;function s(e){n.changes.push({event:\"change\",path:t}),u(e)}i.ctime&&(e.ctime=i.ctime,e.atime=i.ctime,f=!0),i.atime&&(e.atime=i.atime,f=!0),i.mtime&&(e.mtime=i.mtime,f=!0),f?n.putObject(e.id,e,s):s()}function S(n,t,e,f){if(e!==c&&e!==a)return f(new h.EINVAL(\"type must be a directory or file\",t));t=i(t);var s,r,p,d=o(t),m=u(t);function E(e,i){!e&&i?f(new h.EEXIST(\"path name already exists\",t)):!e||e instanceof h.ENOENT?n.getObject(s.data,w):f(e)}function w(t,i){t?f(t):(r=i,V.create({guid:n.guid,type:e},function(t,e){t?f(t):((p=e).nlinks+=1,n.putObject(p.id,p,l))}))}function O(t){if(t)f(t);else{var e=Date.now();P(n,m,p,{mtime:e,ctime:e},f)}}function l(t){t?f(t):(r[d]=new b(p.id,e),n.putObject(s.data,r,O))}_(n,m,function(e,i){e?f(e):i.type!==c?f(new h.ENOTDIR(\"a component of the path prefix is not a directory\",t)):(s=i,_(n,t,E))})}function _(n,t,e){if(!(t=i(t)))return e(new h.ENOENT(\"path is an empty string\"));var f=o(t),s=u(t),r=0;function a(t,i){if(t)return e(t);var u=new F(i);u&&u.type===d&&u.rnode?n.getObject(u.rnode,m):e(new h.EFILESYSTEMERROR)}function m(n,t){n?e(n):t?V.create(t,e):e(new h.ENOENT)}function l(i,u){i?e(i):u.type===c&&u.data?n.getObject(u.data,g):e(new h.ENOTDIR(\"a component of the path prefix is not a directory\",t))}function g(i,u){if(i)e(i);else if(u.hasOwnProperty(f)){var o=u[f].id;n.getObject(o,v)}else e(new h.ENOENT(null,t))}function v(n,t){if(n)return e(n);V.create(t,y)}function y(c,d){var m;c?e(c):d.type===p?++r>O?e(new h.ELOOP(null,t)):(m=d.data,m=i(m),s=u(m),f=o(m),E===f?n.getObject(w,a):_(n,s,l)):e(null,d)}E===f?n.getObject(w,a):_(n,s,l)}function x(n,t,e,i,u,o,f){var s=e.xattrs;o===D&&s.hasOwnProperty(i)?f(new h.EEXIST(\"attribute already exists\",t)):o!==I||s.hasOwnProperty(i)?(s[i]=u,n.putObject(e.id,e,function(i){i?f(i):P(n,t,e,{ctime:Date.now()},f)})):f(new h.ENOATTR(null,t))}function C(n,t){var e,i,u;function o(u){u?t(u):V.create({guid:n.guid,id:e.rnode,type:c},function(e,u){e?t(e):((i=u).nlinks+=1,n.putObject(i.id,i,f))})}function f(e){e?t(e):(u={},n.putObject(i.data,u,t))}n.getObject(w,function(i,u){!i&&u?t():!i||i instanceof h.ENOENT?F.create({guid:n.guid},function(i,u){i?t(i):(e=u,n.putObject(e.id,e,o))}):t(i)})}function X(n,t,e){t=i(t);var f,s,r,a,p=o(t),d=u(t);function m(t,i){t?e(t):(r=i,n.getObject(r.data,E))}function E(t,i){t?e(t):(a=i,V.create({guid:n.guid,type:c},function(t,i){t?e(t):((f=i).nlinks+=1,n.putObject(f.id,f,w))}))}function w(t){t?e(t):(s={},n.putObject(f.data,s,l))}function O(t){if(t)e(t);else{var i=Date.now();P(n,d,r,{mtime:i,ctime:i},e)}}function l(t){t?e(t):(a[p]=new b(f.id,c),n.putObject(r.data,a,O))}_(n,t,function(i,u){!i&&u?e(new h.EEXIST(null,t)):!i||i instanceof h.ENOENT?_(n,d,m):e(i)})}function q(n,t,e,u){var o=r.fsConstants,f=o.F_OK,s=o.R_OK,a=o.W_OK,c=o.X_OK,p=o.S_IXUSR,d=o.S_IXGRP,m=o.S_IXOTH;_(n,t=i(t),function(n,i){if(n)return u(n);if(e===f)return u(null);var o=Pn(i.mode,u);return o?e&(s|a)?u(null):e&c&&o&(p|d|m)?u(null):void u(new h.EACCES(\"permission denied\",t)):void 0})}function M(n,t,e){t=i(t);var f,s,r,a,p=o(t),d=u(t);function m(i,u){i?e(i):E===p?e(new h.EBUSY(null,t)):u.hasOwnProperty(p)?(f=(a=u)[p].id,n.getObject(f,w)):e(new h.ENOENT(null,t))}function w(i,u){i?e(i):u.type!==c?e(new h.ENOTDIR(null,t)):(f=u,n.getObject(f.data,O))}function O(i,u){i?e(i):(s=u,Object.keys(s).length>0?e(new h.ENOTEMPTY(null,t)):(delete a[p],n.putObject(r.data,a,l)))}function l(t){if(t)e(t);else{var i=Date.now();P(n,d,r,{mtime:i,ctime:i},g)}}function g(t){t?e(t):n.delete(f.id,v)}function v(t){t?e(t):n.delete(f.data,e)}_(n,d,function(t,i){t?e(t):(r=i,n.getObject(r.data,m))})}function z(t,e,f,s,r){\"function\"==typeof s&&(r=s,s=null),e=i(e);var d,m,w,l,N,A=o(e),D=u(e),I=0;function j(n,i){n?r(n):i.type!==c?r(new h.ENOENT(null,e)):(d=i,t.getObject(d.data,T))}function T(n,i){n?r(n):(m=i).hasOwnProperty(A)?f.includes(y)?r(new h.ENOENT(\"O_CREATE and O_EXCLUSIVE are set, and the named file exists\",e)):(w=m[A]).type===c&&f.includes(g)?r(new h.EISDIR(\"the named file is a directory and O_WRITE is set\",e)):t.getObject(w.id,L):f.includes(v)?V.create({guid:t.guid,type:a},function(n,e){n?r(n):((l=e).nlinks+=1,s&&(l.mode=s),t.putObject(l.id,l,F))}):r(new h.ENOENT(\"O_CREATE is not set and the named file does not exist\",e))}function L(n,s){if(n)r(n);else{var a=s;a.type===p?++I>O?r(new h.ELOOP(null,e)):function(n){n=i(n),D=u(n),A=o(n),E===A&&(f.includes(g)?r(new h.EISDIR(\"the named file is a directory and O_WRITE is set\",e)):_(t,e,R));_(t,D,j)}(a.data):R(void 0,a)}}function R(n,t){n?r(n):r(null,l=t)}function F(e){e?r(e):(N=n.alloc(0),t.putBuffer(l.data,N,S))}function B(n){if(n)r(n);else{var e=Date.now();P(t,D,d,{mtime:e,ctime:e},x)}}function S(n){n?r(n):(m[A]=new b(l.id,a),t.putObject(d.data,m,B))}function x(n){n?r(n):r(null,l)}E===A?f.includes(g)?r(new h.EISDIR(\"the named file is a directory and O_WRITE is set\",e)):_(t,e,R):_(t,D,j)}function Y(t,e,i,u,o,f){var s;function r(n){n?f(n):f(null,o)}function a(n){if(n)f(n);else{var i=Date.now();P(t,e.path,s,{mtime:i,ctime:i},r)}}function c(n){n?f(n):t.putObject(s.id,s,a)}t.getObject(e.id,function(r,a){if(r)f(r);else{s=a;var p=n.alloc(o);i.copy(p,0,u,u+o),e.position=o,s.size=o,s.version+=1,t.putBuffer(s.data,p,c)}})}function K(t,e,i,u,o,f,s){var r,a;function c(n){n?s(n):s(null,o)}function p(n){if(n)s(n);else{var i=Date.now();P(t,e.path,r,{mtime:i,ctime:i},c)}}function d(n){n?s(n):t.putObject(r.id,r,p)}function m(c,p){if(c)s(c);else{if(!(a=p))return s(new h.EIO(\"Expected Buffer\"));var m=null!=f?f:e.position,E=Math.max(a.length,m+o),w=n.alloc(E);a&&a.copy(w),i.copy(w,m,u,u+o),void 0===f&&(e.position+=o),r.size=E,r.version+=1,t.putBuffer(r.data,w,d)}}t.getObject(e.id,function(n,e){n?s(n):(r=e,t.getBuffer(r.data,m))})}function U(n,t,e,i,u,o,f){var s,r;function a(n,s){if(n)f(n);else{if(!(r=s))return f(new h.EIO(\"Expected Buffer\"));var a=null!=o?o:t.position;u=a+u>e.length?u-a:u,r.copy(e,i,a,a+u),void 0===o&&(t.position+=u),f(null,u)}}n.getObject(t.id,function(e,i){e?f(e):i.type===c?f(new h.EISDIR(\"the named file is a directory\",t.path)):(s=i,n.getBuffer(s.data,a))})}function G(n,t,e){_(n,t=i(t),e)}function W(n,t,e){t.getNode(n,e)}function H(n,t,e){t=i(t);var f,s,r=o(t),a=u(t);function c(n,t){if(n)return e(n);V.create(t,e)}function p(i,u){i?e(i):(s=u).hasOwnProperty(r)?n.getObject(s[r].id,c):e(new h.ENOENT(\"a component of the path does not name an existing file\",t))}E===r?_(n,t,e):_(n,a,function(t,i){t?e(t):(f=i,n.getObject(f.data,p))})}function $(n,t,e,f){t=i(t);var s=o(t),r=u(t);e=i(e);var a,p,d,m,E,w,O=o(e),l=u(e),g=Date.now();function v(t){t?f(t):P(n,e,w,{ctime:g},f)}function y(t,e){t?f(t):((w=e).nlinks+=1,n.putObject(w.id,w,v))}function N(t){t?f(t):n.getObject(E,y)}function A(t,e){t?f(t):(m=e).hasOwnProperty(O)?f(new h.EEXIST(\"newpath resolves to an existing file\",O)):(m[O]=p[s],E=m[O].id,n.putObject(d.data,m,N))}function D(t,e){t?f(t):(d=e,n.getObject(d.data,A))}function I(t,e){t?f(t):(p=e).hasOwnProperty(s)?p[s].type===c?f(new h.EPERM(\"oldpath refers to a directory\")):_(n,l,D):f(new h.ENOENT(\"a component of either path prefix does not exist\",s))}_(n,r,function(t,e){t?f(t):(a=e,n.getObject(a.data,I))})}function J(n,t,e){t=i(t);var f,s,r,a=o(t),p=u(t);function d(t){t?e(t):(delete s[a],n.putObject(f.data,s,function(t){if(t)e(t);else{var i=Date.now();P(n,p,f,{mtime:i,ctime:i},e)}}))}function m(t){t?e(t):n.delete(r.data,d)}function E(i,u){i?e(i):u.type===c?e(new h.EPERM(\"unlink not permitted on directories\",a)):function(i,u){i?e(i):((r=u).nlinks-=1,r.nlinks<1?n.delete(r.id,m):n.putObject(r.id,r,function(i){i?e(i):P(n,t,r,{ctime:Date.now()},d)}))}(null,u)}function w(t,i){t?e(t):(s=i).hasOwnProperty(a)?n.getObject(s[a].id,E):e(new h.ENOENT(\"a component of the path does not name an existing file\",a))}_(n,p,function(t,i){t?e(t):(f=i,n.getObject(f.data,w))})}function Q(n,t,e){var u,o;function f(n,t){if(n)e(n);else{o=t;var i=Object.keys(o);e(null,i)}}t=i(t),_(n,t,function(i,o){i?e(i):o.type!==c?e(new h.ENOTDIR(null,t)):(u=o,n.getObject(u.data,f))})}function Z(n,t,s,r){s=i(s);var a,c,d,m=o(s),w=u(s);function O(i,u){i?r(i):(c=u).hasOwnProperty(m)?r(new h.EEXIST(null,m)):V.create({guid:n.guid,type:p},function(i,u){i?r(i):((d=u).nlinks+=1,f(t)||(d.symlink_relpath=t,t=e.resolve(w,t)),d.size=t.length,d.data=t,n.putObject(d.id,d,g))})}function l(t){if(t)r(t);else{var e=Date.now();P(n,w,a,{mtime:e,ctime:e},r)}}function g(t){t?r(t):(c[m]=new b(d.id,p),n.putObject(a.data,c,l))}E===m?r(new h.EEXIST(null,m)):_(n,w,function(t,e){t?r(t):(a=e,n.getObject(a.data,O))})}function k(n,t,e){t=i(t);var f,s,r=o(t),a=u(t);function c(t,i){t?e(t):(s=i).hasOwnProperty(r)?n.getObject(s[r].id,d):e(new h.ENOENT(\"a component of the path does not name an existing file\",r))}function d(n,i){if(n)e(n);else if(i.type!==p)e(new h.EINVAL(\"path not a symbolic link\",t));else{var u=i.symlink_relpath?i.symlink_relpath:i.data;e(null,u)}}_(n,a,function(t,i){t?e(t):(f=i,n.getObject(f.data,c))})}function nn(t,e,u,o){var f;function s(e,i){if(e)o(e);else{if(!i)return o(new h.EIO(\"Expected Buffer\"));var s=n.alloc(u);i&&i.copy(s),t.putBuffer(f.data,s,a)}}function r(n){if(n)o(n);else{var i=Date.now();P(t,e,f,{mtime:i,ctime:i},o)}}function a(n){n?o(n):(f.size=u,f.version+=1,t.putObject(f.id,f,r))}e=i(e),u<0?o(new h.EINVAL(\"length cannot be negative\")):_(t,e,function(n,i){n?o(n):i.type===c?o(new h.EISDIR(null,e)):(f=i,t.getBuffer(f.data,s))})}function tn(t,e,i,u){var o;function f(e,f){if(e)u(e);else{var s;if(!f)return u(new h.EIO(\"Expected Buffer\"));s=f?f.slice(0,i):n.alloc(i),t.putBuffer(o.data,s,r)}}function s(n){if(n)u(n);else{var i=Date.now();P(t,e.path,o,{mtime:i,ctime:i},u)}}function r(n){n?u(n):(o.size=i,o.version+=1,t.putObject(o.id,o,s))}i<0?u(new h.EINVAL(\"length cannot be negative\")):e.getNode(t,function(n,e){n?u(n):e.type===c?u(new h.EISDIR):(o=e,t.getBuffer(o.data,f))})}function en(n,t,e,u,o){t=i(t),\"number\"!=typeof e||\"number\"!=typeof u?o(new h.EINVAL(\"atime and mtime must be number\",t)):e<0||u<0?o(new h.EINVAL(\"atime and mtime must be positive integers\",t)):_(n,t,function(i,f){i?o(i):P(n,t,f,{atime:e,ctime:u,mtime:u},o)})}function un(n,t,e,i,u){\"number\"!=typeof e||\"number\"!=typeof i?u(new h.EINVAL(\"atime and mtime must be a number\")):e<0||i<0?u(new h.EINVAL(\"atime and mtime must be positive integers\")):t.getNode(n,function(o,f){o?u(o):P(n,t.path,f,{atime:e,ctime:i,mtime:i},u)})}function on(n,t,e,u,o,f){t=i(t),\"string\"!=typeof e?f(new h.EINVAL(\"attribute name must be a string\",t)):e?null!==o&&o!==D&&o!==I?f(new h.EINVAL(\"invalid flag, must be null, XATTR_CREATE or XATTR_REPLACE\",t)):_(n,t,function(i,s){if(i)return f(i);x(n,t,s,e,u,o,f)}):f(new h.EINVAL(\"attribute name cannot be an empty string\",t))}function fn(n,t,e,i,u,o){\"string\"!=typeof e?o(new h.EINVAL(\"attribute name must be a string\")):e?null!==u&&u!==D&&u!==I?o(new h.EINVAL(\"invalid flag, must be null, XATTR_CREATE or XATTR_REPLACE\")):t.getNode(n,function(f,s){if(f)return o(f);x(n,t.path,s,e,i,u,o)}):o(new h.EINVAL(\"attribute name cannot be an empty string\"))}function sn(n,t,e,u){t=i(t),\"string\"!=typeof e?u(new h.EINVAL(\"attribute name must be a string\",t)):e?_(n,t,function(n,i){if(n)return u(n);var o=i.xattrs;o.hasOwnProperty(e)?u(null,o[e]):u(new h.ENOATTR(null,t))}):u(new h.EINVAL(\"attribute name cannot be an empty string\",t))}function rn(n,t,e,i){\"string\"!=typeof e?i(new h.EINVAL):e?t.getNode(n,function(n,t){if(n)return i(n);var u=t.xattrs;u.hasOwnProperty(e)?i(null,u[e]):i(new h.ENOATTR)}):i(new h.EINVAL(\"attribute name cannot be an empty string\"))}function an(n,t,e,u){t=i(t),\"string\"!=typeof e?u(new h.EINVAL(\"attribute name must be a string\",t)):e?_(n,t,function(i,o){if(i)return u(i);var f=o.xattrs;f.hasOwnProperty(e)?(delete f[e],n.putObject(o.id,o,function(e){e?u(e):P(n,t,o,{ctime:Date.now()},u)})):u(new h.ENOATTR(null,t))}):u(new h.EINVAL(\"attribute name cannot be an empty string\",t))}function cn(n,t,e,i){\"string\"!=typeof e?i(new h.EINVAL(\"attribute name must be a string\")):e?t.getNode(n,function(u,o){if(u)return i(u);var f=o.xattrs;f.hasOwnProperty(e)?(delete f[e],n.putObject(o.id,o,function(e){e?i(e):P(n,t.path,o,{ctime:Date.now()},i)})):i(new h.ENOATTR)}):i(new h.EINVAL(\"attribute name cannot be an empty string\"))}function pn(n){return A.hasOwnProperty(n)?A[n]:null}function dn(n,t,e){return n?\"function\"==typeof n?n={encoding:t,flag:e}:\"string\"==typeof n&&(n={encoding:n,flag:e}):n={encoding:t,flag:e},n}function mn(n,t,e,i,u){if(arguments.length<5?(u=arguments[arguments.length-1],i=420):i=Pn(i,m,u),!(e=pn(e)))return u(new h.EINVAL(\"flags is not valid\"),t);z(n,t,e,i,function(n,i){if(n)u(n);else{var o;o=e.includes(N)?i.size:0;var f=new R(t,i.id,e,o),s=L.allocDescriptor(f);u(null,s)}})}function En(n,t,e){L.getOpenFileDescription(t)?(L.releaseDescriptor(t),e(null)):e(new h.EBADF)}function wn(n,t,e,i){S(n,t,e,i)}function On(n,t,e,i){if(arguments.length<4)i=e,e=m;else if(!(e=Pn(e,m,i)))return;X(n,t,i)}function ln(n,t,e,i){\"function\"==typeof e&&(i=e,e=r.fsConstants.F_OK),q(n,t,e|=r.fsConstants.F_OK,i)}function gn(n,t,e,i){if(i=arguments[arguments.length-1],!t)return i(new Error(\"filename prefix is required\"));var u=t+\"-\"+s.randomChars(6);X(n,u,function(n){i(n,u)})}function vn(n,t,e){M(n,t,e)}function yn(n,t,e){G(n,t,function(i,u){if(i)e(i);else{var o=new B(t,u,n.name);e(null,o)}})}function Nn(n,t,e){var i=L.getOpenFileDescription(t);i?W(n,i,function(t,u){if(t)e(t);else{var o=new B(i.path,u,n.name);e(null,o)}}):e(new h.EBADF)}function An(n,t,e,i){$(n,t,e,i)}function Dn(n,t,e){J(n,t,e)}function In(n,t,e,i,u,o,f){i=void 0===i?0:i,u=void 0===u?e.length-i:u,f=arguments[arguments.length-1];var s=L.getOpenFileDescription(t);s?s.flags.includes(l)?U(n,s,e,i,u,o,function(n,t){f(n,t||0,e)}):f(new h.EBADF(\"descriptor does not permit reading\")):f(new h.EBADF)}function jn(n,t,e){Fn(t,e)===t&&(L.getOpenFileDescription(t)?e():e(new h.EBADF))}function Tn(t,e,i,u){u=arguments[arguments.length-1];var o=pn((i=dn(i,null,\"r\")).flag||\"r\");if(!o)return u(new h.EINVAL(\"flags is not valid\",e));z(t,e,o,function(f,s){if(f)return u(f);var r=new R(e,s.id,o,0),a=L.allocDescriptor(r);function c(){L.releaseDescriptor(a)}W(t,r,function(o,f){if(o)return c(),u(o);var s=new B(r.path,f,t.name);if(s.isDirectory())return c(),u(new h.EISDIR(\"illegal operation on directory\",e));var a=s.size,p=n.alloc(a);U(t,r,p,0,a,0,function(n){if(c(),n)return u(n);var t;t=\"utf8\"===i.encoding?p.toString(\"utf8\"):p,u(null,t)})})})}function hn(n,t,e,i,u,o,f){f=arguments[arguments.length-1],i=void 0===i?0:i,u=void 0===u?e.length-i:u;var s=L.getOpenFileDescription(t);s?s.flags.includes(g)?e.length-i<u?f(new h.EIO(\"input buffer is too small\")):K(n,s,e,i,u,o,f):f(new h.EBADF(\"descriptor does not permit writing\")):f(new h.EBADF)}function bn(t,e,i,u,o){o=arguments[arguments.length-1];var f=pn((u=dn(u,\"utf8\",\"w\")).flag||\"w\");if(!f)return o(new h.EINVAL(\"flags is not valid\",e));\"number\"==typeof(i=i||\"\")&&(i=\"\"+i),\"string\"==typeof i&&\"utf8\"===u.encoding&&(i=n.from(i)),z(t,e,f,function(n,u){if(n)return o(n);var s=new R(e,u.id,f,0),r=L.allocDescriptor(s);Y(t,s,i,0,i.length,function(n){if(L.releaseDescriptor(r),n)return o(n);o(null)})})}function Ln(t,e,i,u,o){o=arguments[arguments.length-1];var f=pn((u=dn(u,\"utf8\",\"a\")).flag||\"a\");if(!f)return o(new h.EINVAL(\"flags is not valid\",e));\"number\"==typeof(i=i||\"\")&&(i=\"\"+i),\"string\"==typeof i&&\"utf8\"===u.encoding&&(i=n.from(i)),z(t,e,f,function(n,u){if(n)return o(n);var s=new R(e,u.id,f,u.size),r=L.allocDescriptor(s);K(t,s,i,0,i.length,s.position,function(n){if(L.releaseDescriptor(r),n)return o(n);o(null)})})}function Rn(n,t,e){yn(n,t,function(n){e(!n)})}function Fn(n,t){if(\"number\"==typeof n)return n;t(new h.EINVAL(\"Expected integer\",n))}var Vn=/^[0-7]+$/;function Bn(n){return n===n>>>0}function Pn(n,t,e){return\"function\"==typeof t&&(e=t,t=void 0),Bn(n)?n&m:\"number\"==typeof n?(Number.isInteger(n),e(new h.EINVAL(\"mode not a valid an integer value\",n)),!1):\"string\"==typeof n?Vn.test(n)?parseInt(n,8)&m:(e(new h.EINVAL(\"mode not a valid octal string\",n)),!1):void 0!==t?t:(e(new h.EINVAL(\"mode not valid\",n)),!1)}function Sn(n,t,e,u){t=i(t),\"number\"!=typeof e?u(new h.EINVAL(\"mode must be number\",t)):_(n,t,function(i,o){i?u(i):(o.mode=e,P(n,t,o,{mtime:Date.now()},u))})}function _n(n,t,e,i){\"number\"!=typeof e?i(new h.EINVAL(\"mode must be a number\")):t.getNode(n,function(u,o){u?i(u):(o.mode=e,P(n,t.path,o,{mtime:Date.now()},i))})}function xn(n,t,e,u,o){t=i(t),_(n,t,function(i,f){i?o(i):(f.uid=e,f.gid=u,P(n,t,f,{mtime:Date.now()},o))})}function Cn(n,t,e,i,u){t.getNode(n,function(o,f){o?u(o):(f.uid=e,f.gid=i,P(n,t.path,f,{mtime:Date.now()},u))})}function Xn(n,t,e,i){sn(n,t,e,i)}function qn(n,t,e,i){var u=L.getOpenFileDescription(t);u?rn(n,u,e,i):i(new h.EBADF)}function Mn(n,t,e,i,u,o){\"function\"==typeof u&&(o=u,u=null),on(n,t,e,i,u,o)}function zn(n,t,e,i,u,o){\"function\"==typeof u&&(o=u,u=null);var f=L.getOpenFileDescription(t);f?f.flags.includes(g)?fn(n,f,e,i,u,o):o(new h.EBADF(\"descriptor does not permit writing\")):o(new h.EBADF)}function Yn(n,t,e,i){an(n,t,e,i)}function Kn(n,t,e,i){var u=L.getOpenFileDescription(t);u?u.flags.includes(g)?cn(n,u,e,i):i(new h.EBADF(\"descriptor does not permit writing\")):i(new h.EBADF)}function Un(n,t,e,i,u){var o=L.getOpenFileDescription(t);o||u(new h.EBADF),\"SET\"===i?e<0?u(new h.EINVAL(\"resulting file offset would be negative\")):(o.position=e,u(null,o.position)):\"CUR\"===i?o.position+e<0?u(new h.EINVAL(\"resulting file offset would be negative\")):(o.position+=e,u(null,o.position)):\"END\"===i?W(n,o,function(n,t){n?u(n):t.size+e<0?u(new h.EINVAL(\"resulting file offset would be negative\")):(o.position=t.size+e,u(null,o.position))}):u(new h.EINVAL(\"whence argument is not a proper value\"))}function Gn(n,t,e){Q(n,t,e)}function Wn(n){return\"number\"==typeof n?n:\"object\"===t(n)&&\"function\"==typeof n.getTime?n.getTime():void 0}function Hn(n,t,e,i,u){var o=Date.now();en(n,t,e=Wn(e||o),i=Wn(i||o),u)}function $n(n,t,e,i,u){var o=Date.now();e=Wn(e||o),i=Wn(i||o);var f=L.getOpenFileDescription(t);f?f.flags.includes(g)?un(n,f,e,i,u):u(new h.EBADF(\"descriptor does not permit writing\")):u(new h.EBADF)}function Jn(n,t,e,i){(e=Pn(e,i))&&Sn(n,t,e,i)}function Qn(n,t,e,i){if(e=Pn(e,i)){var u=L.getOpenFileDescription(t);u?u.flags.includes(g)?_n(n,u,e,i):i(new h.EBADF(\"descriptor does not permit writing\")):i(new h.EBADF)}}function Zn(n,t,e,i,u){return Bn(e)?Bn(i)?void xn(n,t,e,i,u):u(new h.EINVAL(\"gid must be a valid integer\",i)):u(new h.EINVAL(\"uid must be a valid integer\",e))}function kn(n,t,e,i,u){if(!Bn(e))return u(new h.EINVAL(\"uid must be a valid integer\",e));if(!Bn(i))return u(new h.EINVAL(\"gid must be a valid integer\",i));var o=L.getOpenFileDescription(t);o?o.flags.includes(g)?Cn(n,o,e,i,u):u(new h.EBADF(\"descriptor does not permit writing\")):u(new h.EBADF)}function nt(n,t,u,o){t=i(t),u=i(u);var f,s,r,a,p=e.dirname(t),d=e.dirname(t),m=e.basename(t),E=e.basename(u),w=Date.now();function O(t,e){t?o(t):P(n,u,e,{ctime:w},o)}function l(t){t?o(t):n.getObject(a[E].id,O)}function g(t){t?o(t):(f.id===r.id&&(s=a),delete s[m],n.putObject(f.data,s,l))}function v(t){t?o(t):(a[E]=s[m],n.putObject(r.data,a,g))}function y(t,e){t?o(t):(a=e).hasOwnProperty(E)?M(n,u,v):v()}function N(t,e){t?o(t):(r=e,n.getObject(r.data,y))}function A(t,e){t?o(t):(s=e,_(n,d,N))}function D(t,e){t?o(t):(f=e,n.getObject(e.data,A))}function I(e){e?o(e):J(n,t,o)}_(n,t,function(e,i){e?o(e):i.type===c?_(n,p,D):$(n,t,u,I)})}function tt(n,t,e,i,u){Z(n,t,e,u=arguments[arguments.length-1])}function et(n,t,e){k(n,t,e)}function it(n,t,e){H(n,t,function(i,u){if(i)e(i);else{var o=new B(t,u,n.name);e(null,o)}})}function ut(n,t,e,i){Fn(e=e||0,i=arguments[arguments.length-1])===e&&nn(n,t,e,i)}function ot(n,t,e,i){i=arguments[arguments.length-1],e=e||0;var u=L.getOpenFileDescription(t);if(u)if(u.flags.includes(g)){if(Fn(e,i)!==e)return;tn(n,u,e,i)}else i(new h.EBADF(\"descriptor does not permit writing\"));else i(new h.EBADF)}module.exports={appendFile:Ln,access:ln,chown:Zn,chmod:Jn,close:En,ensureRootDirectory:C,exists:Rn,fchown:kn,fchmod:Qn,fgetxattr:qn,fremovexattr:Kn,fsetxattr:zn,fstat:Nn,fsync:jn,ftruncate:ot,futimes:$n,getxattr:Xn,link:An,lseek:Un,lstat:it,mkdir:On,mkdtemp:gn,mknod:wn,open:mn,readdir:Gn,read:In,readFile:Tn,readlink:et,removexattr:Yn,rename:nt,rmdir:vn,setxattr:Mn,stat:yn,symlink:tt,truncate:ut,unlink:Dn,utimes:Hn,writeFile:bn,write:hn};\n},{\"../path.js\":\"8thZ\",\"../shared.js\":\"zFPO\",\"../constants.js\":\"gCho\",\"../errors.js\":\"Hmaa\",\"../directory-entry.js\":\"RlAD\",\"../open-files.js\":\"U1jA\",\"../open-file-description.js\":\"E+68\",\"../super-node.js\":\"3YM/\",\"../node.js\":\"epsH\",\"../stats.js\":\"OfGU\",\"buffer\":\"dskh\"}],\"Q4+W\":[function(require,module,exports) {\nvar Buffer = require(\"buffer\").Buffer;\nvar e=require(\"buffer\").Buffer,r=require(\"es6-promisify\"),t=r.promisify,n=require(\"../path.js\"),a=require(\"../providers/index.js\"),s=require(\"../shell/shell.js\"),o=require(\"../../lib/intercom.js\"),i=require(\"../fs-watcher.js\"),u=require(\"../errors.js\"),m=require(\"../shared.js\"),c=m.nop,f=m.guid,l=require(\"../constants.js\"),h=l.fsConstants,p=l.FILE_SYSTEM_NAME,d=l.FS_FORMAT,g=l.FS_READY,b=l.FS_PENDING,A=l.FS_ERROR,P=l.FS_NODUPEIDCHECK,v=l.STDIN,y=l.STDOUT,E=l.STDERR,R=require(\"./implementation.js\");function w(e){return\"function\"==typeof e?e:function(e){if(e)throw e}}function S(e){e&&console.error(\"Filer error: \",e)}function O(e){if(!(e&&e.protocol&&e.pathname))return e;if(\"file:\"!==e.protocol)throw new u.EINVAL(\"only file: URLs are supported for paths\",e);for(var r=e.pathname,t=0;t<r.length;t++)if(\"%\"===r[t]){var n=32|r.codePointAt(t+2);if(\"2\"===r[t+1]&&102===n)throw new u.EINVAL(\"file: URLs must not include encoded / characters\",e)}return decodeURIComponent(r)}function x(r){return e.isBuffer(r)?r.toString():r}function F(e,r){return e?n.isNull(e)?new u.EINVAL(\"Path must be a string without null bytes.\",e):r||n.isAbsolute(e)?void 0:new u.EINVAL(\"Path must be absolute.\",e):new u.EINVAL(\"Path must be a string\",e)}function _(e,r,t){var n=e[r],a=F(n=x(n=O(n)),t);if(a)throw a;e[r]=n}function q(e,r){r=r||S;var m=(e=e||{}).flags||[],l=e.guid?e.guid:f,O=e.provider||new a.Default(e.name||p),x=e.name||O.name,F=m.includes(d),I=this;I.readyState=b,I.name=x,I.error=null,I.stdin=v,I.stdout=y,I.stderr=E,I.constants=h,I.F_OK=h.F_OK,I.R_OK=h.R_OK,I.W_OK=h.W_OK,I.X_OK=h.X_OK,this.Shell=s.bind(void 0,this);var N=[];function j(e){return function(r){m.includes(P)?r(null,l()):function r(t){var n=l();e.getObject(n,function(e,a){e?t(e):a?r(t):t(null,n)})}(r)}}this.queueOrRun=function(e){var r;return g===I.readyState?e.call(I):A===I.readyState?r=new u.EFILESYSTEMERROR(\"unknown error\"):N.push(e),r},this.watch=function(e,r,t){if(n.isNull(e))throw new Error(\"Path must be a string without null bytes.\");\"function\"==typeof r&&(t=r,r={}),r=r||{},t=t||c;var a=new i;return a.start(e,!1,r.recursive),a.on(\"change\",t),a},O.open(function(e){function t(e){function t(e){var r=O[e]();return r.name=x,r.flags=m,r.changes=[],r.guid=j(r),r.close=function(){var e=r.changes;!function(e){if(e.length){var r=o.getInstance();e.forEach(function(e){r.emit(e.event,e.path)})}}(e),e.length=0},r}I.provider={openReadWriteContext:function(){return t(\"getReadWriteContext\")},openReadOnlyContext:function(){return t(\"getReadOnlyContext\")}},I.readyState=e?A:g,N.forEach(function(e){e.call(this)}.bind(I)),N=null,r(e,I)}if(e)return t(e);var n=O.getReadWriteContext();n.guid=j(n),F?n.clear(function(e){if(e)return t(e);R.ensureRootDirectory(n,t)}):R.ensureRootDirectory(n,t)}),q.prototype.promises={},[{name:\"appendFile\",promises:!0,absPathArgs:[0]},{name:\"access\",promises:!0,absPathArgs:[0]},{name:\"chown\",promises:!0,absPathArgs:[0]},{name:\"chmod\",promises:!0,absPathArgs:[0]},{name:\"close\"},{name:\"exists\",absPathArgs:[0]},{name:\"fchown\"},{name:\"fchmod\"},{name:\"fgetxattr\"},{name:\"fremovexattr\"},{name:\"fsetxattr\"},{name:\"fstat\"},{name:\"fsync\"},{name:\"ftruncate\"},{name:\"futimes\"},{name:\"getxattr\",promises:!0,absPathArgs:[0]},{name:\"link\",promises:!0,absPathArgs:[0,1]},{name:\"lseek\"},{name:\"lstat\",promises:!0},{name:\"mkdir\",promises:!0,absPathArgs:[0]},{name:\"mkdtemp\",promises:!0},{name:\"mknod\",promises:!0,absPathArgs:[0]},{name:\"open\",promises:!0,absPathArgs:[0]},{name:\"readdir\",promises:!0,absPathArgs:[0]},{name:\"read\"},{name:\"readFile\",promises:!0,absPathArgs:[0]},{name:\"readlink\",promises:!0,absPathArgs:[0]},{name:\"removexattr\",promises:!0,absPathArgs:[0]},{name:\"rename\",promises:!0,absPathArgs:[0,1]},{name:\"rmdir\",promises:!0,absPathArgs:[0]},{name:\"setxattr\",promises:!0,absPathArgs:[0]},{name:\"stat\",promises:!0,absPathArgs:[0]},{name:\"symlink\",promises:!0,relPathArgs:[0],absPathArgs:[1]},{name:\"truncate\",promises:!0,absPathArgs:[0]},{name:\"unlink\",promises:!0,absPathArgs:[0]},{name:\"utimes\",promises:!0,absPathArgs:[0]},{name:\"writeFile\",promises:!0,absPathArgs:[0]},{name:\"write\"}].forEach(function(e){var r=e.name,n=!0===e.promises;q.prototype[r]=function(){var t=this,n=Array.prototype.slice.call(arguments,0),a=n.length-1,s=\"function\"!=typeof n[a],o=w(n[a]);e.absPathArgs&&e.absPathArgs.forEach(function(e){return _(n,e,!1)}),e.relPathArgs&&e.relPathArgs.forEach(function(e){return _(n,e,!0)});var i=t.queueOrRun(function(){var e=t.provider.openReadWriteContext();if(A===t.readyState){var i=new u.EFILESYSTEMERROR(\"filesystem unavailable, operation canceled\");return o.call(t,i)}function m(){e.close(),o.apply(t,arguments)}s?n.push(m):n[a]=m;var c=[e].concat(n);R[r].apply(null,c)});i&&o(i)},n&&(q.prototype.promises[r]=t(q.prototype[r].bind(I)))})}q.providers=a,module.exports=q;\n},{\"es6-promisify\":\"0c0E\",\"../path.js\":\"8thZ\",\"../providers/index.js\":\"UCG6\",\"../shell/shell.js\":\"Kf0M\",\"../../lib/intercom.js\":\"u7Jv\",\"../fs-watcher.js\":\"p3D+\",\"../errors.js\":\"Hmaa\",\"../shared.js\":\"zFPO\",\"../constants.js\":\"gCho\",\"./implementation.js\":\"HvxC\",\"buffer\":\"dskh\"}],\"2u/B\":[function(require,module,exports) {\nvar Buffer = require(\"buffer\").Buffer;\nvar e=require(\"buffer\").Buffer,r=null,l=null;module.exports=l={FileSystem:require(\"./filesystem/interface.js\"),Buffer:e,Path:require(\"./path.js\"),path:require(\"./path.js\"),Errors:require(\"./errors.js\"),Shell:require(\"./shell/shell.js\")},Object.defineProperty(l,\"fs\",{enumerable:!0,get:function(){return r||(r=new l.FileSystem),r}});\n},{\"./filesystem/interface.js\":\"Q4+W\",\"./path.js\":\"8thZ\",\"./errors.js\":\"Hmaa\",\"./shell/shell.js\":\"Kf0M\",\"buffer\":\"dskh\"}]},{},[\"2u/B\"], \"Filer\")","module.exports = function flatten(list, depth) {\n  depth = (typeof depth == 'number') ? depth : Infinity;\n\n  if (!depth) {\n    if (Array.isArray(list)) {\n      return list.map(function(i) { return i; });\n    }\n    return list;\n  }\n\n  return _flatten(list, 1);\n\n  function _flatten(list, d) {\n    return list.reduce(function (acc, item) {\n      if (Array.isArray(item) && d < depth) {\n        return acc.concat(_flatten(item, d + 1));\n      }\n      else {\n        return acc.concat(item);\n      }\n    }, []);\n  }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = runParallel\n\nfunction runParallel (tasks, cb) {\n  var results, pending, keys\n  var isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) process.nextTick(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (--pending === 0 || err) {\n      done(err)\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) { each(key, err, result) })\n    })\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n    })\n  }\n\n  isSync = false\n}\n","module.exports = dragDrop\n\nvar flatten = require('flatten')\nvar parallel = require('run-parallel')\n\nfunction dragDrop (elem, listeners) {\n  if (typeof elem === 'string') {\n    var selector = elem\n    elem = window.document.querySelector(elem)\n    if (!elem) {\n      throw new Error('\"' + selector + '\" does not match any HTML elements')\n    }\n  }\n\n  if (!elem) {\n    throw new Error('\"' + elem + '\" is not a valid HTML element')\n  }\n\n  if (typeof listeners === 'function') {\n    listeners = { onDrop: listeners }\n  }\n\n  var timeout\n\n  elem.addEventListener('dragenter', onDragEnter, false)\n  elem.addEventListener('dragover', onDragOver, false)\n  elem.addEventListener('dragleave', onDragLeave, false)\n  elem.addEventListener('drop', onDrop, false)\n\n  // Function to remove drag-drop listeners\n  return function remove () {\n    removeDragClass()\n    elem.removeEventListener('dragenter', onDragEnter, false)\n    elem.removeEventListener('dragover', onDragOver, false)\n    elem.removeEventListener('dragleave', onDragLeave, false)\n    elem.removeEventListener('drop', onDrop, false)\n  }\n\n  function onDragEnter (e) {\n    if (listeners.onDragEnter) {\n      listeners.onDragEnter(e)\n    }\n\n    // Prevent event\n    e.stopPropagation()\n    e.preventDefault()\n    return false\n  }\n\n  function onDragOver (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (listeners.onDragOver) {\n      listeners.onDragOver(e)\n    }\n\n    if (e.dataTransfer.items) {\n      // Only add \"drag\" class when `items` contains items that are able to be\n      // handled by the registered listeners (files vs. text)\n      var items = Array.from(e.dataTransfer.items)\n      var fileItems = items.filter(function (item) { return item.kind === 'file' })\n      var textItems = items.filter(function (item) { return item.kind === 'string' })\n\n      if (fileItems.length === 0 && !listeners.onDropText) return\n      if (textItems.length === 0 && !listeners.onDrop) return\n      if (fileItems.length === 0 && textItems.length === 0) return\n    }\n\n    elem.classList.add('drag')\n    clearTimeout(timeout)\n\n    e.dataTransfer.dropEffect = 'copy'\n\n    return false\n  }\n\n  function onDragLeave (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (listeners.onDragLeave) {\n      listeners.onDragLeave(e)\n    }\n\n    clearTimeout(timeout)\n    timeout = setTimeout(removeDragClass, 50)\n\n    return false\n  }\n\n  function onDrop (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (listeners.onDragLeave) {\n      listeners.onDragLeave(e)\n    }\n\n    clearTimeout(timeout)\n    removeDragClass()\n\n    var pos = {\n      x: e.clientX,\n      y: e.clientY\n    }\n\n    // text drop support\n    var text = e.dataTransfer.getData('text')\n    if (text && listeners.onDropText) {\n      listeners.onDropText(text, pos)\n    }\n\n    // File drop support. The `dataTransfer.items` API supports directories, so we\n    // use it instead of `dataTransfer.files`, even though it's much more\n    // complicated to use.\n    // See: https://github.com/feross/drag-drop/issues/39\n    if (listeners.onDrop && e.dataTransfer.items) {\n      var fileList = e.dataTransfer.files\n\n      // Handle directories in Chrome using the proprietary FileSystem API\n      var items = Array.from(e.dataTransfer.items).filter(function (item) {\n        return item.kind === 'file'\n      })\n\n      if (items.length === 0) return\n\n      parallel(items.map(function (item) {\n        return function (cb) {\n          processEntry(item.webkitGetAsEntry(), cb)\n        }\n      }), function (err, results) {\n        // This catches permission errors with file:// in Chrome. This should never\n        // throw in production code, so the user does not need to use try-catch.\n        if (err) throw err\n\n        var entries = flatten(results)\n\n        var files = entries.filter(function (item) {\n          return item.isFile\n        })\n\n        var directories = entries.filter(function (item) {\n          return item.isDirectory\n        })\n\n        listeners.onDrop(files, pos, fileList, directories)\n      })\n    }\n\n    return false\n  }\n\n  function removeDragClass () {\n    elem.classList.remove('drag')\n  }\n}\n\nfunction processEntry (entry, cb) {\n  var entries = []\n\n  if (entry.isFile) {\n    entry.file(function (file) {\n      file.fullPath = entry.fullPath // preserve pathing for consumer\n      file.isFile = true\n      file.isDirectory = false\n      cb(null, file)\n    }, function (err) {\n      cb(err)\n    })\n  } else if (entry.isDirectory) {\n    var reader = entry.createReader()\n    readEntries()\n  }\n\n  function readEntries () {\n    reader.readEntries(function (entries_) {\n      if (entries_.length > 0) {\n        entries = entries.concat(Array.from(entries_))\n        readEntries() // continue reading entries until `readEntries` returns no more\n      } else {\n        doneEntries()\n      }\n    })\n  }\n\n  function doneEntries () {\n    parallel(entries.map(function (entry) {\n      return function (cb) {\n        processEntry(entry, cb)\n      }\n    }), function (err, results) {\n      if (err) {\n        cb(err)\n      } else {\n        results.push({\n          fullPath: entry.fullPath,\n          name: entry.name,\n          isFile: false,\n          isDirectory: true\n        })\n        cb(null, results)\n      }\n    })\n  }\n}\n","'use strict';\n\nconst { fsRoot } = require('./config');\nconst { fs, Path, Buffer } = require('filer');\nconst sh = new fs.Shell();\nconst dragDrop = require('drag-drop');\n\n// Expose fs on window for people to play on the console if they want\nwindow.fs = fs;\n// Use node's lowercase style `p` path\nwindow.path = Path;\nwindow.Buffer = Buffer;\nconsole.info('fs, path, and Buffer are all available on window for debugging, e.g., fs.stat(\\'/\\', console.log)');\nconsole.info('See https://github.com/filerjs/filer for docs.');\nconsole.info('use ?debug on the URL if you need Plan9/Filer debug info from v86');\n\n/**\n * Setup drop zone for adding files\n */\n/* window.addEventListener('DOMContentLoaded', function() {\n  const dropTarget = document.querySelector('#drag-drop');\n\n  dragDrop(dropTarget, function (files) {\n    files.forEach(function (file) {\n      console.log(`Importing ${file.fullPath}...`);\n  \n      var reader = new FileReader();\n      reader.onload = function(e) {\n        // e.target.result is an ArrayBuffer\n        var arr = new Uint8Array(e.target.result);\n        var buffer = new Buffer(arr);\n\n        // Create any parent paths we need before trying to write the file\n        const dirname = Path.dirname(file.fullPath);\n        sh.mkdirp(dirname, function(err) {\n          if(err) {\n            return console.log(`...unable to create directory path ${dirname}: ${err.message}`);\n          }\n\n          // Write the file to disk\n          fs.writeFile(file.fullPath, buffer, function(err) {\n            if(err) {\n              console.log(`...unable to import file ${file.fullPath}: ${err.message}`);\n            } else {\n              console.log(`...wrote ${file.fullPath} (${file.size} bytes) successfully.`);\n            }\n          });  \n        });\n      };\n      reader.onerror = function(err) {\n        console.error('FileReader error' + err);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  });  \n}); */\n\n/**\n * Put some files in the filesystem on the first run\n */\nfunction install() {\n  const readme = `Welcome! Your files are located in /mnt and available at the URL /${fsRoot}`;\n  fs.writeFile('/readme.txt', readme, (err) => {\n    if(err) console.error('unable to write readme file!', err);\n\n    const html = '<h1>Hello World</h1>';\n    fs.writeFile('/hello-world.html', html, (err) => {\n      if(err) console.error('unable to write html file!', err);\n    });    \n  });\n}\n\nmodule.exports = {\n  install,\n  fs,\n  sh,\n  Path,\n  Buffer\n};\n","'use strict';\n\nconst { Workbox } = require('workbox-window');\nconst browser = require('./browser');\nconst { fsRoot } = require('./config');\nconst filesystem = require('./filesystem');\n\n/**\n * Parcel doesn't like relative links to routes in a service worker.\n * So let's do it at run-time vs. build-time! Swap all \n * <code class=\"parcel-ignore\">/fs/...</code> for <a> links to server.\n */\nfunction fixFsUrls() {\n  const links = document.querySelectorAll('.parcel-ignore');\n  if(!links) return;\n  \n  links.forEach(link => {\n    const path = link.innerHTML;\n    link.innerHTML = '';\n\n    const a = document.createElement('a');\n    a.href = path;\n    a.innerHTML = path;\n    a.target = '_blank';\n    link.appendChild(a);\n  });\n}\n\n/**\n * Register the nohost service worker, passing `route`\n */\nfunction start() {\n  if(!('serviceWorker' in navigator)) {\n    console.log('[nohost] unable to initialize service worker: not supported.');\n    return;\n  }\n\n  // Downloaded via package.json script from https://www.npmjs.com/package/nohost?activeTab=versions via unpkg\n  const wb = new Workbox(`browser-shell/dist/nohost-sw.js?route=${encodeURIComponent(fsRoot)}`);\n\n  // Wait on the server to be fully ready to handle routing requests\n  wb.controlling.then(() => {\n    fixFsUrls();\n    browser.start();\n  });\n\n  // Deal with first-run install, if necessary\n  wb.addEventListener('installed', (event) => {\n    if(!event.isUpdate) {\n      filesystem.install();\n    }\n  });\n  \n  // Register the service worker after event listeners have been added.\n  wb.register();\n}\nwindow.server = {\n  start,\n};\n\nmodule.exports.start = start;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { CharData, IBufferLine } from './Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, NULL_CELL_CHAR, WHITESPACE_CELL_CHAR } from './Buffer';\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/** cell member indices */\nconst enum Cell {\n  FLAGS = 0,\n  STRING = 1,\n  WIDTH = 2\n}\n\n/** single vs. combined char distinction */\nconst IS_COMBINED_BIT_MASK = 0x80000000;\n\n/**\n * Typed array based bufferline implementation.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array | null = null;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCharData?: CharData, public isWrapped: boolean = false) {\n    if (!fillCharData) {\n      fillCharData = [0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n    }\n    if (cols) {\n      this._data = new Uint32Array(cols * CELL_SIZE);\n      for (let i = 0; i < cols; ++i) {\n        this.set(i, fillCharData);\n      }\n    }\n    this.length = cols;\n  }\n\n  public get(index: number): CharData {\n    const stringData = this._data[index * CELL_SIZE + Cell.STRING];\n    return [\n      this._data[index * CELL_SIZE + Cell.FLAGS],\n      (stringData & IS_COMBINED_BIT_MASK)\n        ? this._combined[index]\n        : (stringData) ? String.fromCharCode(stringData) : '',\n      this._data[index * CELL_SIZE + Cell.WIDTH],\n      (stringData & IS_COMBINED_BIT_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : stringData\n    ];\n  }\n\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.WIDTH];\n  }\n\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FLAGS] = value[0];\n    if (value[1].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.STRING] = index | IS_COMBINED_BIT_MASK;\n    } else {\n      this._data[index * CELL_SIZE + Cell.STRING] = value[1].charCodeAt(0);\n    }\n    this._data[index * CELL_SIZE + Cell.WIDTH] = value[2];\n  }\n\n  public insertCells(pos: number, n: number, fillCharData: CharData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.set(pos + n + i, this.get(pos + i));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.set(pos + i, fillCharData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.set(i, fillCharData);\n      }\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCharData: CharData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.set(pos + i, this.get(pos + n + i));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.set(i, fillCharData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.set(i, fillCharData);\n      }\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCharData: CharData): void {\n    while (start < end  && start < this.length) {\n      this.set(start++, fillCharData);\n    }\n  }\n\n  public resize(cols: number, fillCharData: CharData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.set(i, fillCharData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = null;\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCharData: CharData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.set(i, fillCharData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    // creation of new typed array from another is actually pretty slow :(\n    // still faster than copying values one by one\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if (this._data[i * CELL_SIZE + Cell.STRING] !== 0) {  // 0 ==> ''.charCodeAt(0) ==> NaN ==> 0\n        return i + this._data[i * CELL_SIZE + Cell.WIDTH];\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const stringData = this._data[startCol * CELL_SIZE + Cell.STRING];\n      result += (stringData & IS_COMBINED_BIT_MASK) ? this._combined[startCol] : (stringData) ? String.fromCharCode(stringData) : WHITESPACE_CELL_CHAR;\n      startCol += this._data[startCol * CELL_SIZE + Cell.WIDTH] || 1;\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { FILL_CHAR_DATA, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX } from './Buffer';\nimport { BufferLine } from './BufferLine';\nimport { CircularList, IDeleteEvent } from './common/CircularList';\nimport { IBufferLine } from './Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].set(newCols - 1, FILL_CHAR_DATA);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, FILL_CHAR_DATA);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.emit('delete', {\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      } as IDeleteEvent);\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const cell = lines[i].get(cols - 1);\n  const endsInNull = cell[CHAR_DATA_CHAR_INDEX] === '' && cell[CHAR_DATA_WIDTH_INDEX] === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { XtermListener } from './Types';\nimport { IEventEmitter, IDisposable } from 'xterm';\nimport { Disposable } from './Lifecycle';\n\nexport class EventEmitter extends Disposable implements IEventEmitter, IDisposable {\n  private _events: {[type: string]: XtermListener[]};\n\n  constructor() {\n    super();\n    // Restore the previous events if available, this will happen if the\n    // constructor is called multiple times on the same object (terminal reset).\n    this._events = (<any>this)._events || {};\n  }\n\n  public on(type: string, listener: XtermListener): void {\n    this._events[type] = this._events[type] || [];\n    this._events[type].push(listener);\n  }\n\n  /**\n   * Adds a disposable listener to the EventEmitter, returning the disposable.\n   * @param type The event type.\n   * @param handler The handler for the listener.\n   */\n  public addDisposableListener(type: string, handler: XtermListener): IDisposable {\n    // TODO: Rename addDisposableEventListener to more easily disambiguate from Dom listener\n    this.on(type, handler);\n    let disposed = false;\n    return {\n      dispose: () => {\n        if (disposed) {\n          // Already disposed\n          return;\n        }\n        this.off(type, handler);\n        disposed = true;\n      }\n    };\n  }\n\n  public off(type: string, listener: XtermListener): void {\n    if (!this._events[type]) {\n      return;\n    }\n\n    const obj = this._events[type];\n    let i = obj.length;\n\n    while (i--) {\n      if (obj[i] === listener) {\n        obj.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  public removeAllListeners(type: string): void {\n    if (this._events[type]) {\n       delete this._events[type];\n    }\n  }\n\n  public emit(type: string, ...args: any[]): void {\n    if (!this._events[type]) {\n      return;\n    }\n    const obj = this._events[type];\n    for (let i = 0; i < obj.length; i++) {\n      obj[i].apply(this, args);\n    }\n  }\n\n  public emitMayRemoveListeners(type: string, ...args: any[]): void {\n    if (!this._events[type]) {\n      return;\n    }\n    const obj = this._events[type];\n    let length = obj.length;\n    for (let i = 0; i < obj.length; i++) {\n      obj[i].apply(this, args);\n      i -= length - obj.length;\n      length = obj.length;\n    }\n  }\n\n  public listeners(type: string): XtermListener[] {\n    return this._events[type] || [];\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._events = {};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from './EventEmitter';\nimport { ICircularList } from './Types';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends EventEmitter implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.emitMayRemoveListeners('trim', 1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.emitMayRemoveListeners('trim', 1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.emitMayRemoveListeners('trim', countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.emitMayRemoveListeners('trim', count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.emitMayRemoveListeners('trim', 1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { FontWeight } from 'xterm';\nimport { IColorSet } from '../Types';\n\nexport const DEFAULT_COLOR = 256;\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n\nexport interface IGlyphIdentifier {\n  chars: string;\n  code: number;\n  bg: number;\n  fg: number;\n  bold: boolean;\n  dim: boolean;\n  italic: boolean;\n}\n\nexport interface ICharAtlasConfig {\n  type: 'none' | 'static' | 'dynamic';\n  devicePixelRatio: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  scaledCharWidth: number;\n  scaledCharHeight: number;\n  allowTransparency: boolean;\n  colors: IColorSet;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IMarker } from 'xterm';\nimport { BufferLine } from './BufferLine';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from './BufferReflow';\nimport { CircularList, IDeleteEvent, IInsertEvent } from './common/CircularList';\nimport { EventEmitter } from './common/EventEmitter';\nimport { DEFAULT_COLOR } from './renderer/atlas/Types';\nimport { BufferIndex, CharData, IBuffer, IBufferLine, IBufferStringIterator, IBufferStringIteratorResult, ITerminal } from './Types';\n\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\nexport const FILL_CHAR_DATA: CharData = [DEFAULT_ATTR, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number;\n  public ybase: number;\n  public y: number;\n  public x: number;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: any;\n  public savedY: number;\n  public savedX: number;\n  public savedCurAttr: number;\n  public markers: Marker[] = [];\n  private _cols: number;\n  private _rows: number;\n\n  /**\n   * Create a new Buffer.\n   * @param _terminal The terminal the Buffer will belong to.\n   * @param _hasScrollback Whether the buffer should respect the scrollback of\n   * the terminal.\n   */\n  constructor(\n    private _terminal: ITerminal,\n    private _hasScrollback: boolean\n  ) {\n    this._cols = this._terminal.cols;\n    this._rows = this._terminal.rows;\n    this.clear();\n  }\n\n  public getBlankLine(attr: number, isWrapped?: boolean): IBufferLine {\n    const fillCharData: CharData = [attr, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n    return new BufferLine(this._cols, fillCharData, isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._terminal.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: number): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i).resize(newCols, FILL_CHAR_DATA);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n              // There is room above the buffer and there are no empty elements below the line,\n              // scroll up\n              this.ybase--;\n              addToY++;\n              if (this.ydisp > 0) {\n                // Viewport is at the top of the buffer, must increase downwards\n                this.ydisp--;\n              }\n            } else {\n              // Add a blank line if there is no buffer left at the top to scroll to, or if there\n              // are blank lines after the cursor\n              this.lines.push(new BufferLine(newCols, FILL_CHAR_DATA));\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedY = Math.min(this.savedY, newRows - 1);\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i).resize(newCols, FILL_CHAR_DATA);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !(this._terminal as any).isWinptyCompatEnabled;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y);\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, FILL_CHAR_DATA));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].set(destLineLengths[i], FILL_CHAR_DATA);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          } as IInsertEvent);\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.emit('insert', insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.emitMayRemoveListeners('trim', amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first).isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1).isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._terminal.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.addDisposableListener('trim', amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.addDisposableListener('insert', (event: IInsertEvent) => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.addDisposableListener('delete', (event: IDeleteEvent) => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.addDisposableListener('dispose', () => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\nexport class Marker extends EventEmitter implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this.emit('dispose');\n    super.dispose();\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, IBufferSet } from './Types';\nimport { Buffer } from './Buffer';\nimport { EventEmitter } from './common/EventEmitter';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends EventEmitter implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(private _terminal: ITerminal) {\n    super();\n    this._normal = new Buffer(this._terminal, true);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(this._terminal, false);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this.emit('activate', {\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: number): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this.emit('activate', {\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from './Types';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Creates a new CompositionHelper.\n   * @param _textarea The textarea that xterm uses for input.\n   * @param _compositionView The element to display the in-progress composition in.\n   * @param _terminal The Terminal to forward the finished composition to.\n   */\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _compositionView: HTMLElement,\n    private _terminal: ITerminal\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: null, end: null };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._terminal.handler(input);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._terminal.handler(input);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._terminal.handler(diff);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._terminal.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._terminal.charMeasure.height * this._terminal.options.lineHeight);\n      const cursorTop = this._terminal.buffer.y * cellHeight;\n      const cursorLeft = this._terminal.buffer.x * this._terminal.charMeasure.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._terminal.options.fontFamily;\n      this._compositionView.style.fontSize = this._terminal.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n      node = null;\n      handler = null;\n    }\n  };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorSet } from './renderer/Types';\nimport { ITerminal, IViewport } from './Types';\nimport { CharMeasure } from './ui/CharMeasure';\nimport { Disposable } from './common/Lifecycle';\nimport { addDisposableDomListener } from './ui/Lifecycle';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  /**\n   * Creates a new Viewport.\n   * @param _terminal The terminal this viewport belongs to.\n   * @param _viewportElement The DOM element acting as the viewport.\n   * @param _scrollArea The DOM element acting as the scroll area.\n   * @param _charMeasure A DOM element used to measure the character size of. the terminal.\n   */\n  constructor(\n    private _terminal: ITerminal,\n    private _viewportElement: HTMLElement,\n    private _scrollArea: HTMLElement,\n    private _charMeasure: CharMeasure\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the CharMeasure is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChanged(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(): void {\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charMeasure.height > 0) {\n      this._currentRowHeight = this._terminal.renderer.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._terminal.renderer.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._terminal.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._terminal.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._terminal.buffer.lines.length;\n      this._refresh();\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== (<any>this._terminal).renderer.dimensions.canvasHeight) {\n      this._refresh();\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._terminal.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If row height changed\n    if (this._terminal.renderer.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh();\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._terminal.buffer.ydisp;\n    this._terminal.scrollLines(diff, true);\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): void {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += amount;\n    // Prevent the page from scrolling when the terminal scrolls\n    ev.preventDefault();\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._terminal.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._terminal.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): void {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    ev.preventDefault();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISelectionManager } from '../Types';\n\ninterface IWindow extends Window {\n  clipboardData?: {\n    getData(format: string): string;\n    setData(format: string, data: string): void;\n  };\n}\n\ndeclare var window: IWindow;\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, term: ITerminal, selectionManager: ISelectionManager): void {\n  if (term.browser.isMSIE) {\n    window.clipboardData.setData('Text', selectionManager.selectionText);\n  } else {\n    ev.clipboardData.setData('text/plain', selectionManager.selectionText);\n  }\n\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function pasteHandler(ev: ClipboardEvent, term: ITerminal): void {\n  ev.stopPropagation();\n\n  let text: string;\n\n  const dispatchPaste = function(text: string): void {\n    text = prepareTextForTerminal(text);\n    text = bracketTextForPaste(text, term.bracketedPasteMode);\n    term.handler(text);\n    term.textarea.value = '';\n    term.emit('paste', text);\n    term.cancel(ev);\n  };\n\n  if (term.browser.isMSIE) {\n    if (window.clipboardData) {\n      text = window.clipboardData.getData('Text');\n      dispatchPaste(text);\n    }\n  } else {\n    if (ev.clipboardData) {\n      text = ev.clipboardData.getData('text/plain');\n      dispatchPaste(text);\n    }\n  }\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, term: ITerminal): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = term.screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  term.textarea.style.position = 'absolute';\n  term.textarea.style.width = '20px';\n  term.textarea.style.height = '20px';\n  term.textarea.style.left = `${left}px`;\n  term.textarea.style.top = `${top}px`;\n  term.textarea.style.zIndex = '1000';\n\n  term.textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    term.textarea.style.position = null;\n    term.textarea.style.width = null;\n    term.textarea.style.height = null;\n    term.textarea.style.left = null;\n    term.textarea.style.top = null;\n    term.textarea.style.zIndex = null;\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionManager The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, term: ITerminal, selectionManager: ISelectionManager, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, term);\n\n  if (shouldSelectWord && !selectionManager.isClickInSelection(ev)) {\n    selectionManager.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  term.textarea.value = selectionManager.selectionText;\n  term.textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from '../Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from './common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Convert UTF32 codepoint into JS string.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    // UTF32 to UTF16 conversion (see comments in utf32ToString)\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS string are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ParserState, ParserAction, IParsingState, IDcsHandler, IEscapeSequenceParser } from './Types';\nimport { IDisposable } from 'xterm';\nimport { Disposable } from './common/Lifecycle';\nimport { utf32ToString } from './core/input/TextDecoder';\n\ninterface IHandlerCollection<T> {\n  [key: string]: T[];\n}\n\ntype CsiHandler = (params: number[], collect: string) => boolean | void;\ntype OscHandler = (data: string) => boolean | void;\n\n/**\n * Returns an array filled with numbers between the low and high parameters (right exclusive).\n * @param low The low number.\n * @param high The high number.\n */\nfunction r(low: number, high: number): number[] {\n  let c = high - low;\n  const arr = new Array(c);\n  while (c--) {\n    arr[c] = --high;\n  }\n  return arr;\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n * NOTE: data in the underlying table is packed like this:\n *   currentState << 8 | characterCode  -->  action << 4 | nextState\n */\nexport class TransitionTable {\n  public table: Uint8Array | number[];\n\n  constructor(length: number) {\n    this.table = (typeof Uint8Array === 'undefined')\n      ? new Array(length)\n      : new Uint8Array(length);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  add(code: number, state: number, action: number | null, next: number | null): void {\n    this.table[state << 8 | code] = ((action | 0) << 4) | ((next === undefined) ? state : next);\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  addMany(codes: number[], state: number, action: number | null, next: number | null): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.add(codes[i], state, action, next);\n    }\n  }\n}\n\n\n/**\n * Default definitions for the VT500_TRANSITION_TABLE.\n */\nconst PRINTABLES = r(0x20, 0x7f);\nconst EXECUTABLES = r(0x00, 0x18);\nEXECUTABLES.push(0x19);\nEXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n// Pseudo-character placeholder for printable non-ascii characters.\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // table with default transition\n  for (state in states) {\n    // NOTE: table lookup is capped at 0xa0 in parse to keep the table small\n    for (let code = 0; code <= NON_ASCII_PRINTABLE; ++code) {\n      table.add(code, state, ParserAction.ERROR, ParserState.GROUND);\n    }\n  }\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3a), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.add(0x3b, ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3a), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.add(0x3b, ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3a, 0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x3a, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.add(0x3a, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x30, 0x3a), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.add(0x3b, ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3a), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.add(0x3b, ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3a, 0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  return table;\n})();\n\n/**\n * Dummy DCS handler as default fallback.\n */\nclass DcsDummy implements IDcsHandler {\n  hook(collect: string, params: number[], flag: number): void { }\n  put(data: Uint32Array, start: number, end: number): void { }\n  unhook(): void { }\n}\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` contructor argument and\n * reimplement the `parse` method.\n * NOTE: The parameter element notation is currently not supported.\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n\n  // buffers over several parse calls\n  protected _osc: string;\n  protected _params: number[];\n  protected _collect: string;\n\n  // handler lookup containers\n  protected _printHandler: (data: Uint32Array, start: number, end: number) => void;\n  protected _executeHandlers: any;\n  protected _csiHandlers: IHandlerCollection<CsiHandler>;\n  protected _escHandlers: any;\n  protected _oscHandlers: IHandlerCollection<OscHandler>;\n  protected _dcsHandlers: any;\n  protected _activeDcsHandler: IDcsHandler | null;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: (data: Uint32Array, start: number, end: number) => void;\n  protected _executeHandlerFb: (code: number) => void;\n  protected _csiHandlerFb: (collect: string, params: number[], flag: number) => void;\n  protected _escHandlerFb: (collect: string, flag: number) => void;\n  protected _oscHandlerFb: (identifier: number, data: string) => void;\n  protected _dcsHandlerFb: IDcsHandler;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params = [0];\n    this._collect = '';\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (collect: string, params: number[], flag: number): void => { };\n    this._escHandlerFb = (collect: string, flag: number): void => { };\n    this._oscHandlerFb = (identifier: number, data: string): void => { };\n    this._dcsHandlerFb = new DcsDummy();\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscHandlers = Object.create(null);\n    this._dcsHandlers = Object.create(null);\n    this._activeDcsHandler = null;\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler('\\\\', () => {});\n  }\n\n  public dispose(): void {\n    this._printHandlerFb = null;\n    this._executeHandlerFb = null;\n    this._csiHandlerFb = null;\n    this._escHandlerFb = null;\n    this._oscHandlerFb = null;\n    this._dcsHandlerFb = null;\n    this._errorHandlerFb = null;\n    this._printHandler = null;\n    this._executeHandlers = null;\n    this._escHandlers = null;\n    this._csiHandlers = null;\n    this._oscHandlers = null;\n    this._dcsHandlers = null;\n    this._activeDcsHandler = null;\n    this._errorHandler = null;\n  }\n\n  setPrintHandler(callback: (data: Uint32Array, start: number, end: number) => void): void {\n    this._printHandler = callback;\n  }\n  clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  setExecuteHandler(flag: string, callback: () => void): void {\n    this._executeHandlers[flag.charCodeAt(0)] = callback;\n  }\n  clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  setExecuteHandlerFallback(callback: (code: number) => void): void {\n    this._executeHandlerFb = callback;\n  }\n\n  addCsiHandler(flag: string, callback: CsiHandler): IDisposable {\n    const index = flag.charCodeAt(0);\n    if (this._csiHandlers[index] === undefined) {\n      this._csiHandlers[index] = [];\n    }\n    const handlerList = this._csiHandlers[index];\n    handlerList.push(callback);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(callback);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  setCsiHandler(flag: string, callback: (params: number[], collect: string) => void): void {\n    this._csiHandlers[flag.charCodeAt(0)] = [callback];\n  }\n  clearCsiHandler(flag: string): void {\n    if (this._csiHandlers[flag.charCodeAt(0)]) delete this._csiHandlers[flag.charCodeAt(0)];\n  }\n  setCsiHandlerFallback(callback: (collect: string, params: number[], flag: number) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  setEscHandler(collectAndFlag: string, callback: () => void): void {\n    this._escHandlers[collectAndFlag] = callback;\n  }\n  clearEscHandler(collectAndFlag: string): void {\n    if (this._escHandlers[collectAndFlag]) delete this._escHandlers[collectAndFlag];\n  }\n  setEscHandlerFallback(callback: (collect: string, flag: number) => void): void {\n    this._escHandlerFb = callback;\n  }\n\n  addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    if (this._oscHandlers[ident] === undefined) {\n      this._oscHandlers[ident] = [];\n    }\n    const handlerList =  this._oscHandlers[ident];\n    handlerList.push(callback);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(callback);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  setOscHandler(ident: number, callback: (data: string) => void): void {\n    this._oscHandlers[ident] = [callback];\n  }\n  clearOscHandler(ident: number): void {\n    if (this._oscHandlers[ident]) delete this._oscHandlers[ident];\n  }\n  setOscHandlerFallback(callback: (identifier: number, data: string) => void): void {\n    this._oscHandlerFb = callback;\n  }\n\n  setDcsHandler(collectAndFlag: string, handler: IDcsHandler): void {\n    this._dcsHandlers[collectAndFlag] = handler;\n  }\n  clearDcsHandler(collectAndFlag: string): void {\n    if (this._dcsHandlers[collectAndFlag]) delete this._dcsHandlers[collectAndFlag];\n  }\n  setDcsHandlerFallback(handler: IDcsHandler): void {\n    this._dcsHandlerFb = handler;\n  }\n\n  setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  reset(): void {\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params = [0];\n    this._collect = '';\n    this._activeDcsHandler = null;\n  }\n\n  parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let error = false;\n    let currentState = this.currentState;\n    let print = -1;\n    let dcs = -1;\n    let osc = this._osc;\n    let collect = this._collect;\n    let params = this._params;\n    const table: Uint8Array | number[] = this.TRANSITIONS.table;\n    let dcsHandler: IDcsHandler | null = this._activeDcsHandler;\n    let callback: Function | null = null;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // shortcut for most chars (print action)\n      if (currentState === ParserState.GROUND && code > 0x1f && code < 0x80) {\n        print = (~print) ? print : i;\n        do i++;\n        while (i < length && data[i] > 0x1f && data[i] < 0x80);\n        i--;\n        continue;\n      }\n\n      // shortcut for CSI params\n      if (currentState === ParserState.CSI_PARAM && (code > 0x2f && code < 0x39)) {\n        params[params.length - 1] = params[params.length - 1] * 10 + code - 48;\n        continue;\n      }\n\n      // normal transition & action lookup\n      transition = table[currentState << 8 | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> 4) {\n        case ParserAction.PRINT:\n          print = (~print) ? print : i;\n          break;\n        case ParserAction.EXECUTE:\n          if (~print) {\n            this._printHandler(data, print, i);\n            print = -1;\n          }\n          callback = this._executeHandlers[code];\n          if (callback) callback();\n          else this._executeHandlerFb(code);\n          break;\n        case ParserAction.IGNORE:\n          // handle leftover print or dcs chars\n          if (~print) {\n            this._printHandler(data, print, i);\n            print = -1;\n          } else if (~dcs) {\n            dcsHandler.put(data, dcs, i);\n            dcs = -1;\n          }\n          break;\n        case ParserAction.ERROR:\n          // chars higher than 0x9f are handled by this action\n          // to keep the transition table small\n          if (code > 0x9f) {\n            switch (currentState) {\n              case ParserState.GROUND:\n                print = (~print) ? print : i;\n                break;\n              case ParserState.CSI_IGNORE:\n                transition |= ParserState.CSI_IGNORE;\n                break;\n              case ParserState.DCS_IGNORE:\n                transition |= ParserState.DCS_IGNORE;\n                break;\n              case ParserState.DCS_PASSTHROUGH:\n                dcs = (~dcs) ? dcs : i;\n                transition |= ParserState.DCS_PASSTHROUGH;\n                break;\n              default:\n                error = true;\n            }\n          } else {\n            error = true;\n          }\n          // if we end up here a real error happened\n          if (error) {\n            const inject: IParsingState = this._errorHandler(\n              {\n                position: i,\n                code,\n                currentState,\n                print,\n                dcs,\n                osc,\n                collect,\n                params,\n                abort: false\n              });\n            if (inject.abort) return;\n          // TODO: inject return values\n            error = false;\n          }\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            if (handlers[j](params, collect)) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect, params, code);\n          }\n          break;\n        case ParserAction.PARAM:\n          if (code === 0x3b) params.push(0);\n          else params[params.length - 1] = params[params.length - 1] * 10 + code - 48;\n          break;\n        case ParserAction.COLLECT:\n          collect += String.fromCharCode(code);\n          break;\n        case ParserAction.ESC_DISPATCH:\n          callback = this._escHandlers[collect + String.fromCharCode(code)];\n          if (callback) callback(collect, code);\n          else this._escHandlerFb(collect, code);\n          break;\n        case ParserAction.CLEAR:\n          if (~print) {\n            this._printHandler(data, print, i);\n            print = -1;\n          }\n          osc = '';\n          params = [0];\n          collect = '';\n          dcs = -1;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcsHandler = this._dcsHandlers[collect + String.fromCharCode(code)];\n          if (!dcsHandler) dcsHandler = this._dcsHandlerFb;\n          dcsHandler.hook(collect, params, code);\n          break;\n        case ParserAction.DCS_PUT:\n          dcs = (~dcs) ? dcs : i;\n          break;\n        case ParserAction.DCS_UNHOOK:\n          if (dcsHandler) {\n            if (~dcs) dcsHandler.put(data, dcs, i);\n            dcsHandler.unhook();\n            dcsHandler = null;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params = [0];\n          collect = '';\n          dcs = -1;\n          break;\n        case ParserAction.OSC_START:\n          if (~print) {\n            this._printHandler(data, print, i);\n            print = -1;\n          }\n          osc = '';\n          break;\n        case ParserAction.OSC_PUT:\n          for (let j = i + 1; ; j++) {\n            if (j >= length\n                || (code = data[j]) < 0x20\n                || (code > 0x7f && code <= 0x9f)) {\n              osc += utf32ToString(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          if (osc && code !== 0x18 && code !== 0x1a) {\n            // NOTE: OSC subparsing is not part of the original parser\n            // we do basic identifier parsing here to offer a jump table for OSC as well\n            const idx = osc.indexOf(';');\n            if (idx === -1) {\n              this._oscHandlerFb(-1, osc);  // this is an error (malformed OSC)\n            } else {\n              // Note: NaN is not handled here\n              // either catch it with the fallback handler\n              // or with an explicit NaN OSC handler\n              const identifier = parseInt(osc.substring(0, idx));\n              const content = osc.substring(idx + 1);\n              // Trigger OSC Handler\n              const handlers = this._oscHandlers[identifier];\n              let j = handlers ? handlers.length - 1 : -1;\n              for (; j >= 0; j--) {\n                if (handlers[j](content)) {\n                  break;\n                }\n              }\n              if (j < 0) {\n                this._oscHandlerFb(identifier, content);\n              }\n            }\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params = [0];\n          collect = '';\n          dcs = -1;\n          break;\n      }\n      currentState = transition & 15;\n    }\n\n    // push leftover pushable buffers to terminal\n    if (currentState === ParserState.GROUND && ~print) {\n      this._printHandler(data, print, length);\n    } else if (currentState === ParserState.DCS_PASSTHROUGH && ~dcs && dcsHandler) {\n      dcsHandler.put(data, dcs, length);\n    }\n\n    // save non pushable buffers\n    this._osc = osc;\n    this._collect = collect;\n    this._params = params;\n\n    // save active dcs handler reference\n    this._activeDcsHandler = dcsHandler;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IDcsHandler, IEscapeSequenceParser, IBuffer, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from './common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from './core/data/Charsets';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CODE_INDEX, DEFAULT_ATTR, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE } from './Buffer';\nimport { FLAGS } from './renderer/Types';\nimport { wcwidth } from './CharWidth';\nimport { EscapeSequenceParser } from './EscapeSequenceParser';\nimport { ICharset } from './core/Types';\nimport { IDisposable } from 'xterm';\nimport { Disposable } from './common/Lifecycle';\nimport { concat } from './common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString } from './core/input/TextDecoder';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(private _terminal: any) { }\n\n  hook(collect: string, params: number[], flag: number): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(): void {\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._terminal.handler(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._terminal.handler(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._terminal.buffer.scrollTop + 1) +\n                ';' + (this._terminal.buffer.scrollBottom + 1) + 'r';\n        return this._terminal.handler(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._terminal.handler(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._terminal.getOption('cursorStyle')];\n        style -= this._terminal.getOption('cursorBlink');\n        return this._terminal.handler(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._terminal.error('Unknown DCS $q %s', data);\n        this._terminal.handler(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n\n  constructor(\n      protected _terminal: IInputHandlingTerminal,\n      private _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((collect: string, params: number[], flag: number) => {\n      this._terminal.error('Unknown CSI code: ', { collect, params, flag: String.fromCharCode(flag) });\n    });\n    this._parser.setEscHandlerFallback((collect: string, flag: number) => {\n      this._terminal.error('Unknown ESC code: ', { collect, flag: String.fromCharCode(flag) });\n    });\n    this._parser.setExecuteHandlerFallback((code: number) => {\n      this._terminal.error('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier: number, data: string) => {\n      this._terminal.error('Unknown OSC code: ', { identifier, data });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end): void => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler('@', (params, collect) => this.insertChars(params));\n    this._parser.setCsiHandler('A', (params, collect) => this.cursorUp(params));\n    this._parser.setCsiHandler('B', (params, collect) => this.cursorDown(params));\n    this._parser.setCsiHandler('C', (params, collect) => this.cursorForward(params));\n    this._parser.setCsiHandler('D', (params, collect) => this.cursorBackward(params));\n    this._parser.setCsiHandler('E', (params, collect) => this.cursorNextLine(params));\n    this._parser.setCsiHandler('F', (params, collect) => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler('G', (params, collect) => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler('H', (params, collect) => this.cursorPosition(params));\n    this._parser.setCsiHandler('I', (params, collect) => this.cursorForwardTab(params));\n    this._parser.setCsiHandler('J', (params, collect) => this.eraseInDisplay(params));\n    this._parser.setCsiHandler('K', (params, collect) => this.eraseInLine(params));\n    this._parser.setCsiHandler('L', (params, collect) => this.insertLines(params));\n    this._parser.setCsiHandler('M', (params, collect) => this.deleteLines(params));\n    this._parser.setCsiHandler('P', (params, collect) => this.deleteChars(params));\n    this._parser.setCsiHandler('S', (params, collect) => this.scrollUp(params));\n    this._parser.setCsiHandler('T', (params, collect) => this.scrollDown(params, collect));\n    this._parser.setCsiHandler('X', (params, collect) => this.eraseChars(params));\n    this._parser.setCsiHandler('Z', (params, collect) => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler('`', (params, collect) => this.charPosAbsolute(params));\n    this._parser.setCsiHandler('a', (params, collect) => this.hPositionRelative(params));\n    this._parser.setCsiHandler('b', (params, collect) => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler('c', (params, collect) => this.sendDeviceAttributes(params, collect));\n    this._parser.setCsiHandler('d', (params, collect) => this.linePosAbsolute(params));\n    this._parser.setCsiHandler('e', (params, collect) => this.vPositionRelative(params));\n    this._parser.setCsiHandler('f', (params, collect) => this.hVPosition(params));\n    this._parser.setCsiHandler('g', (params, collect) => this.tabClear(params));\n    this._parser.setCsiHandler('h', (params, collect) => this.setMode(params, collect));\n    this._parser.setCsiHandler('l', (params, collect) => this.resetMode(params, collect));\n    this._parser.setCsiHandler('m', (params, collect) => this.charAttributes(params));\n    this._parser.setCsiHandler('n', (params, collect) => this.deviceStatus(params, collect));\n    this._parser.setCsiHandler('p', (params, collect) => this.softReset(params, collect));\n    this._parser.setCsiHandler('q', (params, collect) => this.setCursorStyle(params, collect));\n    this._parser.setCsiHandler('r', (params, collect) => this.setScrollRegion(params, collect));\n    this._parser.setCsiHandler('s', (params, collect) => this.saveCursor(params));\n    this._parser.setCsiHandler('u', (params, collect) => this.restoreCursor(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    // some C1 control codes - FIXME: should those be enabled by default?\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, (data) => this.setTitle(data));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, (data) => this.setTitle(data));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler('7', () => this.saveCursor([]));\n    this._parser.setEscHandler('8', () => this.restoreCursor([]));\n    this._parser.setEscHandler('D', () => this.index());\n    this._parser.setEscHandler('E', () => this.nextLine());\n    this._parser.setEscHandler('H', () => this.tabSet());\n    this._parser.setEscHandler('M', () => this.reverseIndex());\n    this._parser.setEscHandler('=', () => this.keypadApplicationMode());\n    this._parser.setEscHandler('>', () => this.keypadNumericMode());\n    this._parser.setEscHandler('c', () => this.reset());\n    this._parser.setEscHandler('n', () => this.setgLevel(2));\n    this._parser.setEscHandler('o', () => this.setgLevel(3));\n    this._parser.setEscHandler('|', () => this.setgLevel(3));\n    this._parser.setEscHandler('}', () => this.setgLevel(2));\n    this._parser.setEscHandler('~', () => this.setgLevel(1));\n    this._parser.setEscHandler('%@', () => this.selectDefaultCharset());\n    this._parser.setEscHandler('%G', () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler('(' + flag, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler(')' + flag, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler('*' + flag, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler('+' + flag, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler('-' + flag, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler('.' + flag, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler('/' + flag, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state) => {\n      this._terminal.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler('$q', new DECRQSS(this._terminal));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal = null;\n  }\n\n  public parse(data: string): void {\n    // Ensure the terminal is not disposed\n    if (!this._terminal) {\n      return;\n    }\n\n    let buffer = this._terminal.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    // TODO: Consolidate debug/logging #1560\n    if ((<any>this._terminal).debug) {\n      this._terminal.log('data: ' + data);\n    }\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    for (let i = 0; i < data.length; ++i) {\n      this._parseBuffer[i] = data.charCodeAt(i);\n    }\n    this._parser.parse(this._parseBuffer, this._stringDecoder.decode(data, this._parseBuffer));\n\n    buffer = this._terminal.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._terminal.emit('cursormove');\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let char: string;\n    let chWidth: number;\n    const buffer: IBuffer = this._terminal.buffer;\n    const charset: ICharset = this._terminal.charset;\n    const screenReaderMode: boolean = this._terminal.options.screenReaderMode;\n    const cols: number = this._terminal.cols;\n    const wraparoundMode: boolean = this._terminal.wraparoundMode;\n    const insertMode: boolean = this._terminal.insertMode;\n    const curAttr: number = this._terminal.curAttr;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._terminal.updateRange(buffer.y);\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n      char = stringFromCodePoint(code);\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset are only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[char];\n        if (ch) {\n          code = ch.charCodeAt(0);\n          char = ch;\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.emit('a11y.char', char);\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        const chMinusOne = bufferRow.get(buffer.x - 1);\n        if (chMinusOne) {\n          if (!chMinusOne[CHAR_DATA_WIDTH_INDEX]) {\n            // found empty cell after fullwidth, need to go 2 cells back\n            // it is save to step 2 cells back here\n            // since an empty cell is only set by fullwidth chars\n            const chMinusTwo = bufferRow.get(buffer.x - 2);\n            if (chMinusTwo) {\n              chMinusTwo[CHAR_DATA_CHAR_INDEX] += char;\n              chMinusTwo[CHAR_DATA_CODE_INDEX] = code;\n              bufferRow.set(buffer.x - 2, chMinusTwo); // must be set explicitly now\n            }\n          } else {\n            chMinusOne[CHAR_DATA_CHAR_INDEX] += char;\n            chMinusOne[CHAR_DATA_CODE_INDEX] = code;\n            bufferRow.set(buffer.x - 1, chMinusOne); // must be set explicitly now\n          }\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y > buffer.scrollBottom) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n          // FIXME: Do we have to set buffer.x to cols - 1, if not wrapping?\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, [curAttr, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to eraseChar\n        const lastCell = bufferRow.get(cols - 1);\n        if (lastCell[CHAR_DATA_WIDTH_INDEX] === 2) {\n          bufferRow.set(cols - 1, [curAttr, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.set(buffer.x++, [curAttr, char, chWidth, code]);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          bufferRow.set(buffer.x++, [curAttr, '', 0, undefined]);\n        }\n      }\n    }\n    this._terminal.updateRange(buffer.y);\n  }\n\n  addCsiHandler(flag: string, callback: (params: number[], collect: string) => boolean): IDisposable {\n    return this._parser.addCsiHandler(flag, callback);\n  }\n  addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, callback);\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    if (this._terminal.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y > buffer.scrollBottom) {\n      buffer.y--;\n      this._terminal.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._terminal.cols) {\n      buffer.x--;\n    }\n    /**\n     * This event is emitted whenever the terminal outputs a LF or NL.\n     *\n     * @event linefeed\n     */\n    this._terminal.emit('linefeed');\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._terminal.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    if (this._terminal.buffer.x > 0) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    const originalX = this._terminal.buffer.x;\n    this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    if (this._terminal.options.screenReaderMode) {\n      this._terminal.emit('a11y.tab', this._terminal.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).insertCells(\n      this._terminal.buffer.x,\n      params[0] || 1,\n      [this._terminal.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y -= param;\n    if (this._terminal.buffer.y < 0) {\n      this._terminal.buffer.y = 0;\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x += param;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n    this._terminal.buffer.x -= param;\n    if (this._terminal.buffer.x < 0) {\n      this._terminal.buffer.x = 0;\n    }\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * same as CSI Ps B ?\n   */\n  public cursorNextLine(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    this._terminal.buffer.x = 0;\n  }\n\n\n  /**\n   * CSI Ps F\n   * Cursor Preceding Line Ps Times (default = 1) (CNL).\n   * reuse CSI Ps A ?\n   */\n  public cursorPrecedingLine(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y -= param;\n    if (this._terminal.buffer.y < 0) {\n      this._terminal.buffer.y = 0;\n    }\n    this._terminal.buffer.x = 0;\n  }\n\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x = param - 1;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: number[]): void {\n    let col: number;\n    let row: number = params[0] - 1;\n\n    if (params.length >= 2) {\n      col = params[1] - 1;\n    } else {\n      col = 0;\n    }\n\n    if (row < 0) {\n      row = 0;\n    } else if (row >= this._terminal.rows) {\n      row = this._terminal.rows - 1;\n    }\n\n    if (col < 0) {\n      col = 0;\n    } else if (col >= this._terminal.cols) {\n      col = this._terminal.cols - 1;\n    }\n\n    this._terminal.buffer.x = col;\n    this._terminal.buffer.y = row;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: number[]): void {\n    let param = params[0] || 1;\n    while (param--) {\n      this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    }\n  }\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._terminal.buffer.lines.get(this._terminal.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      [this._terminal.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    this._eraseInBufferLine(y, 0, this._terminal.cols, true);\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: number[]): void {\n    let j;\n    switch (params[0]) {\n      case 0:\n        j = this._terminal.buffer.y;\n        this._terminal.updateRange(j);\n        this._eraseInBufferLine(j++, this._terminal.buffer.x, this._terminal.cols, this._terminal.buffer.x === 0);\n        for (; j < this._terminal.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(j);\n        break;\n      case 1:\n        j = this._terminal.buffer.y;\n        this._terminal.updateRange(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._terminal.buffer.x + 1, true);\n        if (this._terminal.buffer.x + 1 >= this._terminal.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._terminal.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(0);\n        break;\n      case 2:\n        j = this._terminal.rows;\n        this._terminal.updateRange(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._terminal.buffer.lines.length - this._terminal.rows;\n        if (scrollBackSize > 0) {\n          this._terminal.buffer.lines.trimStart(scrollBackSize);\n          this._terminal.buffer.ybase = Math.max(this._terminal.buffer.ybase - scrollBackSize, 0);\n          this._terminal.buffer.ydisp = Math.max(this._terminal.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._terminal.emit('scroll', 0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: number[]): void {\n    switch (params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._terminal.buffer.y, this._terminal.buffer.x, this._terminal.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._terminal.buffer.y, 0, this._terminal.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._terminal.buffer.y, 0, this._terminal.cols);\n        break;\n    }\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: number[]): void {\n    let param: number = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._terminal.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._terminal.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._terminal.eraseAttr()));\n    }\n\n    // this.maxRange();\n    this._terminal.updateRange(buffer.y);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._terminal.rows - 1 - buffer.scrollBottom;\n    j = this._terminal.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._terminal.eraseAttr()));\n    }\n\n    // this.maxRange();\n    this._terminal.updateRange(buffer.y);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).deleteCells(\n      this._terminal.buffer.x,\n      params[0] || 1,\n      [this._terminal.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: number[]): void {\n    let param = params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(DEFAULT_ATTR));\n    }\n    // this.maxRange();\n    this._terminal.updateRange(buffer.scrollTop);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: number[], collect?: string): void {\n    if (params.length < 2 && !collect) {\n      let param = params[0] || 1;\n\n      // make buffer local for faster access\n      const buffer = this._terminal.buffer;\n\n      while (param--) {\n        buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n        buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(DEFAULT_ATTR));\n      }\n      // this.maxRange();\n      this._terminal.updateRange(buffer.scrollTop);\n      this._terminal.updateRange(buffer.scrollBottom);\n    }\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).replaceCells(\n      this._terminal.buffer.x,\n      this._terminal.buffer.x + (params[0] || 1),\n      [this._terminal.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: number[]): void {\n    let param = params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   */\n  public charPosAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x = param - 1;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * reuse CSI Ps C ?\n   */\n  public hPositionRelative(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x += param;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   */\n  public repeatPrecedingCharacter(params: number[]): void {\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n    const line = buffer.lines.get(buffer.ybase + buffer.y);\n    line.replaceCells(buffer.x,\n      buffer.x + (params[0] || 1),\n      line.get(buffer.x - 1) || [DEFAULT_ATTR, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n    // FIXME: no updateRange here?\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributes(params: number[], collect?: string): void {\n    if (params[0] > 0) {\n      return;\n    }\n\n    if (!collect) {\n      if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n        this._terminal.handler(C0.ESC + '[?1;2c');\n      } else if (this._terminal.is('linux')) {\n        this._terminal.handler(C0.ESC + '[?6c');\n      }\n    } else if (collect === '>') {\n      // xterm and urxvt\n      // seem to spit this\n      // out around ~370 times (?).\n      if (this._terminal.is('xterm')) {\n        this._terminal.handler(C0.ESC + '[>0;276;0c');\n      } else if (this._terminal.is('rxvt-unicode')) {\n        this._terminal.handler(C0.ESC + '[>85;95;0c');\n      } else if (this._terminal.is('linux')) {\n        // not supported by linux console.\n        // linux console echoes parameters.\n        this._terminal.handler(params[0] + 'c');\n      } else if (this._terminal.is('screen')) {\n        this._terminal.handler(C0.ESC + '[>83;40003;0c');\n      }\n    }\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y = param - 1;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   */\n  public hVPosition(params: number[]): void {\n    if (params[0] < 1) params[0] = 1;\n    if (params[1] < 1) params[1] = 1;\n\n    this._terminal.buffer.y = params[0] - 1;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n\n    this._terminal.buffer.x = params[1] - 1;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: number[]): void {\n    const param = params[0];\n    if (param <= 0) {\n      delete this._terminal.buffer.tabs[this._terminal.buffer.x];\n    } else if (param === 3) {\n      this._terminal.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: number[], collect?: string): void {\n    if (params.length > 1) {\n      for (let i = 0; i < params.length; i++) {\n        this.setMode([params[i]]);\n      }\n\n      return;\n    }\n\n    if (!collect) {\n      switch (params[0]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (params[0]) {\n        case 1:\n          this._terminal.applicationCursor = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          this._terminal.savedCols = this._terminal.cols;\n          this._terminal.resize(132, this._terminal.rows);\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._terminal.log('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n        case 1000: // vt200 mouse\n          // no motion.\n          // no modifiers, except control on the wheel.\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n\n          // TODO: Why are params[0] compares nested within a switch for params[0]?\n\n          this._terminal.x10Mouse = params[0] === 9;\n          this._terminal.vt200Mouse = params[0] === 1000;\n          this._terminal.normalMouse = params[0] > 1000;\n          this._terminal.mouseEvents = true;\n          if (this._terminal.element) {\n            this._terminal.element.classList.add('enable-mouse-events');\n          }\n          if (this._terminal.selectionManager) {\n            this._terminal.selectionManager.disable();\n          }\n          this._terminal.log('Binding to mouse events.');\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = true;\n          // for wide terminals\n          // simply encodes large values as utf8 characters\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = true;\n          // for wide terminals\n          // does not add 32 to fields\n          // press: ^[[<b;x;yM\n          // release: ^[[<b;x;ym\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = true;\n          // for wide terminals\n          // numbers for fields\n          // press: ^[[b;x;yM\n          // motion: ^[[b;x;yT\n          break;\n        case 25: // show cursor\n          this._terminal.cursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor(params);\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor(params);\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._terminal.buffers.activateAltBuffer(this._terminal.eraseAttr());\n          this._terminal.refresh(0, this._terminal.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: number[], collect?: string): void {\n    if (params.length > 1) {\n      for (let i = 0; i < params.length; i++) {\n        this.resetMode([params[i]]);\n      }\n\n      return;\n    }\n\n    if (!collect) {\n      switch (params[0]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (params[0]) {\n        case 1:\n          this._terminal.applicationCursor = false;\n          break;\n        case 3:\n          if (this._terminal.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._terminal.rows);\n          }\n          delete this._terminal.savedCols;\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._terminal.log('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._terminal.x10Mouse = false;\n          this._terminal.vt200Mouse = false;\n          this._terminal.normalMouse = false;\n          this._terminal.mouseEvents = false;\n          if (this._terminal.element) {\n            this._terminal.element.classList.remove('enable-mouse-events');\n          }\n          if (this._terminal.selectionManager) {\n            this._terminal.selectionManager.enable();\n          }\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = false;\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = false;\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = false;\n          break;\n        case 25: // hide cursor\n          this._terminal.cursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor(params);\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._terminal.buffers.activateNormalBuffer();\n          if (params[0] === 1049) {\n            this.restoreCursor(params);\n          }\n          this._terminal.refresh(0, this._terminal.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: number[]): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params[0] === 0) {\n      this._terminal.curAttr = DEFAULT_ATTR;\n      return;\n    }\n\n    const l = params.length;\n    let flags = this._terminal.curAttr >> 18;\n    let fg = (this._terminal.curAttr >> 9) & 0x1ff;\n    let bg = this._terminal.curAttr & 0x1ff;\n    let p;\n\n    for (let i = 0; i < l; i++) {\n      p = params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        fg = p - 30;\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        bg = p - 40;\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        p += 8;\n        fg = p - 90;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        p += 8;\n        bg = p - 100;\n      } else if (p === 0) {\n        // default\n        flags = DEFAULT_ATTR >> 18;\n        fg = (DEFAULT_ATTR >> 9) & 0x1ff;\n        bg = DEFAULT_ATTR & 0x1ff;\n        // flags = 0;\n        // fg = 0x1ff;\n        // bg = 0x1ff;\n      } else if (p === 1) {\n        // bold text\n        flags |= FLAGS.BOLD;\n      } else if (p === 3) {\n        // italic text\n        flags |= FLAGS.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        flags |= FLAGS.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        flags |= FLAGS.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        flags |= FLAGS.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        flags |= FLAGS.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        flags |= FLAGS.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        flags &= ~FLAGS.BOLD;\n        flags &= ~FLAGS.DIM;\n      } else if (p === 23) {\n        // not italic\n        flags &= ~FLAGS.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        flags &= ~FLAGS.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        flags &= ~FLAGS.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        flags &= ~FLAGS.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        flags &= ~FLAGS.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        fg = (DEFAULT_ATTR >> 9) & 0x1ff;\n      } else if (p === 49) {\n        // reset bg\n        bg = DEFAULT_ATTR & 0x1ff;\n      } else if (p === 38) {\n        // fg color 256\n        if (params[i + 1] === 2) {\n          i += 2;\n          fg = this._terminal.matchColor(\n            params[i] & 0xff,\n            params[i + 1] & 0xff,\n            params[i + 2] & 0xff);\n          if (fg === -1) fg = 0x1ff;\n          i += 2;\n        } else if (params[i + 1] === 5) {\n          i += 2;\n          p = params[i] & 0xff;\n          fg = p;\n        }\n      } else if (p === 48) {\n        // bg color 256\n        if (params[i + 1] === 2) {\n          i += 2;\n          bg = this._terminal.matchColor(\n            params[i] & 0xff,\n            params[i + 1] & 0xff,\n            params[i + 2] & 0xff);\n          if (bg === -1) bg = 0x1ff;\n          i += 2;\n        } else if (params[i + 1] === 5) {\n          i += 2;\n          p = params[i] & 0xff;\n          bg = p;\n        }\n      } else if (p === 100) {\n        // reset fg/bg\n        fg = (DEFAULT_ATTR >> 9) & 0x1ff;\n        bg = DEFAULT_ATTR & 0x1ff;\n      } else {\n        this._terminal.error('Unknown SGR attribute: %d.', p);\n      }\n    }\n\n    this._terminal.curAttr = (flags << 18) | (fg << 9) | bg;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: number[], collect?: string): void {\n    if (!collect) {\n      switch (params[0]) {\n        case 5:\n          // status report\n          this._terminal.emit('data', `${C0.ESC}[0n`);\n          break;\n        case 6:\n          // cursor position\n          const y = this._terminal.buffer.y + 1;\n          const x = this._terminal.buffer.x + 1;\n          this._terminal.emit('data', `${C0.ESC}[${y};${x}R`);\n          break;\n      }\n    } else if (collect === '?') {\n      // modern xterm doesnt seem to\n      // respond to any of these except ?6, 6, and 5\n      switch (params[0]) {\n        case 6:\n          // cursor position\n          const y = this._terminal.buffer.y + 1;\n          const x = this._terminal.buffer.x + 1;\n          this._terminal.emit('data', `${C0.ESC}[?${y};${x}R`);\n          break;\n        case 15:\n          // no printer\n          // this.handler(C0.ESC + '[?11n');\n          break;\n        case 25:\n          // dont support user defined keys\n          // this.handler(C0.ESC + '[?21n');\n          break;\n        case 26:\n          // north american keyboard\n          // this.handler(C0.ESC + '[?27;1;0;0n');\n          break;\n        case 53:\n          // no dec locator/mouse\n          // this.handler(C0.ESC + '[?50n');\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: number[], collect?: string): void {\n    if (collect === '!') {\n      this._terminal.cursorHidden = false;\n      this._terminal.insertMode = false;\n      this._terminal.originMode = false;\n      this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n      this._terminal.applicationKeypad = false; // ?\n      if (this._terminal.viewport) {\n        this._terminal.viewport.syncScrollArea();\n      }\n      this._terminal.applicationCursor = false;\n      this._terminal.buffer.scrollTop = 0;\n      this._terminal.buffer.scrollBottom = this._terminal.rows - 1;\n      this._terminal.curAttr = DEFAULT_ATTR;\n      this._terminal.buffer.x = this._terminal.buffer.y = 0; // ?\n      this._terminal.charset = null;\n      this._terminal.glevel = 0; // ??\n      this._terminal.charsets = [null]; // ??\n    }\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params?: number[], collect?: string): void {\n    if (collect === ' ') {\n      const param = params[0] < 1 ? 1 : params[0];\n      switch (param) {\n        case 1:\n        case 2:\n          this._terminal.setOption('cursorStyle', 'block');\n          break;\n        case 3:\n        case 4:\n          this._terminal.setOption('cursorStyle', 'underline');\n          break;\n        case 5:\n        case 6:\n          this._terminal.setOption('cursorStyle', 'bar');\n          break;\n      }\n      const isBlinking = param % 2 === 1;\n      this._terminal.setOption('cursorBlink', isBlinking);\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   * CSI ? Pm r\n   */\n  public setScrollRegion(params: number[], collect?: string): void {\n    if (collect) return;\n    this._terminal.buffer.scrollTop = (params[0] || 1) - 1;\n    this._terminal.buffer.scrollBottom = (params[1] && params[1] <= this._terminal.rows ? params[1] : this._terminal.rows) - 1;\n    this._terminal.buffer.x = 0;\n    this._terminal.buffer.y = 0;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params: number[]): void {\n    this._terminal.buffer.savedX = this._terminal.buffer.x;\n    this._terminal.buffer.savedY = this._terminal.buffer.y;\n    this._terminal.buffer.savedCurAttr = this._terminal.curAttr;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params: number[]): void {\n    this._terminal.buffer.x = this._terminal.buffer.savedX || 0;\n    this._terminal.buffer.y = this._terminal.buffer.savedY || 0;\n    this._terminal.curAttr = this._terminal.buffer.savedCurAttr || DEFAULT_ATTR;\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._terminal.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._terminal.log('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._terminal.log('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) return this.selectDefaultCharset();\n    if (collectAndFlag[0] === '/') return;  // TODO: Is this supported?\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._terminal.index();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._terminal.tabSet();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._terminal.reverseIndex();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: T[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(null);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = null;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../../Types';\nimport { IColorSet } from '../Types';\nimport { DEFAULT_COLOR, ICharAtlasConfig } from './Types';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, terminal: ITerminal, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: null,\n    cursorAccent: null,\n    selection: null,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    type: terminal.options.experimentalCharAtlas,\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.options.fontFamily,\n    fontSize: terminal.options.fontSize,\n    fontWeight: terminal.options.fontWeight,\n    fontWeightBold: terminal.options.fontWeightBold,\n    allowTransparency: terminal.options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.type === b.type &&\n      a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from './Types';\nimport { IDisposable } from 'xterm';\n\nexport default abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet } from './Types';\nimport { ITheme } from 'xterm';\n\nconst DEFAULT_FOREGROUND = fromHex('#ffffff');\nconst DEFAULT_BACKGROUND = fromHex('#000000');\nconst DEFAULT_CURSOR = fromHex('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromHex('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF77\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromHex('#2e3436'),\n    fromHex('#cc0000'),\n    fromHex('#4e9a06'),\n    fromHex('#c4a000'),\n    fromHex('#3465a4'),\n    fromHex('#75507b'),\n    fromHex('#06989a'),\n    fromHex('#d3d7cf'),\n    // bright:\n    fromHex('#555753'),\n    fromHex('#ef2929'),\n    fromHex('#8ae234'),\n    fromHex('#fce94f'),\n    fromHex('#729fcf'),\n    fromHex('#ad7fa8'),\n    fromHex('#34e2e2'),\n    fromHex('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`,\n      // Use >>> 0 to force a conversion to an unsigned int\n      rgba: ((r << 24) | (g << 16) | (b << 8) | 0xFF) >>> 0\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    const ch = toPaddedHex(c);\n    colors.push({\n      css: `#${ch}${ch}${ch}`,\n      rgba: ((c << 24) | (c << 16) | (c << 8) | 0xFF) >>> 0\n    });\n  }\n\n  return colors;\n})();\n\nfunction fromHex(css: string): IColor {\n  return {\n    css,\n    rgba: parseInt(css.slice(1), 16) << 8 | 0xFF\n  };\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    this._ctx = canvas.getContext('2d');\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      ansi: DEFAULT_ANSI_COLORS.slice()\n    };\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n  }\n\n  private _parseColor(\n    css: string,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (!css) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    if (!allowTransparency && data[3] !== 0xFF) {\n      // Ideally we'd just ignore the alpha channel, but...\n      //\n      // Browsers may not give back exactly the same RGB values we put in, because most/all\n      // convert the color to a pre-multiplied representation. getImageData converts that back to\n      // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n      // on their own.\n      //\n      // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n      // into 0x00000000.\n      //\n      // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n      // pixels that have just been set using putImageData() might be returned to an equivalent\n      // getImageData() as different values.\"\n      // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n      //\n      // So let's just use the fallback color in this case instead.\n      console.warn(\n        `Color: ${css} is using transparency, but allowTransparency is false. ` +\n        `Using fallback ${fallback.css}.`\n      );\n      return fallback;\n    }\n\n    return {\n      css,\n      rgba: (data[0] << 24 | data[1] << 16 | data[2] << 8 | data[3]) >>> 0\n    };\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport const isMSIE = !!~userAgent.indexOf('MSIE') || !!~userAgent.indexOf('Trident');\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isMSWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { FontWeight } from 'xterm';\nimport { isFirefox, isSafari } from '../../core/Platform';\nimport { IColor } from '../Types';\nimport { ICharAtlasConfig, CHAR_ATLAS_CELL_SPACING } from './Types';\n\n/**\n * Generates a char atlas.\n * @param context The window or worker context.\n * @param canvasFactory A function to generate a canvas with a width or height.\n * @param config The config for the new char atlas.\n */\nexport function generateStaticCharAtlasTexture(context: Window, canvasFactory: (width: number, height: number) => HTMLCanvasElement, config: ICharAtlasConfig): HTMLCanvasElement | Promise<ImageBitmap> {\n  const cellWidth = config.scaledCharWidth + CHAR_ATLAS_CELL_SPACING;\n  const cellHeight = config.scaledCharHeight + CHAR_ATLAS_CELL_SPACING;\n  const canvas = canvasFactory(\n    /*255 ascii chars*/255 * cellWidth,\n    (/*default+default bold*/2 + /*0-15*/16 + /*0-15 bold*/16) * cellHeight\n  );\n  const ctx = canvas.getContext('2d', {alpha: config.allowTransparency});\n\n  ctx.fillStyle = config.colors.background.css;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  ctx.save();\n  ctx.fillStyle = config.colors.foreground.css;\n  ctx.font = getFont(config.fontWeight, config);\n  ctx.textBaseline = 'middle';\n\n  // Default color\n  for (let i = 0; i < 256; i++) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(i * cellWidth, 0, cellWidth, cellHeight);\n    ctx.clip();\n    ctx.fillText(String.fromCharCode(i), i * cellWidth, cellHeight / 2);\n    ctx.restore();\n  }\n  // Default color bold\n  ctx.save();\n  ctx.font = getFont(config.fontWeightBold, config);\n  for (let i = 0; i < 256; i++) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(i * cellWidth, cellHeight, cellWidth, cellHeight);\n    ctx.clip();\n    ctx.fillText(String.fromCharCode(i), i * cellWidth, cellHeight * 1.5);\n    ctx.restore();\n  }\n  ctx.restore();\n\n  // Colors 0-15\n  ctx.font = getFont(config.fontWeight, config);\n  for (let colorIndex = 0; colorIndex < 16; colorIndex++) {\n    const y = (colorIndex + 2) * cellHeight;\n    // Draw ascii characters\n    for (let i = 0; i < 256; i++) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(i * cellWidth, y, cellWidth, cellHeight);\n      ctx.clip();\n      ctx.fillStyle = config.colors.ansi[colorIndex].css;\n      ctx.fillText(String.fromCharCode(i), i * cellWidth, y + cellHeight / 2);\n      ctx.restore();\n    }\n  }\n\n  // Colors 0-15 bold\n  ctx.font = getFont(config.fontWeightBold, config);\n  for (let colorIndex = 0; colorIndex < 16; colorIndex++) {\n    const y = (colorIndex + 2 + 16) * cellHeight;\n    // Draw ascii characters\n    for (let i = 0; i < 256; i++) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(i * cellWidth, y, cellWidth, cellHeight);\n      ctx.clip();\n      ctx.fillStyle = config.colors.ansi[colorIndex].css;\n      ctx.fillText(String.fromCharCode(i), i * cellWidth, y + cellHeight / 2);\n      ctx.restore();\n    }\n  }\n  ctx.restore();\n\n  // Support is patchy for createImageBitmap at the moment, pass a canvas back\n  // if support is lacking as drawImage works there too. Firefox is also\n  // included here as ImageBitmap appears both buggy and has horrible\n  // performance (tested on v55).\n  if (!('createImageBitmap' in context) || isFirefox || isSafari) {\n    // Don't attempt to clear background colors if createImageBitmap is not supported\n    return canvas;\n  }\n\n  const charAtlasImageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  // Remove the background color from the image so characters may overlap\n  clearColor(charAtlasImageData, config.colors.background);\n\n  return context.createImageBitmap(charAtlasImageData);\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nexport function clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n\nfunction getFont(fontWeight: FontWeight, config: ICharAtlasConfig): string {\n  return `${fontWeight} ${config.fontSize * config.devicePixelRatio}px ${config.fontFamily}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T>;\n  next: ILinkedListNode<T>;\n  key: number;\n  value: T;\n}\n\nexport default class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> = null;\n  private _tail: ILinkedListNode<T> = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head;\n      this._unlinkNode(node);\n      delete this._map[node.key];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop();\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, IGlyphIdentifier, INVERTED_DEFAULT_COLOR, ICharAtlasConfig } from './Types';\nimport BaseCharAtlas from './BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from '../ColorManager';\nimport { clearColor } from './CharAtlasGenerator';\nimport LRUMap from './LRUMap';\nimport { isFirefox, isSafari } from '../../core/Platform';\nimport { IColor } from '../Types';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport default class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = this._cacheCanvas.getContext('2d', {alpha: true});\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency});\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek().index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.background;\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * A dummy CharAtlas implementation that always fails to draw characters.\n */\n\nimport { IGlyphIdentifier, ICharAtlasConfig } from './Types';\nimport BaseCharAtlas from './BaseCharAtlas';\n\nexport default class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, IGlyphIdentifier, DEFAULT_COLOR, ICharAtlasConfig, CHAR_ATLAS_CELL_SPACING } from './Types';\nimport { generateStaticCharAtlasTexture } from './CharAtlasGenerator';\nimport BaseCharAtlas from './BaseCharAtlas';\nimport { is256Color } from './CharAtlasUtils';\n\nexport default class StaticCharAtlas extends BaseCharAtlas {\n  private _texture: HTMLCanvasElement | ImageBitmap;\n\n  constructor(private _document: Document, private _config: ICharAtlasConfig) {\n    super();\n  }\n\n  private _canvasFactory = (width: number, height: number) => {\n    const canvas = this._document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    // This is useful for debugging\n    // document.body.appendChild(canvas);\n\n    return canvas;\n  }\n\n  protected _doWarmUp(): void {\n    const result = generateStaticCharAtlasTexture(window, this._canvasFactory, this._config);\n    if (result instanceof HTMLCanvasElement) {\n      this._texture = result;\n    } else {\n      result.then(texture => {\n        this._texture = texture;\n      });\n    }\n  }\n\n  private _isCached(glyph: IGlyphIdentifier, colorIndex: number): boolean {\n    const isAscii = glyph.code < 256;\n    // A color is basic if it is one of the 4 bit ANSI colors.\n    const isBasicColor = glyph.fg < 16;\n    const isDefaultColor = glyph.fg === DEFAULT_COLOR;\n    const isDefaultBackground = glyph.bg === DEFAULT_COLOR;\n    return isAscii && (isBasicColor || isDefaultColor) && isDefaultBackground && !glyph.italic;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // we're not warmed up yet\n    if (this._texture === null || this._texture === undefined) {\n      return false;\n    }\n\n    let colorIndex = 0;\n    if (is256Color(glyph.fg)) {\n      colorIndex = 2 + glyph.fg + (glyph.bold ? 16 : 0);\n    } else if (glyph.fg === DEFAULT_COLOR) {\n      // If default color and bold\n      if (glyph.bold) {\n        colorIndex = 1;\n      }\n    }\n    if (!this._isCached(glyph, colorIndex)) {\n      return false;\n    }\n\n    ctx.save();\n\n    // ImageBitmap's draw about twice as fast as from a canvas\n    const charAtlasCellWidth = this._config.scaledCharWidth + CHAR_ATLAS_CELL_SPACING;\n    const charAtlasCellHeight = this._config.scaledCharHeight + CHAR_ATLAS_CELL_SPACING;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    ctx.drawImage(\n      this._texture,\n      glyph.code * charAtlasCellWidth,\n      colorIndex * charAtlasCellHeight,\n      charAtlasCellWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      charAtlasCellWidth,\n      this._config.scaledCharHeight\n    );\n\n    ctx.restore();\n\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../../Types';\nimport { IColorSet } from '../Types';\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport BaseCharAtlas from './BaseCharAtlas';\nimport DynamicCharAtlas from './DynamicCharAtlas';\nimport NoneCharAtlas from './NoneCharAtlas';\nimport StaticCharAtlas from './StaticCharAtlas';\nimport { ICharAtlasConfig } from './Types';\n\nconst charAtlasImplementations = {\n  'none': NoneCharAtlas,\n  'static': StaticCharAtlas,\n  'dynamic': DynamicCharAtlas\n};\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: ITerminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: ITerminal,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new charAtlasImplementations[terminal.options.experimentalCharAtlas](\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: ITerminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer, IColorSet, IRenderDimensions } from './Types';\nimport { CharData, ITerminal } from '../Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, IGlyphIdentifier } from './atlas/Types';\nimport BaseCharAtlas from './atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from './atlas/CharAtlasCache';\nimport { CHAR_DATA_CHAR_INDEX } from '../Buffer';\nimport { is256Color } from './atlas/CharAtlasUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = this._canvas.getContext('2d', {alpha: this._alpha});\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this.clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {}\n  public onBlur(terminal: ITerminal): void {}\n  public onFocus(terminal: ITerminal): void {}\n  public onCursorMove(terminal: ITerminal): void {}\n  public onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public onThemeChanged(terminal: ITerminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected setTransparency(terminal: ITerminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: ITerminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this.clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: ITerminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param charData The char data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected fillCharTrueColor(terminal: ITerminal, charData: CharData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(terminal, y);\n    this._ctx.fillText(\n        charData[CHAR_DATA_CHAR_INDEX],\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param terminal The terminal.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected drawChars(terminal: ITerminal, chars: string, code: number, width: number, x: number, y: number, fg: number, bg: number, bold: boolean, dim: boolean, italic: boolean): void {\n    const drawInBrightColor = terminal.options.drawBoldTextInBrightColors && bold && fg < 8 && fg !== INVERTED_DEFAULT_COLOR;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = chars;\n    this._currentGlyphIdentifier.code = code;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = bold && terminal.options.enableBold;\n    this._currentGlyphIdentifier.dim = dim;\n    this._currentGlyphIdentifier.italic = italic;\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(terminal, chars, width, fg, x, y, bold && terminal.options.enableBold, dim, italic);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param terminal The terminal.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(terminal: ITerminal, chars: string, width: number, fg: number, x: number, y: number, bold: boolean, dim: boolean, italic: boolean): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(terminal, bold, italic);\n    this._ctx.textBaseline = 'middle';\n\n    if (fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (is256Color(fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    this._clipRow(terminal, y);\n\n    // Apply alpha to dim the character\n    if (dim) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        chars,\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param terminal The terminal.\n   * @param y The row to clip.\n   */\n  private _clipRow(terminal: ITerminal, y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        terminal.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: ITerminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize * window.devicePixelRatio}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_ATTR_INDEX, CHAR_DATA_CODE_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE } from '../Buffer';\nimport { FLAGS, IColorSet, IRenderDimensions, ICharacterJoinerRegistry } from './Types';\nimport { CharData, ITerminal } from '../Types';\nimport { INVERTED_DEFAULT_COLOR, DEFAULT_COLOR } from './atlas/Types';\nimport { GridCache } from './GridCache';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { is256Color } from './atlas/CharAtlasUtils';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number;\n  private _characterFont: string;\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, characterJoinerRegistry: ICharacterJoinerRegistry, alpha: boolean) {\n    super(container, 'text', zIndex, alpha, colors);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(terminal, false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(terminal.cols, terminal.rows);\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._state.clear();\n    this.clearAll();\n  }\n\n  private _forEachCell(\n    terminal: ITerminal,\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      code: number,\n      chars: string,\n      width: number,\n      x: number,\n      y: number,\n      fg: number,\n      bg: number,\n      flags: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + terminal.buffer.ydisp;\n      const line = terminal.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < terminal.cols; x++) {\n        const charData = line.get(x);\n        let code: number = <number>charData[CHAR_DATA_CODE_INDEX] || WHITESPACE_CELL_CODE;\n\n        // Can either represent character(s) for a single cell or multiple cells\n        // if indicated by a character joiner.\n        let chars: string = charData[CHAR_DATA_CHAR_INDEX] || WHITESPACE_CELL_CHAR;\n        const attr: number = charData[CHAR_DATA_ATTR_INDEX];\n        let width: number = charData[CHAR_DATA_WIDTH_INDEX];\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (width === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift();\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          chars = terminal.buffer.translateBufferLineToString(\n            row,\n            true,\n            range[0],\n            range[1]\n          );\n          width = range[1] - range[0];\n          code = Infinity;\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(charData)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line.length - 1 && line.get(lastCharX + 1)[CHAR_DATA_CODE_INDEX] === NULL_CELL_CODE) {\n            width = 2;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        const flags = attr >> 18;\n        let bg = attr & 0x1ff;\n        let fg = (attr >> 9) & 0x1ff;\n\n        // If inverse flag is on, the foreground should become the background.\n        if (flags & FLAGS.INVERSE) {\n          const temp = bg;\n          bg = fg;\n          fg = temp;\n          if (fg === DEFAULT_COLOR) {\n            fg = INVERTED_DEFAULT_COLOR;\n          }\n          if (bg === DEFAULT_COLOR) {\n            bg = INVERTED_DEFAULT_COLOR;\n          }\n        }\n\n        callback(\n          code,\n          chars,\n          width,\n          x,\n          y,\n          fg,\n          bg,\n          flags\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = terminal.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(terminal, firstRow, lastRow, null, (code, chars, width, x, y, fg, bg, flags) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n      if (bg === INVERTED_DEFAULT_COLOR) {\n        nextFillStyle = this._colors.foreground.css;\n      } else if (is256Color(bg)) {\n        nextFillStyle = this._colors.ansi[bg].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      } if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle;\n        this.fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle;\n        this.fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this.fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    this._forEachCell(terminal, firstRow, lastRow, this._characterJoinerRegistry, (code, chars, width, x, y, fg, bg, flags) => {\n      if (flags & FLAGS.INVISIBLE) {\n        return;\n      }\n      if (flags & FLAGS.UNDERLINE) {\n        this._ctx.save();\n        if (fg === INVERTED_DEFAULT_COLOR) {\n          this._ctx.fillStyle = this._colors.background.css;\n        } else if (is256Color(fg)) {\n          // 256 color support\n          this._ctx.fillStyle = this._colors.ansi[fg].css;\n        } else {\n          this._ctx.fillStyle = this._colors.foreground.css;\n        }\n        this.fillBottomLineAtCells(x, y, width);\n        this._ctx.restore();\n      }\n      this.drawChars(\n        terminal, chars, code,\n        width, x, y,\n        fg, bg,\n        !!(flags & FLAGS.BOLD), !!(flags & FLAGS.DIM), !!(flags & FLAGS.ITALIC)\n      );\n    });\n  }\n\n  public onGridChanged(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this.clearCells(0, firstRow, terminal.cols, lastRow - firstRow + 1);\n    this._drawBackground(terminal, firstRow, lastRow);\n    this._drawForeground(terminal, firstRow, lastRow);\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {\n    this.setTransparency(terminal, terminal.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(charData: CharData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (charData[CHAR_DATA_WIDTH_INDEX] !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    const code = charData[CHAR_DATA_CODE_INDEX];\n    if (code < 256) {\n      return false;\n    }\n\n    // Deliver from cache if available\n    const char = charData[CHAR_DATA_CHAR_INDEX];\n    if (this._characterOverlapCache.hasOwnProperty(char)) {\n      return this._characterOverlapCache[char];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(char).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[char] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../Types';\nimport { IColorSet, IRenderDimensions } from './Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\n\ninterface ISelectionState {\n  start: [number, number];\n  end: [number, number];\n  columnSelectMode: boolean;\n  ydisp: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state: ISelectionState;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet) {\n    super(container, 'selection', zIndex, true, colors);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: null,\n      end: null,\n      columnSelectMode: null,\n      ydisp: null\n    };\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(terminal: ITerminal): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this.clearAll();\n    }\n  }\n\n  public onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, terminal.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this.clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this.fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : terminal.cols;\n      this.fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this.fillCells(0, viewportCappedStartRow + 1, terminal.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : terminal.cols;\n        this.fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = terminal.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number], coord2: [number, number]): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_WIDTH_INDEX } from '../Buffer';\nimport { IColorSet, IRenderDimensions } from './Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { CharData, ITerminal } from '../Types';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: ITerminal, x: number, y: number, charData: CharData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet) {\n    super(container, 'cursor', zIndex, true, colors);\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = null;\n      this.onOptionsChanged(terminal);\n    }\n  }\n\n  public onBlur(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n  }\n\n  public onFocus(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume(terminal);\n    } else {\n      terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    }\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, () => {\n          this._render(terminal, true);\n        });\n      }\n    } else {\n      if (this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager.dispose();\n        this._cursorBlinkStateManager = null;\n      }\n      // Request a refresh from the terminal as management of rendering is being\n      // moved back to the terminal\n      terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    }\n  }\n\n  public onCursorMove(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  public onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: ITerminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!terminal.cursorState || terminal.cursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.ybase + terminal.buffer.y;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    const charData = terminal.buffer.lines.get(cursorY).get(terminal.buffer.x);\n    if (!charData) {\n      return;\n    }\n\n    if (!terminal.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      this._renderBlurCursor(terminal, terminal.buffer.x, viewportRelativeCursorY, charData);\n      this._ctx.restore();\n      this._state.x = terminal.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = terminal.options.cursorStyle;\n      this._state.width = charData[CHAR_DATA_WIDTH_INDEX];\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === terminal.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === terminal.isFocused &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === charData[CHAR_DATA_WIDTH_INDEX]) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, terminal.buffer.x, viewportRelativeCursorY, charData);\n    this._ctx.restore();\n\n    this._state.x = terminal.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle;\n    this._state.width = charData[CHAR_DATA_WIDTH_INDEX];\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this.clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: null,\n        y: null,\n        isFocused: null,\n        style: null,\n        width: null\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: ITerminal, x: number, y: number, charData: CharData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: ITerminal, x: number, y: number, charData: CharData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillCells(x, y, charData[CHAR_DATA_WIDTH_INDEX], 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this.fillCharTrueColor(terminal, charData, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: ITerminal, x: number, y: number, charData: CharData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: ITerminal, x: number, y: number, charData: CharData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this.strokeRectAtCell(x, y, charData[CHAR_DATA_WIDTH_INDEX], 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number;\n  private _blinkStartTimeout: number;\n  private _blinkInterval: number;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number;\n\n  constructor(\n    terminal: ITerminal,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (terminal.isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: ITerminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = null;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = null;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = null;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public resume(terminal: ITerminal): void {\n    this._animationTimeRestarted = null;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkHoverEvent, ITerminal, ILinkifierAccessor, LinkHoverEventTypes } from '../Types';\nimport { IColorSet, IRenderDimensions } from './Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from './atlas/Types';\nimport { is256Color } from './atlas/CharAtlasUtils';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkHoverEvent = null;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, terminal: ILinkifierAccessor) {\n    super(container, 'link', zIndex, true, colors);\n    terminal.linkifier.on(LinkHoverEventTypes.HOVER, (e: ILinkHoverEvent) => this._onLinkHover(e));\n    terminal.linkifier.on(LinkHoverEventTypes.LEAVE, (e: ILinkHoverEvent) => this._onLinkLeave(e));\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = null;\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this.clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this.clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this.clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = null;\n    }\n  }\n\n  private _onLinkHover(e: ILinkHoverEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this.fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this.fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this.fillBottomLineAtCells(0, y, e.cols);\n      }\n      this.fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkHoverEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","import { ITerminal } from '../Types';\nimport { IDisposable } from 'xterm';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number;\n  private _rowEnd: number;\n  private _animationFrame: number = null;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _callback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number): void {\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== null && rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== null && rowEnd !== undefined ? rowEnd : this._terminal.rows - 1;\n    // Check whether the row start/end values have already been set\n    const isRowStartSet = this._rowStart !== undefined && this._rowStart !== null;\n    const isRowEndSet = this._rowEnd !== undefined && this._rowEnd !== null;\n    // Set the properties to the updated values\n    this._rowStart = isRowStartSet ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = isRowEndSet ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._terminal.rows - 1);\n\n    // Run render callback\n    this._callback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = null;\n    this._rowEnd = null;\n    this._animationFrame = null;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from '../common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: (this: MediaQueryList, ev: MediaQueryListEvent) => any;\n  private _listener: ScreenDprListener;\n  private _resolutionMediaMatchList: MediaQueryList;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    // Clear listeners for old DPR\n    if (this._resolutionMediaMatchList) {\n      this._resolutionMediaMatchList.removeListener(this._outerListener);\n    }\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._listener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._listener = null;\n    this._outerListener = null;\n  }\n}\n","import { CHAR_DATA_ATTR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from '../Buffer';\nimport { ITerminal, IBufferLine } from '../Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from './Types';\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n\n  constructor(private _terminal: ITerminal) {\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._terminal.buffer.lines.get(row);\n    if (line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = this._terminal.buffer.translateBufferLineToString(row, true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttr = line.get(0)[CHAR_DATA_ATTR_INDEX] >> 9;\n\n    for (let x = 0; x < this._terminal.cols; x++) {\n      const charData = line.get(x);\n      const chars = charData[CHAR_DATA_CHAR_INDEX];\n      const width = charData[CHAR_DATA_WIDTH_INDEX];\n      const attr = charData[CHAR_DATA_ATTR_INDEX] >> 9;\n\n      if (width === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (attr !== rangeAttr) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttr = attr;\n      }\n\n      currentStringIndex += chars.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._terminal.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._terminal.cols; x++) {\n      const charData = line.get(x);\n      const width = charData[CHAR_DATA_WIDTH_INDEX];\n      const length = charData[CHAR_DATA_CHAR_INDEX].length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._terminal.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          inRange = false;\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from './TextRenderLayer';\nimport { SelectionRenderLayer } from './SelectionRenderLayer';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { ColorManager } from './ColorManager';\nimport { IRenderLayer, IColorSet, IRenderer, IRenderDimensions, ICharacterJoinerRegistry } from './Types';\nimport { ITerminal, CharacterJoinerHandler } from '../Types';\nimport { LinkRenderLayer } from './LinkRenderLayer';\nimport { EventEmitter } from '../common/EventEmitter';\nimport { RenderDebouncer } from '../ui/RenderDebouncer';\nimport { ScreenDprMonitor } from '../ui/ScreenDprMonitor';\nimport { ITheme } from 'xterm';\nimport { CharacterJoinerRegistry } from '../renderer/CharacterJoinerRegistry';\n\nexport class Renderer extends EventEmitter implements IRenderer {\n  private _renderDebouncer: RenderDebouncer;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public colorManager: ColorManager;\n  public dimensions: IRenderDimensions;\n\n  constructor(private _terminal: ITerminal, theme: ITheme) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this.colorManager = new ColorManager(document, allowTransparency);\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(_terminal);\n    if (theme) {\n      this.colorManager.setTheme(theme);\n    }\n\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal.screenElement, 0, this.colorManager.colors, this._characterJoinerRegistry, allowTransparency),\n      new SelectionRenderLayer(this._terminal.screenElement, 1, this.colorManager.colors),\n      new LinkRenderLayer(this._terminal.screenElement, 2, this.colorManager.colors, this._terminal),\n      new CursorRenderLayer(this._terminal.screenElement, 3, this.colorManager.colors)\n    ];\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n\n    this._renderDebouncer = new RenderDebouncer(this._terminal, this._renderRows.bind(this));\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onWindowResize(window.devicePixelRatio));\n    this.register(this._screenDprMonitor);\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this.onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(this._terminal.element);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n  }\n\n  public onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n  }\n\n  public onWindowResize(devicePixelRatio: number): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== devicePixelRatio) {\n      this._devicePixelRatio = devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public setTheme(theme: ITheme): IColorSet {\n    this.colorManager.setTheme(theme);\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.onThemeChanged(this._terminal, this.colorManager.colors);\n      l.reset(this._terminal);\n    });\n\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n\n    return this.colorManager.colors;\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this._terminal, this.dimensions));\n\n    // Force a refresh\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n\n    // Resize the screen\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n\n    this.emit('resize', {\n      width: this.dimensions.canvasWidth,\n      height: this.dimensions.canvasHeight\n    });\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur(this._terminal));\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus(this._terminal));\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(this._terminal, start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove(this._terminal));\n  }\n\n  public onOptionsChanged(): void {\n    this.colorManager.allowTransparency = this._terminal.options.allowTransparency;\n    this._runOperation(l => l.onOptionsChanged(this._terminal));\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset(this._terminal));\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._renderLayers.forEach(l => operation(l));\n    }\n  }\n\n  /**\n   * Queues a refresh between two rows (inclusive), to be done on next animation\n   * frame.\n   * @param start The start row.\n   * @param end The end row.\n   */\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end);\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  private _renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(this._terminal, start, end));\n    this._terminal.emit('refresh', { start, end });\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!this._terminal.charMeasure.width || !this._terminal.charMeasure.height) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._terminal.charMeasure.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._terminal.charMeasure.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. CharMeasure.width/height by itself is\n    // insufficient when the page is not at 100% zoom level as CharMeasure is\n    // measured in CSS pixels, but the actual char size on the canvas can\n    // differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../Types';\nimport { IMouseZoneManager, IMouseZone } from './Types';\nimport { Disposable } from '../common/Lifecycle';\nimport { addDisposableDomListener } from './Lifecycle';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number = null;\n  private _currentZone: IMouseZone = null;\n  private _lastHoverCoords: [number, number] = [null, null];\n\n  constructor(\n    private _terminal: ITerminal\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._terminal.element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!end) {\n      start = 0;\n      end = this._terminal.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = null;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._terminal.element.addEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._terminal.element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._terminal.element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._terminal.element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = null;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = null;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      if (zone.willLinkActivate(e)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = null;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone {\n    const coords = this._terminal.mouseHelper.getCoords(e, this._terminal.screenElement, this._terminal.charMeasure, this._terminal.cols, this._terminal.rows);\n    if (!coords) {\n      return null;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IMouseZoneManager } from './ui/Types';\nimport { ILinkHoverEvent, ILinkMatcher, LinkMatcherHandler, LinkHoverEventTypes, ILinkMatcherOptions, ILinkifier, ITerminal, IBufferStringIteratorResult } from './Types';\nimport { MouseZone } from './ui/MouseZoneManager';\nimport { EventEmitter } from './common/EventEmitter';\nimport { CHAR_DATA_ATTR_INDEX } from './Buffer';\nimport { getStringCellWidth } from './CharWidth';\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier extends EventEmitter implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static readonly TIME_BEFORE_LINKIFY = 200;\n\n  /**\n   * Limit of the unwrapping line expansion (overscan) at the top and bottom\n   * of the actual viewport in ASCII characters.\n   * A limit of 2000 should match most sane urls.\n   */\n  protected static readonly OVERSCAN_CHAR_LIMIT = 2000;\n\n  protected _linkMatchers: ILinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager;\n  private _rowsTimeoutId: number;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number, end: number };\n\n  constructor(\n    protected _terminal: ITerminal\n  ) {\n    super();\n    this._rowsToLinkify = {\n      start: null,\n      end: null\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(mouseZoneManager: IMouseZoneManager): void {\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === null) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier.TIME_BEFORE_LINKIFY);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = null;\n    const buffer = this._terminal.buffer;\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._terminal.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(Linkifier.OVERSCAN_CHAR_LIMIT / this._terminal.cols);\n    const iterator = this._terminal.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = null;\n    this._rowsToLinkify.end = null;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: ILinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: ILinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, matcher.regex.flags + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        // DEBUG: print match and throw\n        if ((<any>this._terminal).debug) {\n          console.log({match, matcher});\n          throw new Error('match found without corresponding matchIndex');\n        }\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._terminal.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._terminal.buffer.lines.get(bufferIndex[0]);\n      const char = line.get(bufferIndex[1]);\n      let fg: number | undefined;\n      if (char) {\n        const attr: number = char[CHAR_DATA_ATTR_INDEX];\n        fg = (attr >> 9) & 0x1ff;\n      }\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._terminal.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._terminal.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number): void {\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._terminal.cols;\n    const y1 = y + Math.floor(x / this._terminal.cols);\n    let x2 = (x1 + width) % this._terminal.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._terminal.cols);\n    if (x2 === 0) {\n      x2 = this._terminal.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      e => {\n        this.emit(LinkHoverEventTypes.HOVER, this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._terminal.element.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this.emit(LinkHoverEventTypes.TOOLTIP, this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          matcher.hoverTooltipCallback(e, uri);\n        }\n      },\n      () => {\n        this.emit(LinkHoverEventTypes.LEAVE, this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._terminal.element.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number): ILinkHoverEvent {\n    return { x1, y1, x2, y2, cols: this._terminal.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharMeasure, IMouseHelper } from '../Types';\nimport { IRenderer } from '../renderer/Types';\n\nexport class MouseHelper implements IMouseHelper {\n  constructor(private _renderer: IRenderer) {}\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer = renderer;\n  }\n\n  public static getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n    const rect = element.getBoundingClientRect();\n    return [event.clientX - rect.left, event.clientY - rect.top];\n  }\n\n  /**\n   * Gets coordinates within the terminal for a particular mouse event. The result\n   * is returned as an array in the form [x, y] instead of an object as it's a\n   * little faster and this function is used in some low level code.\n   * @param event The mouse event.\n   * @param element The terminal's container element.\n   * @param charMeasure The char measure object used to determine character sizes.\n   * @param colCount The number of columns in the terminal.\n   * @param rowCount The number of rows n the terminal.\n   * @param isSelection Whether the request is for the selection or not. This will\n   * apply an offset to the x value such that the left half of the cell will\n   * select that cell and the right half will select the next cell.\n   */\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, charMeasure: ICharMeasure, colCount: number, rowCount: number, isSelection?: boolean): [number, number] {\n    // Coordinates cannot be measured if charMeasure has not been initialized\n    if (!charMeasure.width || !charMeasure.height) {\n      return null;\n    }\n\n    const coords = MouseHelper.getCoordsRelativeToElement(event, element);\n    if (!coords) {\n      return null;\n    }\n\n    coords[0] = Math.ceil((coords[0] + (isSelection ? this._renderer.dimensions.actualCellWidth / 2 : 0)) / this._renderer.dimensions.actualCellWidth);\n    coords[1] = Math.ceil(coords[1] / this._renderer.dimensions.actualCellHeight);\n\n    // Ensure coordinates are within the terminal viewport. Note that selections\n    // need an addition point of precision to cover the end point (as characters\n    // cover half of one char and half of the next).\n    coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n    coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n    return coords;\n  }\n\n  /**\n   * Gets coordinates within the terminal for a particular mouse event, wrapping\n   * them to the bounds of the terminal and adding 32 to both the x and y values\n   * as expected by xterm.\n   * @param event The mouse event.\n   * @param element The terminal's container element.\n   * @param charMeasure The char measure object used to determine character sizes.\n   * @param colCount The number of columns in the terminal.\n   * @param rowCount The number of rows in the terminal.\n   */\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, charMeasure: ICharMeasure, colCount: number, rowCount: number): { x: number, y: number } {\n    const coords = this.getCoords(event, element, charMeasure, colCount, rowCount);\n    let x = coords[0];\n    let y = coords[1];\n\n    // xterm sends raw bytes and starts at 32 (SP) for each.\n    x += 32;\n    y += 32;\n\n    return { x, y };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from './Types';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number];\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number];\n\n  constructor(\n    private _terminal: ITerminal\n  ) {\n    this.clearSelection();\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = null;\n    this.selectionEnd = null;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] {\n    if (this.isSelectAllActive) {\n      return [this._terminal.cols, this._terminal.buffer.ybase + this._terminal.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return null;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._terminal.cols) {\n        return [startPlusLength % this._terminal.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._terminal.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, IBufferLine } from '../Types';\nimport { ICircularList } from '../common/Types';\nimport { C0 } from '../common/data/EscapeSequences';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\nexport class AltClickHandler {\n  private _startRow: number;\n  private _startCol: number;\n  private _endRow: number;\n  private _endCol: number;\n  private _lines: ICircularList<IBufferLine>;\n\n  constructor(\n    private _mouseEvent: MouseEvent,\n    private _terminal: ITerminal\n  ) {\n    this._lines = this._terminal.buffer.lines;\n    this._startCol = this._terminal.buffer.x;\n    this._startRow = this._terminal.buffer.y;\n\n    const coordinates = this._terminal.mouseHelper.getCoords(\n      this._mouseEvent,\n      this._terminal.element,\n      this._terminal.charMeasure,\n      this._terminal.cols,\n      this._terminal.rows,\n      false\n    );\n\n    if (coordinates) {\n      [this._endCol, this._endRow] = coordinates.map((coordinate: number) => {\n        return coordinate - 1;\n      });\n    }\n  }\n\n  /**\n   * Writes the escape sequences of arrows to the terminal\n   */\n  public move(): void {\n    if (this._mouseEvent.altKey && this._endCol !== undefined && this._endRow !== undefined) {\n      this._terminal.handler(this._arrowSequences());\n    }\n  }\n\n  /**\n   * Concatenates all the arrow sequences together.\n   * Resets the starting row to an unwrapped row, moves to the requested row,\n   * then moves to requested col.\n   */\n  private _arrowSequences(): string {\n    // The alt buffer should try to navigate between rows\n    if (!this._terminal.buffer.hasScrollback) {\n      return this._resetStartingRow() + this._moveToRequestedRow() + this._moveToRequestedCol();\n    }\n\n    // Only move horizontally for the normal buffer\n    return this._moveHorizontallyOnly();\n  }\n\n  /**\n   * If the initial position of the cursor is on a row that is wrapped, move the\n   * cursor up to the first row that is not wrapped to have accurate vertical\n   * positioning.\n   */\n  private _resetStartingRow(): string {\n    if (this._moveToRequestedRow().length === 0) {\n      return '';\n    }\n    return repeat(this._bufferLine(\n      this._startCol, this._startRow, this._startCol,\n      this._startRow - this._wrappedRowsForRow(this._startRow), false\n    ).length, this._sequence(Direction.LEFT));\n  }\n\n  /**\n   * Using the reset starting and ending row, move to the requested row,\n   * ignoring wrapped rows\n   */\n  private _moveToRequestedRow(): string {\n    const startRow = this._startRow - this._wrappedRowsForRow(this._startRow);\n    const endRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n\n    const rowsToMove = Math.abs(startRow - endRow) - this._wrappedRowsCount();\n\n    return repeat(rowsToMove, this._sequence(this._verticalDirection()));\n  }\n\n  /**\n   * Move to the requested col on the ending row\n   */\n  private _moveToRequestedCol(): string {\n    let startRow;\n    if (this._moveToRequestedRow().length > 0) {\n      startRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n    } else {\n      startRow = this._startRow;\n    }\n\n    const endRow = this._endRow;\n    const direction = this._horizontalDirection();\n\n    return repeat(this._bufferLine(\n      this._startCol, startRow, this._endCol, endRow,\n      direction === Direction.RIGHT\n    ).length, this._sequence(direction));\n  }\n\n  private _moveHorizontallyOnly(): string {\n    const direction = this._horizontalDirection();\n    return repeat(Math.abs(this._startCol - this._endCol), this._sequence(direction));\n  }\n\n  /**\n   * Utility functions\n   */\n\n  /**\n   * Calculates the number of wrapped rows between the unwrapped starting and\n   * ending rows. These rows need to ignored since the cursor skips over them.\n   */\n  private _wrappedRowsCount(): number {\n    let wrappedRows = 0;\n    const startRow = this._startRow - this._wrappedRowsForRow(this._startRow);\n    const endRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n\n    for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n      const direction = this._verticalDirection() === Direction.UP ? -1 : 1;\n\n      if (this._lines.get(startRow + (direction * i)).isWrapped) {\n        wrappedRows++;\n      }\n    }\n\n    return wrappedRows;\n  }\n\n  /**\n   * Calculates the number of wrapped rows that make up a given row.\n   * @param currentRow The row to determine how many wrapped rows make it up\n   */\n  private _wrappedRowsForRow(currentRow: number): number {\n    let rowCount = 0;\n    let lineWraps = this._lines.get(currentRow).isWrapped;\n\n    while (lineWraps && currentRow >= 0 && currentRow < this._terminal.rows) {\n      rowCount++;\n      currentRow--;\n      lineWraps = this._lines.get(currentRow).isWrapped;\n    }\n\n    return rowCount;\n  }\n\n  /**\n   * Direction determiners\n   */\n\n  /**\n   * Determines if the right or left arrow is needed\n   */\n  private _horizontalDirection(): Direction {\n    let startRow;\n    if (this._moveToRequestedRow().length > 0) {\n      startRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n    } else {\n      startRow = this._startRow;\n    }\n\n    if ((this._startCol < this._endCol &&\n      startRow <= this._endRow) || // down/right or same y/right\n      (this._startCol >= this._endCol &&\n      startRow < this._endRow)) {  // down/left or same y/left\n      return Direction.RIGHT;\n    }\n    return Direction.LEFT;\n  }\n\n  /**\n   * Determines if the up or down arrow is needed\n   */\n  private _verticalDirection(): Direction {\n    if (this._startRow > this._endRow) {\n      return Direction.UP;\n    }\n    return Direction.DOWN;\n  }\n\n  /**\n   * Constructs the string of chars in the buffer from a starting row and col\n   * to an ending row and col\n   * @param startCol The starting column position\n   * @param startRow The starting row position\n   * @param endCol The ending column position\n   * @param endRow The ending row position\n   * @param forward Direction to move\n   */\n  private _bufferLine(\n    startCol: number,\n    startRow: number,\n    endCol: number,\n    endRow: number,\n    forward: boolean\n  ): string {\n    let currentCol = startCol;\n    let currentRow = startRow;\n    let bufferStr = '';\n\n    while (currentCol !== endCol || currentRow !== endRow) {\n      currentCol += forward ? 1 : -1;\n\n      if (forward && currentCol > this._terminal.cols - 1) {\n        bufferStr += this._terminal.buffer.translateBufferLineToString(\n          currentRow, false, startCol, currentCol\n        );\n        currentCol = 0;\n        startCol = 0;\n        currentRow++;\n      } else if (!forward && currentCol < 0) {\n        bufferStr += this._terminal.buffer.translateBufferLineToString(\n          currentRow, false, 0, startCol + 1\n        );\n        currentCol = this._terminal.cols - 1;\n        startCol = currentCol;\n        currentRow--;\n      }\n    }\n\n    return bufferStr + this._terminal.buffer.translateBufferLineToString(\n      currentRow, false, startCol, currentCol\n    );\n  }\n\n  /**\n   * Constructs the escape sequence for clicking an arrow\n   * @param direction The direction to move\n   */\n  private _sequence(direction: Direction): string {\n    const mod = this._terminal.applicationCursor ? 'O' : '[';\n    return C0.ESC + mod + direction;\n  }\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISelectionManager, IBuffer, CharData, IBufferLine } from './Types';\nimport { XtermListener } from './common/Types';\nimport { MouseHelper } from './ui/MouseHelper';\nimport * as Browser from './core/Platform';\nimport { CharMeasure } from './ui/CharMeasure';\nimport { EventEmitter } from './common/EventEmitter';\nimport { SelectionModel } from './SelectionModel';\nimport { CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_CODE_INDEX } from './Buffer';\nimport { AltClickHandler } from './handlers/AltClickHandler';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\n/**\n * A string containing all characters that are considered word separated by the\n * double click to select work logic.\n */\nconst WORD_SEPARATORS = ' ()[]{}\\'\"';\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionManager handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionManager but a 'refresh' event is fired when the\n * selection is ready to be redrawn.\n */\nexport class SelectionManager extends EventEmitter implements ISelectionManager {\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: NodeJS.Timer;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: XtermListener;\n\n  private _mouseDownTimeStamp: number;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _charMeasure: CharMeasure\n  ) {\n    super();\n    this._initListeners();\n    this.enable();\n\n    this._model = new SelectionModel(_terminal);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._removeMouseDownListeners();\n  }\n\n  private get _buffer(): IBuffer {\n    return this._terminal.buffers.active;\n  }\n\n  /**\n   * Initializes listener variables.\n   */\n  private _initListeners(): void {\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._trimListener = (amount: number) => this._onTrim(amount);\n\n    this.initBuffersListeners();\n  }\n\n  public initBuffersListeners(): void {\n    this._terminal.buffer.lines.on('trim', this._trimListener);\n    this._terminal.buffers.on('activate', e => this._onBufferActivate(e));\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = this._buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(this._buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = this._buffer.lines.get(i);\n        const lineText = this._buffer.translateBufferLineToString(i, true);\n        if (bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = this._buffer.lines.get(end[1]);\n        const lineText = this._buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isMSWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isNewSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isNewSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isNewSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this.emit('newselection', this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = null;\n    this.emit('refresh', {\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = null;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._terminal.emit('selection');\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._terminal.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._terminal.cols, end];\n    this.refresh();\n    this._terminal.emit('selection');\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] {\n    const coords = this._terminal.mouseHelper.getCoords(event, this._terminal.screenElement, this._charMeasure, this._terminal.cols, this._terminal.rows, true);\n    if (!coords) {\n      return null;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._terminal.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = MouseHelper.getCoordsRelativeToElement(event, this._terminal.screenElement)[1];\n    const terminalHeight = this._terminal.rows * Math.ceil(this._charMeasure.height * this._terminal.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._terminal.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    this._terminal.element.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n    this._terminal.element.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    this._dragScrollIntervalTimer = setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._terminal.element.ownerDocument) {\n      this._terminal.element.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = null;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = null;\n\n    // Ensure the line exists\n    const line = this._buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length >= this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    const char = line.get(this._model.selectionStart[0]);\n    if (char[CHAR_DATA_WIDTH_INDEX] === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._terminal.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._terminal.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._terminal.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    if (this._model.selectionEnd[1] < this._buffer.lines.length) {\n      const char = this._buffer.lines.get(this._model.selectionEnd[1]).get(this._model.selectionEnd[0]);\n      if (char && char[CHAR_DATA_WIDTH_INDEX] === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (this._dragScrollAmount) {\n      this._terminal.scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._terminal.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(this._terminal.buffer.ydisp + this._terminal.rows, this._terminal.buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = this._terminal.buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      (new AltClickHandler(event, this._terminal)).move();\n    } else if (this.hasSelection) {\n      this._terminal.emit('selection');\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    e.inactiveBuffer.lines.off('trim', this._trimListener);\n    e.activeBuffer.lines.on('trim', this._trimListener);\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const char = bufferLine.get(i);\n      if (char[CHAR_DATA_WIDTH_INDEX] === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (char[CHAR_DATA_CHAR_INDEX].length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += char[CHAR_DATA_CHAR_INDEX].length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._terminal.cols) {\n      return null;\n    }\n\n    const bufferLine = this._buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return null;\n    }\n\n    const line = this._buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.get(startCol)[CHAR_DATA_WIDTH_INDEX] === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.get(endCol)[CHAR_DATA_WIDTH_INDEX] === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      if (bufferLine.get(endCol)[CHAR_DATA_CHAR_INDEX].length > 1) {\n        rightLongCharOffset += bufferLine.get(endCol)[CHAR_DATA_CHAR_INDEX].length - 1;\n        endIndex += bufferLine.get(endCol)[CHAR_DATA_CHAR_INDEX].length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.get(startCol - 1))) {\n        const char = bufferLine.get(startCol - 1);\n        if (char[CHAR_DATA_WIDTH_INDEX] === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (char[CHAR_DATA_CHAR_INDEX].length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += char[CHAR_DATA_CHAR_INDEX].length - 1;\n          startIndex -= char[CHAR_DATA_CHAR_INDEX].length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.get(endCol + 1))) {\n        const char = bufferLine.get(endCol + 1);\n        if (char[CHAR_DATA_WIDTH_INDEX] === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (char[CHAR_DATA_CHAR_INDEX].length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += char[CHAR_DATA_CHAR_INDEX].length - 1;\n          endIndex += char[CHAR_DATA_CHAR_INDEX].length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._terminal.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return null;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.get(0)[CHAR_DATA_CODE_INDEX] !== 32 /*' '*/) {\n        const previousBufferLine = this._buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.get(this._terminal.cols - 1)[CHAR_DATA_CODE_INDEX] !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._terminal.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._terminal.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._terminal.cols && bufferLine.get(this._terminal.cols - 1)[CHAR_DATA_CODE_INDEX] !== 32 /*' '*/) {\n        const nextBufferLine = this._buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.get(0)[CHAR_DATA_CODE_INDEX] !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._terminal.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._terminal.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._terminal.cols) {\n          wordPosition.length -= this._terminal.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(charData: CharData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (charData[CHAR_DATA_WIDTH_INDEX] === 0) {\n      return false;\n    }\n    return WORD_SEPARATORS.indexOf(charData[CHAR_DATA_CHAR_INDEX]) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._terminal.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharMeasure, ITerminalOptions } from '../Types';\nimport { EventEmitter } from '../common/EventEmitter';\n\n/**\n * Utility class that measures the size of a character. Measurements are done in\n * the DOM rather than with a canvas context because support for extracting the\n * height of characters is patchy across browsers.\n */\nexport class CharMeasure extends EventEmitter implements ICharMeasure {\n  private _document: Document;\n  private _parentElement: HTMLElement;\n  private _measureElement: HTMLElement;\n  private _width: number;\n  private _height: number;\n\n  constructor(document: Document, parentElement: HTMLElement) {\n    super();\n    this._document = document;\n    this._parentElement = parentElement;\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public get width(): number {\n    return this._width;\n  }\n\n  public get height(): number {\n    return this._height;\n  }\n\n  public measure(options: ITerminalOptions): void {\n    this._measureElement.style.fontFamily = options.fontFamily;\n    this._measureElement.style.fontSize = `${options.fontSize}px`;\n    const geometry = this._measureElement.getBoundingClientRect();\n    // The element is likely currently display:none, we should retain the\n    // previous value.\n    if (geometry.width === 0 || geometry.height === 0) {\n      return;\n    }\n    const adjustedHeight = Math.ceil(geometry.height);\n    if (this._width !== geometry.width || this._height !== adjustedHeight) {\n      this._width = geometry.width;\n      this._height = adjustedHeight;\n      this.emit('charsizechanged');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let blankLine = 'Blank line';\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISoundManager } from './Types';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/wav;base64,UklGRigBAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQQBAADpAFgCwAMlBZoG/wdmCcoKRAypDQ8PbRDBEQQTOxRtFYcWlBePGIUZXhoiG88bcBz7HHIdzh0WHlMeZx51HmkeUx4WHs8dah0AHXwc3hs9G4saxRnyGBIYGBcQFv8U4RPAEoYRQBACD70NWwwHC6gJOwjWBloF7gOBAhABkf8b/qv8R/ve+Xf4Ife79W/0JfPZ8Z/wde9N7ijtE+wU6xvqM+lb6H7nw+YX5mrlxuQz5Mzje+Ma49fioeKD4nXiYeJy4pHitOL04j/jn+MN5IPkFOWs5U3mDefM55/ogOl36m7rdOyE7abuyu8D8Unyj/Pg9D/2qfcb+Yn6/vuK/Qj/lAAlAg==';\n\nexport class SoundManager implements ISoundManager {\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundManager._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundManager._audioContext = new audioContextCtor();\n    }\n    return SoundManager._audioContext;\n  }\n\n  constructor(\n    private _terminal: ITerminal\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundManager.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._terminal.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './Strings';\nimport { ITerminal, IBuffer } from './Types';\nimport { isMac } from './core/Platform';\nimport { RenderDebouncer } from './ui/RenderDebouncer';\nimport { addDisposableDomListener } from './ui/Lifecycle';\nimport { Disposable } from './common/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  constructor(private _terminal: ITerminal) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._terminal, this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.addDisposableListener('resize', data => this._onResize(data.rows)));\n    this.register(this._terminal.addDisposableListener('refresh', data => this._refreshRows(data.start, data.end)));\n    this.register(this._terminal.addDisposableListener('scroll', data => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.addDisposableListener('a11y.char', (char) => this._onChar(char)));\n    this.register(this._terminal.addDisposableListener('linefeed', () => this._onChar('\\n')));\n    this.register(this._terminal.addDisposableListener('a11y.tab', spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.addDisposableListener('key', keyChar => this._onKey(keyChar)));\n    this.register(this._terminal.addDisposableListener('blur', () => this._clearLiveRegion()));\n    // TODO: Maybe renderer should fire an event on terminal when the characters change and that\n    //       should be listened to instead? That would mean that the order of events are always\n    //       guarenteed\n    this.register(this._terminal.addDisposableListener('dprchange', () => this._refreshRowsDimensions()));\n    this.register(this._terminal.renderer.addDisposableListener('resize', () => this._refreshRowsDimensions()));\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the dprchange event isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._announceCharacter(char);\n        }\n      } else {\n        this._announceCharacter(char);\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      element.textContent = lineData.length === 0 ? Strings.blankLine : lineData;\n      element.setAttribute('aria-posinset', posInSet);\n      element.setAttribute('aria-setsize', setSize);\n    }\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._terminal.renderer.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._terminal.renderer.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacter(char: string): void {\n    if (char === ' ') {\n      // Always use nbsp for spaces in order to preserve the space between characters in\n      // voiceover's caption window\n      this._liveRegion.innerHTML += '&nbsp;';\n    } else {\n      this._liveRegion.textContent += char;\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_ATTR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CHAR } from '../../Buffer';\nimport { FLAGS } from '../Types';\nimport { IBufferLine } from '../../Types';\nimport { DEFAULT_COLOR, INVERTED_DEFAULT_COLOR } from '../atlas/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  constructor(\n    private _document: Document\n  ) {\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      const charData = lineData.get(x);\n      const code = charData[CHAR_DATA_CODE_INDEX];\n      if (code !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      const charData = lineData.get(x);\n      const char = charData[CHAR_DATA_CHAR_INDEX] || WHITESPACE_CELL_CHAR;\n      const attr = charData[CHAR_DATA_ATTR_INDEX];\n      const width = charData[CHAR_DATA_WIDTH_INDEX];\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      const flags = attr >> 18;\n      let bg = attr & 0x1ff;\n      let fg = (attr >> 9) & 0x1ff;\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      // If inverse flag is on, the foreground should become the background.\n      if (flags & FLAGS.INVERSE) {\n        const temp = bg;\n        bg = fg;\n        fg = temp;\n        if (fg === DEFAULT_COLOR) {\n          fg = INVERTED_DEFAULT_COLOR;\n        }\n        if (bg === DEFAULT_COLOR) {\n          bg = INVERTED_DEFAULT_COLOR;\n        }\n      }\n\n      if (flags & FLAGS.BOLD) {\n        // Convert the FG color to the bold variant. This should not happen when\n        // the fg is the inverse default color as there is no bold variant.\n        if (fg < 8) {\n          fg += 8;\n        }\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (flags & FLAGS.ITALIC) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      charElement.textContent = char;\n      if (fg !== DEFAULT_COLOR) {\n        charElement.classList.add(`xterm-fg-${fg}`);\n      }\n      if (bg !== DEFAULT_COLOR) {\n        charElement.classList.add(`xterm-bg-${bg}`);\n      }\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IColorSet } from '../Types';\nimport { ILinkHoverEvent, ITerminal, CharacterJoinerHandler, LinkHoverEventTypes } from '../../Types';\nimport { ITheme } from 'xterm';\nimport { EventEmitter } from '../../common/EventEmitter';\nimport { ColorManager } from '../ColorManager';\nimport { RenderDebouncer } from '../../ui/RenderDebouncer';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from './DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from '../atlas/Types';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n// TODO: Pull into an addon when TS composite projects allow easier sharing of code (not just\n// interfaces) between core and addons\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends EventEmitter implements IRenderer {\n  private _renderDebouncer: RenderDebouncer;\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement: HTMLStyleElement;\n  private _dimensionsStyleElement: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n  public colorManager: ColorManager;\n\n  constructor(private _terminal: ITerminal, theme: ITheme | undefined) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this.colorManager = new ColorManager(document, allowTransparency);\n    this.setTheme(theme);\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._terminal.cols, this._terminal.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._updateDimensions();\n\n    this._renderDebouncer = new RenderDebouncer(this._terminal, this._renderRows.bind(this));\n    this._rowFactory = new DomRendererRowFactory(document);\n\n    this._terminal.element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.appendChild(this._rowContainer);\n    this._terminal.screenElement.appendChild(this._selectionContainer);\n\n    this._terminal.linkifier.on(LinkHoverEventTypes.HOVER, (e: ILinkHoverEvent) => this._onLinkHover(e));\n    this._terminal.linkifier.on(LinkHoverEventTypes.LEAVE, (e: ILinkHoverEvent) => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._terminal.element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.removeChild(this._rowContainer);\n    this._terminal.screenElement.removeChild(this._selectionContainer);\n    this._terminal.screenElement.removeChild(this._themeStyleElement);\n    this._terminal.screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = Math.floor(this._terminal.charMeasure.width * window.devicePixelRatio);\n    this.dimensions.scaledCharHeight = Math.ceil(this._terminal.charMeasure.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._terminal.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._terminal.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = (<any>this._terminal)._viewportElement.style.height;\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setTheme(theme: ITheme | undefined): IColorSet {\n    if (theme) {\n      this.colorManager.setTheme(theme);\n    }\n\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this.colorManager.colors.foreground.css};` +\n        ` background-color: ${this.colorManager.colors.background.css};` +\n        ` font-family: ${this._terminal.getOption('fontFamily')};` +\n        ` font-size: ${this._terminal.getOption('fontSize')}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._terminal.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._terminal.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS} {` +\n        ` outline: 1px solid ${this.colorManager.colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this.colorManager.colors.cursor.css};` +\n        ` color: ${this.colorManager.colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this.colorManager.colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this.colorManager.colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this.colorManager.colors.selection.css};` +\n        `}`;\n    // Colors\n    this.colorManager.colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${this.colorManager.colors.background.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this.colorManager.colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n    return this.colorManager.colors;\n  }\n\n  public onWindowResize(devicePixelRatio: number): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop());\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - this._terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._terminal.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this.setTheme(undefined);\n    this._terminal.refresh(0, this._terminal.rows - 1);\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public refreshRows(start: number, end: number): void {\n    this._renderDebouncer.refresh(start, end);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const terminal = this._terminal;\n\n    const cursorAbsoluteY = terminal.buffer.ybase + terminal.buffer.y;\n    const cursorX = this._terminal.buffer.x;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + terminal.buffer.ydisp;\n      const lineData = terminal.buffer.lines.get(row);\n      const cursorStyle = terminal.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData, row === cursorAbsoluteY, cursorStyle, cursorX, this.dimensions.actualCellWidth, terminal.cols));\n    }\n\n    this._terminal.emit('refresh', {start, end});\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkHoverEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkHoverEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent } from '../../common/Types';\nimport { IKeyboardResult, KeyboardResultType } from '../Types';\nimport { C0 } from '../../common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = isMac ? C0.ESC + 'b' : C0.ESC + '[1;5D';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = isMac ? C0.ESC + 'f' : C0.ESC + '[1;5C';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          result.key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          result.key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - Control Sequence Introducer (CSI)\n          result.key = String.fromCharCode(27);\n        } else if (ev.keyCode === 220) {\n          // ^\\ - String Terminator (ST)\n          result.key = String.fromCharCode(28);\n        } else if (ev.keyCode === 221) {\n          // ^] - Operating System Command (OSC)\n          result.key = String.fromCharCode(29);\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T | null {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // cloning null always returns null\n  if (val === null) {\n    return null;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : clone(val[key], depth - 1);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, IViewport, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, ILinkifier, ILinkMatcherOptions, CustomKeyEventHandler, LinkMatcherHandler, CharData, CharacterJoinerHandler, IBufferLine } from './Types';\nimport { IMouseZoneManager } from './ui/Types';\nimport { IRenderer } from './renderer/Types';\nimport { BufferSet } from './BufferSet';\nimport { Buffer, MAX_BUFFER_SIZE, DEFAULT_ATTR, NULL_CELL_CODE, NULL_CELL_WIDTH, NULL_CELL_CHAR, CHAR_DATA_ATTR_INDEX } from './Buffer';\nimport { CompositionHelper } from './CompositionHelper';\nimport { EventEmitter } from './common/EventEmitter';\nimport { Viewport } from './Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, pasteHandler, copyHandler } from './ui/Clipboard';\nimport { C0 } from './common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from './renderer/Renderer';\nimport { Linkifier } from './Linkifier';\nimport { SelectionManager } from './SelectionManager';\nimport { CharMeasure } from './ui/CharMeasure';\nimport * as Browser from './core/Platform';\nimport { addDisposableDomListener } from './ui/Lifecycle';\nimport * as Strings from './Strings';\nimport { MouseHelper } from './ui/MouseHelper';\nimport { DEFAULT_BELL_SOUND, SoundManager } from './SoundManager';\nimport { DEFAULT_ANSI_COLORS } from './renderer/ColorManager';\nimport { MouseZoneManager } from './ui/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ScreenDprMonitor } from './ui/ScreenDprMonitor';\nimport { ITheme, IMarker, IDisposable } from 'xterm';\nimport { removeTerminalFromCache } from './renderer/atlas/CharAtlasCache';\nimport { DomRenderer } from './renderer/dom/DomRenderer';\nimport { IKeyboardEvent } from './common/Types';\nimport { evaluateKeyboardEvent } from './core/input/Keyboard';\nimport { KeyboardResultType, ICharset } from './core/Types';\nimport { clone } from './common/Clone';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n/**\n * The amount of write requests to queue before sending an XOFF signal to the\n * pty process. This number must be small in order for ^C and similar sequences\n * to be responsive.\n */\nconst WRITE_BUFFER_PAUSE_THRESHOLD = 5;\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\nconst MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nconst MINIMUM_ROWS = 1;\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nconst DEFAULT_OPTIONS: ITerminalOptions = {\n  cols: 80,\n  rows: 24,\n  convertEol: false,\n  termName: 'xterm',\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  enableBold: true,\n  experimentalCharAtlas: 'static',\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  scrollback: 1000,\n  screenKeys: false,\n  screenReaderMode: false,\n  debug: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  cancelEvents: false,\n  disableStdin: false,\n  useFlowControl: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: null,\n  rightClickSelectsWord: Browser.isMac,\n  rendererType: 'canvas'\n};\n\nexport class Terminal extends EventEmitter implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement;\n  private _context: Window;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  public options: ITerminalOptions;\n\n  // TODO: This can be changed to an enum or boolean, 0 and 1 seem to be the only options\n  public cursorState: number;\n  public cursorHidden: boolean;\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // modes\n  public applicationKeypad: boolean;\n  public applicationCursor: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  private _decLocator: boolean; // This is unstable and never set\n  public x10Mouse: boolean;\n  public vt200Mouse: boolean;\n  private _vt300Mouse: boolean; // This is unstable and never set\n  public normalMouse: boolean;\n  public mouseEvents: boolean;\n  public sendFocus: boolean;\n  public utfMouse: boolean;\n  public sgrMouse: boolean;\n  public urxvtMouse: boolean;\n\n  // misc\n  private _refreshStart: number;\n  private _refreshEnd: number;\n  public savedCols: number;\n\n  public curAttr: number;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // user input states\n  public writeBuffer: string[];\n  private _writeInProgress: boolean;\n\n  /**\n   * Whether _xterm.js_ sent XOFF in order to catch up with the pty process.\n   * This is a distinct state from writeStopped so that if the user requested\n   * XOFF via ^S that it will not automatically resume when the writeBuffer goes\n   * below threshold.\n   */\n  private _xoffSentToCatchUp: boolean;\n\n  /** Whether writing has been stopped as a result of XOFF */\n  // private _writeStopped: boolean;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  private _inputHandler: InputHandler;\n  public soundManager: SoundManager;\n  public renderer: IRenderer;\n  public selectionManager: SelectionManager;\n  public linkifier: ILinkifier;\n  public buffers: BufferSet;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  public charMeasure: CharMeasure;\n  private _mouseZoneManager: IMouseZoneManager;\n  public mouseHelper: MouseHelper;\n  private _accessibilityManager: AccessibilityManager;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _theme: ITheme;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public cols: number;\n  public rows: number;\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n    this.options = clone(options);\n    this._setup();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._customKeyEventHandler = null;\n    removeTerminalFromCache(this);\n    this.handler = () => {};\n    this.write = () => {};\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  /**\n   * @deprecated Use dispose instead.\n   */\n  public destroy(): void {\n    this.dispose();\n  }\n\n  private _setup(): void {\n    Object.keys(DEFAULT_OPTIONS).forEach((key) => {\n      if (this.options[key] === null || this.options[key] === undefined) {\n        this.options[key] = DEFAULT_OPTIONS[key];\n      }\n    });\n\n    // this.context = options.context || window;\n    // this.document = options.document || document;\n    // TODO: WHy not document.body?\n    this._parent = document ? document.body : null;\n\n    this.cols = Math.max(this.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(this.options.rows, MINIMUM_ROWS);\n\n    if (this.options.handler) {\n      this.on('data', this.options.handler);\n    }\n\n    this.cursorState = 0;\n    this.cursorHidden = false;\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.applicationCursor = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttr = DEFAULT_ATTR;\n\n    this.params = [];\n    this.currentParam = 0;\n\n    // user input states\n    this.writeBuffer = [];\n    this._writeInProgress = false;\n\n    this._xoffSentToCatchUp = false;\n    // this._writeStopped = false;\n    this._userScrolling = false;\n\n    this._inputHandler = new InputHandler(this);\n    this.register(this._inputHandler);\n    // Reuse renderer if the Terminal is being recreated via a reset call.\n    this.renderer = this.renderer || null;\n    this.selectionManager = this.selectionManager || null;\n    this.linkifier = this.linkifier || new Linkifier(this);\n    this._mouseZoneManager = this._mouseZoneManager || null;\n    this.soundManager = this.soundManager || new SoundManager(this);\n\n    // Create the terminal's buffers and set the current buffer\n    this.buffers = new BufferSet(this);\n    if (this.selectionManager) {\n      this.selectionManager.clearSelection();\n      this.selectionManager.initBuffersListeners();\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): Buffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttr(): number {\n    // if (this.is('screen')) return DEFAULT_ATTR;\n    return (DEFAULT_ATTR & ~0x1ff) | (this.curAttr & 0x1ff);\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus();\n    }\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this.textarea && document.hasFocus();\n  }\n\n  /**\n   * Retrieves an option's value from the terminal.\n   * @param key The option key.\n   */\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n\n    return this.options[key];\n  }\n\n  /**\n   * Sets an option on the terminal.\n   * @param key The option key.\n   * @param value The option value.\n   */\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      console.error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n    switch (key) {\n      case 'bellStyle':\n        if (!value) {\n          value = 'none';\n        }\n        break;\n      case 'cursorStyle':\n        if (!value) {\n          value = 'block';\n        }\n        break;\n      case 'fontWeight':\n        if (!value) {\n          value = 'normal';\n        }\n        break;\n      case 'fontWeightBold':\n        if (!value) {\n          value = 'bold';\n        }\n        break;\n      case 'lineHeight':\n        if (value < 1) {\n          console.warn(`${key} cannot be less than 1, value: ${value}`);\n          return;\n        }\n      case 'rendererType':\n        if (!value) {\n          value = 'canvas';\n        }\n        break;\n      case 'tabStopWidth':\n        if (value < 1) {\n          console.warn(`${key} cannot be less than 1, value: ${value}`);\n          return;\n        }\n        break;\n      case 'theme':\n        // If open has been called we do not want to set options.theme as the\n        // source of truth is owned by the renderer.\n        if (this.renderer) {\n          this._setTheme(<ITheme>value);\n          return;\n        }\n        break;\n      case 'scrollback':\n        value = Math.min(value, MAX_BUFFER_SIZE);\n\n        if (value < 0) {\n          console.warn(`${key} cannot be less than 0, value: ${value}`);\n          return;\n        }\n        if (this.options[key] !== value) {\n          const newBufferLength = this.rows + value;\n          if (this.buffer.lines.length > newBufferLength) {\n            const amountToTrim = this.buffer.lines.length - newBufferLength;\n            const needsRefresh = (this.buffer.ydisp - amountToTrim < 0);\n            this.buffer.lines.trimStart(amountToTrim);\n            this.buffer.ybase = Math.max(this.buffer.ybase - amountToTrim, 0);\n            this.buffer.ydisp = Math.max(this.buffer.ydisp - amountToTrim, 0);\n            if (needsRefresh) {\n              this.refresh(0, this.rows - 1);\n            }\n          }\n        }\n        break;\n    }\n    this.options[key] = value;\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this.renderer) {\n          this.renderer.clear();\n          this.charMeasure.measure(this.options);\n        }\n        break;\n      case 'drawBoldTextInBrightColors':\n      case 'experimentalCharAtlas':\n      case 'enableBold':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this.renderer) {\n          this.renderer.clear();\n          this.renderer.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this.renderer) {\n          this.unregister(this.renderer);\n          this.renderer.dispose();\n          this.renderer = null;\n        }\n        this._setupRenderer();\n        this.renderer.onCharSizeChanged();\n        if (this._theme) {\n          this.renderer.setTheme(this._theme);\n        }\n        this.mouseHelper.setRenderer(this.renderer);\n        break;\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        if (this.viewport) {\n          this.viewport.syncScrollArea();\n        }\n        break;\n      case 'screenReaderMode':\n        if (value) {\n          if (!this._accessibilityManager) {\n            this._accessibilityManager = new AccessibilityManager(this);\n          }\n        } else {\n          if (this._accessibilityManager) {\n            this._accessibilityManager.dispose();\n            this._accessibilityManager = null;\n          }\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n    }\n    // Inform renderer of changes\n    if (this.renderer) {\n      this.renderer.onOptionsChanged();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this.handler(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this.emit('focus');\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this.handler(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this.emit('blur');\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this, this.selectionManager);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => pasteHandler(event, this);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this, this.selectionManager, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this, this.selectionManager, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    const self = this;\n    this.register(addDisposableDomListener(this.element, 'keydown', function (ev: KeyboardEvent): void {\n      if (document.activeElement !== this) {\n        return;\n      }\n      self._keyDown(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.element, 'keypress', function (ev: KeyboardEvent): void {\n      if (document.activeElement !== this) {\n        return;\n      }\n      self._keyPress(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.element, 'keyup', (ev: KeyboardEvent) => {\n      if (!wasModifierKeyOnlyEvent(ev)) {\n        this.focus();\n      }\n\n      self._keyUp(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.addDisposableListener('refresh', () => this._compositionHelper.updateCompositionElements()));\n    this.register(this.addDisposableListener('refresh', (data) => this._queueLinkification(data.start, data.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    // Grab global elements\n    this._context = this._parent.ownerDocument.defaultView;\n    this._document = this._parent.ownerDocument;\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.emit('dprchange', window.devicePixelRatio));\n    this.register(this._screenDprMonitor);\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this._mouseZoneManager = new MouseZoneManager(this);\n    this.register(this._mouseZoneManager);\n    this.register(this.addDisposableListener('scroll', () => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this._mouseZoneManager);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    // TODO: New API to set title? This could say \"Terminal bash input\", etc.\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = new CompositionHelper(this.textarea, this._compositionView, this);\n    this._helperContainer.appendChild(this._compositionView);\n\n    this.charMeasure = new CharMeasure(document, this._helperContainer);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._setupRenderer();\n    this._theme = this.options.theme;\n    this.options.theme = null;\n    this.viewport = new Viewport(this, this._viewportElement, this._viewportScrollArea, this.charMeasure);\n    this.viewport.onThemeChanged(this.renderer.colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.addDisposableListener('cursormove', () => this.renderer.onCursorMove()));\n    this.register(this.addDisposableListener('resize', () => this.renderer.onResize(this.cols, this.rows)));\n    this.register(this.addDisposableListener('blur', () => this.renderer.onBlur()));\n    this.register(this.addDisposableListener('focus', () => this.renderer.onFocus()));\n    this.register(this.addDisposableListener('dprchange', () => this.renderer.onWindowResize(window.devicePixelRatio)));\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.renderer.onWindowResize(window.devicePixelRatio)));\n    this.register(this.charMeasure.addDisposableListener('charsizechanged', () => this.renderer.onCharSizeChanged()));\n    this.register(this.renderer.addDisposableListener('resize', (dimensions) => this.viewport.syncScrollArea()));\n\n    this.selectionManager = new SelectionManager(this, this.charMeasure);\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this.selectionManager.onMouseDown(e)));\n    this.register(this.selectionManager.addDisposableListener('refresh', data => this.renderer.onSelectionChanged(data.start, data.end, data.columnSelectMode)));\n    this.register(this.selectionManager.addDisposableListener('newselection', text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.addDisposableListener('scroll', () => {\n      this.viewport.syncScrollArea();\n      this.selectionManager.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this.selectionManager.refresh()));\n\n    this.mouseHelper = new MouseHelper(this.renderer);\n    // apply mouse event classes set by escape codes before terminal was attached\n    this.element.classList.toggle('enable-mouse-events', this.mouseEvents);\n    if (this.mouseEvents) {\n      this.selectionManager.disable();\n    } else {\n      this.selectionManager.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this);\n    }\n\n    // Measure the character size\n    this.charMeasure.measure(this.options);\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n\n  }\n\n  private _setupRenderer(): void {\n    switch (this.options.rendererType) {\n      case 'canvas': this.renderer = new Renderer(this, this.options.theme); break;\n      case 'dom': this.renderer = new DomRenderer(this, this.options.theme); break;\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n    this.register(this.renderer);\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    const colors = this.renderer.setTheme(theme);\n    if (this.viewport) {\n      this.viewport.onThemeChanged(colors);\n    }\n  }\n\n  /**\n   * XTerm mouse events\n   * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n   * To better understand these\n   * the xterm code is very helpful:\n   * Relevant files:\n   *   button.c, charproc.c, misc.c\n   * Relevant functions in xterm/button.c:\n   *   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n   */\n  public bindMouse(): void {\n    const el = this.element;\n    const self = this;\n    let pressed = 32;\n\n    // mouseup, mousedown, wheel\n    // left click: ^[[M 3<^[[M#3<\n    // wheel up: ^[[M`3>\n    function sendButton(ev: MouseEvent | WheelEvent): void {\n      let button;\n      let pos;\n\n      // get the xterm-style button\n      button = getButton(ev);\n\n      // get mouse coordinates\n      pos = self.mouseHelper.getRawByteCoords(ev, self.screenElement, self.charMeasure, self.cols, self.rows);\n      if (!pos) return;\n\n      sendEvent(button, pos);\n\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          pressed = button;\n          break;\n        case 'mouseup':\n          // keep it at the left\n          // button, just in case.\n          pressed = 32;\n          break;\n        case 'wheel':\n          // nothing. don't\n          // interfere with\n          // `pressed`.\n          break;\n      }\n    }\n\n    // motion example of a left click:\n    // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n    function sendMove(ev: MouseEvent): void {\n      let button = pressed;\n      const pos = self.mouseHelper.getRawByteCoords(ev, self.screenElement, self.charMeasure, self.cols, self.rows);\n      if (!pos) return;\n\n      // buttons marked as motions\n      // are incremented by 32\n      button += 32;\n\n      sendEvent(button, pos);\n    }\n\n    // encode button and\n    // position to characters\n    function encode(data: number[], ch: number): void {\n      if (!self.utfMouse) {\n        if (ch === 255) {\n          data.push(0);\n          return;\n        }\n        if (ch > 127) ch = 127;\n        data.push(ch);\n      } else {\n        if (ch === 2047) {\n          data.push(0);\n          return;\n        }\n        if (ch < 127) {\n          data.push(ch);\n        } else {\n          if (ch > 2047) ch = 2047;\n          data.push(0xC0 | (ch >> 6));\n          data.push(0x80 | (ch & 0x3F));\n        }\n      }\n    }\n\n    // send a mouse event:\n    // regular/utf8: ^[[M Cb Cx Cy\n    // urxvt: ^[[ Cb ; Cx ; Cy M\n    // sgr: ^[[ Cb ; Cx ; Cy M/m\n    // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n    // locator: CSI P e ; P b ; P r ; P c ; P p & w\n    function sendEvent(button: number, pos: {x: number, y: number}): void {\n      // self.emit('mouse', {\n      //   x: pos.x - 32,\n      //   y: pos.x - 32,\n      //   button: button\n      // });\n\n      if (self._vt300Mouse) {\n        // NOTE: Unstable.\n        // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        let data = C0.ESC + '[24';\n        if (button === 0) data += '1';\n        else if (button === 1) data += '3';\n        else if (button === 2) data += '5';\n        else if (button === 3) return;\n        else data += '0';\n        data += '~[' + pos.x + ',' + pos.y + ']\\r';\n        self.handler(data);\n        return;\n      }\n\n      if (self._decLocator) {\n        // NOTE: Unstable.\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        if (button === 0) button = 2;\n        else if (button === 1) button = 4;\n        else if (button === 2) button = 6;\n        else if (button === 3) button = 3;\n        self.handler(C0.ESC + '['\n                  + button\n                  + ';'\n                  + (button === 3 ? 4 : 0)\n                  + ';'\n                  + pos.y\n                  + ';'\n                  + pos.x\n                  + ';'\n                  // Not sure what page is meant to be\n                  + (<any>pos).page || 0\n                  + '&w');\n        return;\n      }\n\n      if (self.urxvtMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        pos.x++;\n        pos.y++;\n        self.handler(C0.ESC + '[' + button + ';' + pos.x + ';' + pos.y + 'M');\n        return;\n      }\n\n      if (self.sgrMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        self.handler(C0.ESC + '[<'\n                  + (((button & 3) === 3 ? button & ~3 : button) - 32)\n                  + ';'\n                  + pos.x\n                  + ';'\n                  + pos.y\n                  + ((button & 3) === 3 ? 'm' : 'M'));\n        return;\n      }\n\n      const data: number[] = [];\n\n      encode(data, button);\n      encode(data, pos.x);\n      encode(data, pos.y);\n\n      self.handler(C0.ESC + '[M' + String.fromCharCode.apply(String, data));\n    }\n\n    function getButton(ev: MouseEvent): number {\n      let button;\n      let shift;\n      let meta;\n      let ctrl;\n      let mod;\n\n      // two low bits:\n      // 0 = left\n      // 1 = middle\n      // 2 = right\n      // 3 = release\n      // wheel up/down:\n      // 1, and 2 - with 64 added\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          button = ev.button !== null && ev.button !== undefined\n            ? +ev.button\n          : ev.which !== null && ev.which !== undefined\n            ? ev.which - 1\n          : null;\n\n          if (Browser.isMSIE) {\n            button = button === 1 ? 0 : button === 4 ? 1 : button;\n          }\n          break;\n        case 'mouseup':\n          button = 3;\n          break;\n        case 'DOMMouseScroll':\n          button = ev.detail < 0\n            ? 64\n          : 65;\n          break;\n        case 'wheel':\n          button = (<WheelEvent>ev).deltaY < 0\n            ? 64\n          : 65;\n          break;\n      }\n\n      // next three bits are the modifiers:\n      // 4 = shift, 8 = meta, 16 = control\n      shift = ev.shiftKey ? 4 : 0;\n      meta = ev.metaKey ? 8 : 0;\n      ctrl = ev.ctrlKey ? 16 : 0;\n      mod = shift | meta | ctrl;\n\n      // no mods\n      if (self.vt200Mouse) {\n        // ctrl only\n        mod &= ctrl;\n      } else if (!self.normalMouse) {\n        mod = 0;\n      }\n\n      // increment to SP\n      button = (32 + (mod << 2)) + button;\n\n      return button;\n    }\n\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n\n      // Prevent the focus on the textarea from getting lost\n      // and make sure we get focused on mousedown\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this.selectionManager.shouldForceSelection(ev)) {\n        return;\n      }\n\n      // send the button\n      sendButton(ev);\n\n      // fix for odd bug\n      // if (this.vt200Mouse && !this.normalMouse) {\n      if (this.vt200Mouse) {\n        (<any>ev).overrideType = 'mouseup';\n        sendButton(ev);\n        return this.cancel(ev);\n      }\n\n      // TODO: All mouse handling should be pulled into its own file.\n\n      // bind events\n      let moveHandler: (event: MouseEvent) => void;\n      if (this.normalMouse) {\n        moveHandler = (event: MouseEvent) => {\n          // Do nothing if normal mouse mode is on. This can happen if the mouse is held down when the\n          // terminal exits normalMouse mode.\n          if (!this.normalMouse) {\n            return;\n          }\n          sendMove(event);\n        };\n        // TODO: these event listeners should be managed by the disposable, the Terminal reference may\n        // be kept aroud if Terminal.dispose is fired when the mouse is down\n        this._document.addEventListener('mousemove', moveHandler);\n      }\n\n      // x10 compatibility mode can't send button releases\n      const handler = (ev: MouseEvent) => {\n        if (this.normalMouse && !this.x10Mouse) {\n          sendButton(ev);\n        }\n        if (moveHandler) {\n          // Even though this should only be attached when this.normalMouse is true, holding the\n          // mouse button down when normalMouse changes can happen. Just always try to remove it.\n          this._document.removeEventListener('mousemove', moveHandler);\n          moveHandler = null;\n        }\n        this._document.removeEventListener('mouseup', handler);\n        return this.cancel(ev);\n      };\n      this._document.addEventListener('mouseup', handler);\n\n      return this.cancel(ev);\n    }));\n\n    // if (this.normalMouse) {\n    //  on(this.document, 'mousemove', sendMove);\n    // }\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!this.mouseEvents) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this.applicationCursor ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this.handler(data);\n        }\n        return;\n      }\n      if (this.x10Mouse || this._vt300Mouse || this._decLocator) return;\n      sendButton(ev);\n      ev.preventDefault();\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onWheel(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchMove(ev);\n      return this.cancel(ev);\n    }));\n  }\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    if (this.renderer) {\n      this.renderer.refreshRows(start, end);\n    }\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    if (this.linkifier) {\n      this.linkifier.linkifyRows(start, end);\n    }\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this.selectionManager && this.selectionManager.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this.cursorState) {\n      this.cursorState = 1;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.get(0)[CHAR_DATA_ATTR_INDEX] !== this.eraseAttr()) {\n      newLine = this.buffer.getBlankLine(this.eraseAttr(), isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this.updateRange(this.buffer.scrollTop);\n    this.updateRange(this.buffer.scrollBottom);\n\n    /**\n     * This event is emitted whenever the terminal is scrolled.\n     * The one parameter passed is the new y display position.\n     *\n     * @event scroll\n     */\n    this.emit('scroll', this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this.emit('scroll', this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /**\n   * Writes text to the terminal.\n   * @param data The text to write to the terminal.\n   */\n  public write(data: string): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values (including the empty string)\n    if (!data) {\n      return;\n    }\n\n    this.writeBuffer.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this.handler(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBuffer.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWrite();\n      });\n    }\n  }\n\n  protected _innerWrite(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBuffer = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBuffer.length > bufferOffset) {\n      const data = this.writeBuffer[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBuffer.length === bufferOffset) {\n        this.handler(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._refreshStart = this.buffer.y;\n      this._refreshEnd = this.buffer.y;\n\n      // HACK: Set the parser state based on it's state at the time of return.\n      // This works around the bug #662 which saw the parser state reset in the\n      // middle of parsing escape sequence in two chunks. For some reason the\n      // state of the parser resets to 0 after exiting parser.parse. This change\n      // just sets the state back based on the correct return statement.\n\n      this._inputHandler.parse(data);\n\n      this.updateRange(this.buffer.y);\n      this.refresh(this._refreshStart, this._refreshEnd);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBuffer.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      setTimeout(() => this._innerWrite(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBuffer = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal, followed by a break line character (\\n).\n   * @param data The text to write to the terminal.\n   */\n  public writeln(data: string): void {\n    this.write(data + '\\r\\n');\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(flag: string, callback: (params: number[], collect: string) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(flag, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this.renderer.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this.renderer.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this.selectionManager ? this.selectionManager.hasSelection : false;\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this.selectionManager ? this.selectionManager.selectionText : '';\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    if (this.selectionManager) {\n      this.selectionManager.clearSelection();\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    if (this.selectionManager) {\n      this.selectionManager.selectAll();\n    }\n  }\n\n  public selectLines(start: number, end: number): void {\n    if (this.selectionManager) {\n      this.selectionManager.selectLines(start, end);\n    }\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.applicationCursor, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    // if (result.key === C0.DC3) { // XOFF\n    //   this._writeStopped = true;\n    // } else if (result.key === C0.DC1) { // XON\n    //   this._writeStopped = false;\n    // }\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    this.emit('keydown', event);\n    this.emit('key', result.key, event);\n    this.showCursor();\n    this.handler(result.key);\n\n    return this.cancel(event, true);\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isMSWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this.emit('keypress', key, ev);\n    this.emit('key', key, ev);\n    this.showCursor();\n    this.handler(key);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    this.emit('bell');\n    if (this._soundBell()) {\n      this.soundManager.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Log the current state to the console.\n   */\n  public log(text: string, data?: any): void {\n    if (!this.options.debug) return;\n    if (!this._context.console || !this._context.console.log) return;\n    this._context.console.log(text, data);\n  }\n\n  /**\n   * Log the current state as error to the console.\n   */\n  public error(text: string, data?: any): void {\n    if (!this.options.debug) return;\n    if (!this._context.console || !this._context.console.error) return;\n    this._context.console.error(text, data);\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this.charMeasure && (!this.charMeasure.width || !this.charMeasure.height)) {\n        this.charMeasure.measure(this.options);\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this.cols = x;\n    this.rows = y;\n    this.buffers.setupTabStops(this.cols);\n\n    if (this.charMeasure) {\n      this.charMeasure.measure(this.options);\n    }\n\n    this.refresh(0, this.rows - 1);\n    this.emit('resize', {cols: x, rows: y});\n  }\n\n  /**\n   * Updates the range of rows to refresh\n   * @param y The number of rows to refresh next.\n   */\n  public updateRange(y: number): void {\n    if (y < this._refreshStart) this._refreshStart = y;\n    if (y > this._refreshEnd) this._refreshEnd = y;\n    // if (y > this.refreshEnd) {\n    //   this.refreshEnd = y;\n    //   if (y > this.rows - 1) {\n    //     this.refreshEnd = this.rows - 1;\n    //   }\n    // }\n  }\n\n  /**\n   * Set the range of refreshing to the maximum value\n   */\n  public maxRange(): void {\n    this._refreshStart = 0;\n    this._refreshEnd = this.rows - 1;\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR));\n    }\n    this.refresh(0, this.rows - 1);\n    this.emit('scroll', this.buffer.ydisp);\n  }\n\n  /**\n   * If cur return the back color xterm feature attribute. Else return default attribute.\n   * @param cur\n   */\n  public ch(cur?: boolean): CharData {\n    if (cur) {\n      return [this.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n    }\n    return [DEFAULT_ATTR, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the 'data' event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  public handler(data: string): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this.options.disableStdin) {\n      return;\n    }\n\n    // Clear the selection if the selection manager is available and has an active selection\n    if (this.selectionManager && this.selectionManager.hasSelection) {\n      this.selectionManager.clearSelection();\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    if (this.buffer.ybase !== this.buffer.ydisp) {\n      this.scrollToBottom();\n    }\n    this.emit('data', data);\n  }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    /**\n     * This event is emitted when the title of the terminal is changed\n     * from inside the terminal. The parameter is the new title.\n     *\n     * @event title\n     */\n    this.emit('title', title);\n  }\n\n  /**\n   * ESC\n   */\n\n  /**\n   * ESC D Index (IND is 0x84).\n   */\n  public index(): void {\n    this.buffer.y++;\n    if (this.buffer.y > this.buffer.scrollBottom) {\n      this.buffer.y--;\n      this.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this.buffer.x >= this.cols) {\n      this.buffer.x--;\n    }\n  }\n\n  /**\n   * ESC M Reverse Index (RI is 0x8d).\n   *\n   * Move the cursor up one row, inserting a new blank line if necessary.\n   */\n  public reverseIndex(): void {\n    if (this.buffer.y === this.buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this.buffer.scrollBottom - this.buffer.scrollTop;\n      this.buffer.lines.shiftElements(this.buffer.y + this.buffer.ybase, scrollRegionHeight, 1);\n      this.buffer.lines.set(this.buffer.y + this.buffer.ybase, this.buffer.getBlankLine(this.eraseAttr()));\n      this.updateRange(this.buffer.scrollTop);\n      this.updateRange(this.buffer.scrollBottom);\n    } else {\n      this.buffer.y--;\n    }\n  }\n\n  /**\n   * ESC c Full Reset (RIS).\n   */\n  public reset(): void {\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const cursorState = this.cursorState;\n    this._setup();\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this.cursorState = cursorState;\n    this.refresh(0, this.rows - 1);\n    if (this.viewport) {\n      this.viewport.syncScrollArea();\n    }\n  }\n\n\n  /**\n   * ESC H Tab Set (HTS is 0x88).\n   */\n  public tabSet(): void {\n    this.buffer.tabs[this.buffer.x] = true;\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  // TODO: Remove when true color is implemented\n  public matchColor(r1: number, g1: number, b1: number): number {\n    const hash = (r1 << 16) | (g1 << 8) | b1;\n\n    if (matchColorCache[hash] !== null && matchColorCache[hash] !== undefined) {\n      return matchColorCache[hash];\n    }\n\n    let ldiff = Infinity;\n    let li = -1;\n    let i = 0;\n    let c: number;\n    let r2: number;\n    let g2: number;\n    let b2: number;\n    let diff: number;\n\n    for (; i < DEFAULT_ANSI_COLORS.length; i++) {\n      c = DEFAULT_ANSI_COLORS[i].rgba;\n      r2 = c >>> 24;\n      g2 = c >>> 16 & 0xFF;\n      b2 = c >>> 8 & 0xFF;\n      // assume that alpha is 0xFF\n\n      diff = matchColorDistance(r1, g1, b1, r2, g2, b2);\n\n      if (diff === 0) {\n        li = i;\n        break;\n      }\n\n      if (diff < ldiff) {\n        ldiff = diff;\n        li = i;\n      }\n    }\n\n    return matchColorCache[hash] = li;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n\n/**\n * TODO:\n * The below color-related code can be removed when true color is implemented.\n * It's only purpose is to match true color requests with the closest matching\n * ANSI color code.\n */\n\nconst matchColorCache: {[colorRGBHash: number]: number} = {};\n\n// http://stackoverflow.com/questions/1633828\nfunction matchColorDistance(r1: number, g1: number, b1: number, r2: number, g2: number, b2: number): number {\n  return Math.pow(30 * (r1 - r2), 2)\n    + Math.pow(59 * (g1 - g2), 2)\n    + Math.pow(11 * (b1 - b2), 2);\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../Strings';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n  }\n\n  public get element(): HTMLElement { return this._core.element; }\n  public get textarea(): HTMLTextAreaElement { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get markers(): IMarker[] { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public on(type: 'blur' | 'focus' | 'linefeed' | 'selection', listener: () => void): void;\n  public on(type: 'data', listener: (...args: any[]) => void): void;\n  public on(type: 'key', listener: (key?: string, event?: KeyboardEvent) => void): void;\n  public on(type: 'keypress' | 'keydown', listener: (event?: KeyboardEvent) => void): void;\n  public on(type: 'refresh', listener: (data?: { start: number; end: number; }) => void): void;\n  public on(type: 'resize', listener: (data?: { cols: number; rows: number; }) => void): void;\n  public on(type: 'scroll', listener: (ydisp?: number) => void): void;\n  public on(type: 'title', listener: (title?: string) => void): void;\n  public on(type: string, listener: (...args: any[]) => void): void;\n  public on(type: any, listener: any): void {\n    this._core.on(type, listener);\n  }\n  public off(type: string, listener: (...args: any[]) => void): void {\n    this._core.off(type, listener);\n  }\n  public emit(type: string, data?: any): void {\n    this._core.emit(type, data);\n  }\n  public addDisposableListener(type: string, handler: (...args: any[]) => void): IDisposable {\n    return this._core.addDisposableListener(type, handler);\n  }\n  public resize(columns: number, rows: number): void {\n    this._core.resize(columns, rows);\n  }\n  public writeln(data: string): void {\n    this._core.writeln(data);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public addCsiHandler(flag: string, callback: (params: number[], collect: string) => boolean): IDisposable {\n    return this._core.addCsiHandler(flag, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._core.dispose();\n  }\n  public destroy(): void {\n    this._core.destroy();\n  }\n  public scrollLines(amount: number): void {\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string): void {\n    this._core.write(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'rendererType' | 'termName'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'debug' | 'disableStdin' | 'enableBold' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'debug' | 'disableStdin' | 'enableBold' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public static applyAddon(addon: any): void {\n    addon.apply(Terminal);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * Fit terminal columns and rows to the dimensions of its DOM element.\n *\n * ## Approach\n *\n *    Rows: Truncate the division of the terminal parent element height by the\n *          terminal row height.\n * Columns: Truncate the division of the terminal parent element width by the\n *          terminal character width (apply display: inline at the terminal\n *          row and truncate its width with the current number of columns).\n */\n\nimport { Terminal } from 'xterm';\n\nexport interface IGeometry {\n  rows: number;\n  cols: number;\n}\n\nexport function proposeGeometry(term: Terminal): IGeometry {\n  if (!term.element.parentElement) {\n    return null;\n  }\n  const parentElementStyle = window.getComputedStyle(term.element.parentElement);\n  const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n  const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n  const elementStyle = window.getComputedStyle(term.element);\n  const elementPadding = {\n    top: parseInt(elementStyle.getPropertyValue('padding-top')),\n    bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n    right: parseInt(elementStyle.getPropertyValue('padding-right')),\n    left: parseInt(elementStyle.getPropertyValue('padding-left'))\n  };\n  const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n  const elementPaddingHor = elementPadding.right + elementPadding.left;\n  const availableHeight = parentElementHeight - elementPaddingVer;\n  const availableWidth = parentElementWidth - elementPaddingHor - (<any>term)._core.viewport.scrollBarWidth;\n  const geometry = {\n    cols: Math.floor(availableWidth / (<any>term)._core.renderer.dimensions.actualCellWidth),\n    rows: Math.floor(availableHeight / (<any>term)._core.renderer.dimensions.actualCellHeight)\n  };\n  return geometry;\n}\n\nexport function fit(term: Terminal): void {\n  const geometry = proposeGeometry(term);\n  if (geometry) {\n    // Force a full render\n    if (term.rows !== geometry.rows || term.cols !== geometry.cols) {\n      (<any>term)._core.renderer.clear();\n      term.resize(geometry.cols, geometry.rows);\n    }\n  }\n}\n\nexport function apply(terminalConstructor: typeof Terminal): void {\n  (<any>terminalConstructor.prototype).proposeGeometry = function (): IGeometry {\n    return proposeGeometry(this);\n  };\n\n  (<any>terminalConstructor.prototype).fit = function (): void {\n    fit(this);\n  };\n}\n",";(function(){'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){return\"undefined\"!=typeof window&&window===a?a:\"undefined\"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);\n$jscomp.SYMBOL_PREFIX=\"jscomp_symbol_\";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.Symbol=function(){var a=0;return function(b){return $jscomp.SYMBOL_PREFIX+(b||\"\")+a++}}();\n$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol(\"iterator\"));\"function\"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(a){var b=0;return $jscomp.iteratorPrototype(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})};\n$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.makeIterator=function(a){$jscomp.initSymbolIterator();var b=a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};\n$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(\".\");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.FORCE_POLYFILL_PROMISE=!1;\n$jscomp.polyfill(\"Promise\",function(a){function b(){this.batch_=null}function c(a){return a instanceof e?a:new e(function(b,c){b(a)})}if(a&&!$jscomp.FORCE_POLYFILL_PROMISE)return a;b.prototype.asyncExecute=function(a){null==this.batch_&&(this.batch_=[],this.asyncExecuteBatch_());this.batch_.push(a);return this};b.prototype.asyncExecuteBatch_=function(){var a=this;this.asyncExecuteFunction(function(){a.executeBatch_()})};var d=$jscomp.global.setTimeout;b.prototype.asyncExecuteFunction=function(a){d(a,\n0)};b.prototype.executeBatch_=function(){for(;this.batch_&&this.batch_.length;){var a=this.batch_;this.batch_=[];for(var b=0;b<a.length;++b){var c=a[b];a[b]=null;try{c()}catch(m){this.asyncThrow_(m)}}}this.batch_=null};b.prototype.asyncThrow_=function(a){this.asyncExecuteFunction(function(){throw a;})};var e=function(a){this.state_=0;this.result_=void 0;this.onSettledCallbacks_=[];var b=this.createResolveAndReject_();try{a(b.resolve,b.reject)}catch(l){b.reject(l)}};e.prototype.createResolveAndReject_=\nfunction(){function a(a){return function(e){c||(c=!0,a.call(b,e))}}var b=this,c=!1;return{resolve:a(this.resolveTo_),reject:a(this.reject_)}};e.prototype.resolveTo_=function(a){if(a===this)this.reject_(new TypeError(\"A Promise cannot resolve to itself\"));else if(a instanceof e)this.settleSameAsPromise_(a);else{a:switch(typeof a){case \"object\":var b=null!=a;break a;case \"function\":b=!0;break a;default:b=!1}b?this.resolveToNonPromiseObj_(a):this.fulfill_(a)}};e.prototype.resolveToNonPromiseObj_=function(a){var b=\nvoid 0;try{b=a.then}catch(l){this.reject_(l);return}\"function\"==typeof b?this.settleSameAsThenable_(b,a):this.fulfill_(a)};e.prototype.reject_=function(a){this.settle_(2,a)};e.prototype.fulfill_=function(a){this.settle_(1,a)};e.prototype.settle_=function(a,b){if(0!=this.state_)throw Error(\"Cannot settle(\"+a+\", \"+b+\"): Promise already settled in state\"+this.state_);this.state_=a;this.result_=b;this.executeOnSettledCallbacks_()};e.prototype.executeOnSettledCallbacks_=function(){if(null!=this.onSettledCallbacks_){for(var a=\n0;a<this.onSettledCallbacks_.length;++a)f.asyncExecute(this.onSettledCallbacks_[a]);this.onSettledCallbacks_=null}};var f=new b;e.prototype.settleSameAsPromise_=function(a){var b=this.createResolveAndReject_();a.callWhenSettled_(b.resolve,b.reject)};e.prototype.settleSameAsThenable_=function(a,b){var c=this.createResolveAndReject_();try{a.call(b,c.resolve,c.reject)}catch(m){c.reject(m)}};e.prototype.then=function(a,b){function c(a,b){return\"function\"==typeof a?function(b){try{d(a(b))}catch(w){f(w)}}:\nb}var d,f,g=new e(function(a,b){d=a;f=b});this.callWhenSettled_(c(a,d),c(b,f));return g};e.prototype.catch=function(a){return this.then(void 0,a)};e.prototype.callWhenSettled_=function(a,b){function c(){switch(e.state_){case 1:a(e.result_);break;case 2:b(e.result_);break;default:throw Error(\"Unexpected state: \"+e.state_);}}var e=this;null==this.onSettledCallbacks_?f.asyncExecute(c):this.onSettledCallbacks_.push(c)};e.resolve=c;e.reject=function(a){return new e(function(b,c){c(a)})};e.race=function(a){return new e(function(b,\ne){for(var d=$jscomp.makeIterator(a),f=d.next();!f.done;f=d.next())c(f.value).callWhenSettled_(b,e)})};e.all=function(a){var b=$jscomp.makeIterator(a),d=b.next();return d.done?c([]):new e(function(a,e){function f(b){return function(c){g[b]=c;k--;0==k&&a(g)}}var g=[],k=0;do g.push(void 0),k++,c(d.value).callWhenSettled_(f(g.length-1),e),d=b.next();while(!d.done)})};return e},\"es6\",\"es3\");\n$jscomp.polyfill(\"Math.trunc\",function(a){return a?a:function(a){a=Number(a);if(isNaN(a)||Infinity===a||-Infinity===a||0===a)return a;var b=Math.floor(Math.abs(a));return 0>a?-b:b}},\"es6\",\"es3\");$jscomp.iteratorFromArray=function(a,b){$jscomp.initSymbolIterator();a instanceof String&&(a+=\"\");var c=0,d={next:function(){if(c<a.length){var e=c++;return{value:b(e,a[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d};\n$jscomp.polyfill(\"Array.prototype.entries\",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(a,c){return[a,c]})}},\"es6\",\"es3\");$jscomp.checkEs6ConformanceViaProxy=function(){try{var a={},b=Object.create(new $jscomp.global.Proxy(a,{get:function(c,d,e){return c==a&&\"q\"==d&&e==b}}));return!0===b.q}catch(c){return!1}};$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS=!1;$jscomp.ES6_CONFORMANCE=$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS&&$jscomp.checkEs6ConformanceViaProxy();\n$jscomp.owns=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};\n$jscomp.polyfill(\"WeakMap\",function(a){function b(){if(!a||!Object.seal)return!1;try{var b=Object.seal({}),c=Object.seal({}),e=new a([[b,2],[c,3]]);if(2!=e.get(b)||3!=e.get(c))return!1;e.delete(b);e.set(c,4);return!e.has(b)&&4==e.get(c)}catch(p){return!1}}function c(a){$jscomp.owns(a,e)||$jscomp.defineProperty(a,e,{value:{}})}function d(a){var b=Object[a];b&&(Object[a]=function(a){c(a);return b(a)})}if($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS){if(a&&$jscomp.ES6_CONFORMANCE)return a}else if(b())return a;\nvar e=\"$jscomp_hidden_\"+Math.random();d(\"freeze\");d(\"preventExtensions\");d(\"seal\");var f=0,g=function(a){this.id_=(f+=Math.random()+1).toString();if(a){$jscomp.initSymbol();$jscomp.initSymbolIterator();a=$jscomp.makeIterator(a);for(var b;!(b=a.next()).done;)b=b.value,this.set(b[0],b[1])}};g.prototype.set=function(a,b){c(a);if(!$jscomp.owns(a,e))throw Error(\"WeakMap key fail: \"+a);a[e][this.id_]=b;return this};g.prototype.get=function(a){return $jscomp.owns(a,e)?a[e][this.id_]:void 0};g.prototype.has=\nfunction(a){return $jscomp.owns(a,e)&&$jscomp.owns(a[e],this.id_)};g.prototype.delete=function(a){return $jscomp.owns(a,e)&&$jscomp.owns(a[e],this.id_)?delete a[e][this.id_]:!1};return g},\"es6\",\"es3\");$jscomp.MapEntry=function(){};\n$jscomp.polyfill(\"Map\",function(a){function b(){if($jscomp.ASSUME_NO_NATIVE_MAP||!a||\"function\"!=typeof a||!a.prototype.entries||\"function\"!=typeof Object.seal)return!1;try{var b=Object.seal({x:4}),c=new a($jscomp.makeIterator([[b,\"s\"]]));if(\"s\"!=c.get(b)||1!=c.size||c.get({x:4})||c.set({x:4},\"t\")!=c||2!=c.size)return!1;var e=c.entries(),d=e.next();if(d.done||d.value[0]!=b||\"s\"!=d.value[1])return!1;d=e.next();return d.done||4!=d.value[0].x||\"t\"!=d.value[1]||!e.next().done?!1:!0}catch(r){return!1}}\nif($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS){if(a&&$jscomp.ES6_CONFORMANCE)return a}else if(b())return a;$jscomp.initSymbol();$jscomp.initSymbolIterator();var c=new WeakMap,d=function(a){this.data_={};this.head_=g();this.size=0;if(a){a=$jscomp.makeIterator(a);for(var b;!(b=a.next()).done;)b=b.value,this.set(b[0],b[1])}};d.prototype.set=function(a,b){var c=e(this,a);c.list||(c.list=this.data_[c.id]=[]);c.entry?c.entry.value=b:(c.entry={next:this.head_,previous:this.head_.previous,head:this.head_,\nkey:a,value:b},c.list.push(c.entry),this.head_.previous.next=c.entry,this.head_.previous=c.entry,this.size++);return this};d.prototype.delete=function(a){a=e(this,a);return a.entry&&a.list?(a.list.splice(a.index,1),a.list.length||delete this.data_[a.id],a.entry.previous.next=a.entry.next,a.entry.next.previous=a.entry.previous,a.entry.head=null,this.size--,!0):!1};d.prototype.clear=function(){this.data_={};this.head_=this.head_.previous=g();this.size=0};d.prototype.has=function(a){return!!e(this,a).entry};\nd.prototype.get=function(a){return(a=e(this,a).entry)&&a.value};d.prototype.entries=function(){return f(this,function(a){return[a.key,a.value]})};d.prototype.keys=function(){return f(this,function(a){return a.key})};d.prototype.values=function(){return f(this,function(a){return a.value})};d.prototype.forEach=function(a,b){for(var c=this.entries(),e;!(e=c.next()).done;)e=e.value,a.call(b,e[1],e[0],this)};d.prototype[Symbol.iterator]=d.prototype.entries;var e=function(a,b){var e=b&&typeof b;\"object\"==\ne||\"function\"==e?c.has(b)?e=c.get(b):(e=\"\"+ ++k,c.set(b,e)):e=\"p_\"+b;var d=a.data_[e];if(d&&$jscomp.owns(a.data_,e))for(a=0;a<d.length;a++){var f=d[a];if(b!==b&&f.key!==f.key||b===f.key)return{id:e,list:d,index:a,entry:f}}return{id:e,list:d,index:-1,entry:void 0}},f=function(a,b){var c=a.head_;return $jscomp.iteratorPrototype(function(){if(c){for(;c.head!=a.head_;)c=c.previous;for(;c.next!=c.head;)return c=c.next,{done:!1,value:b(c)};c=null}return{done:!0,value:void 0}})},g=function(){var a={};return a.previous=\na.next=a.head=a},k=0;return d},\"es6\",\"es3\");$jscomp.objectCreate=$jscomp.ASSUME_ES5||\"function\"==typeof Object.create?Object.create:function(a){var b=function(){};b.prototype=a;return new b};\n$jscomp.construct=function(){function a(){function a(){}new a;Reflect.construct(a,[],function(){});return new a instanceof a}if(\"undefined\"!=typeof Reflect&&Reflect.construct){if(a())return Reflect.construct;var b=Reflect.construct;return function(a,d,e){a=b(a,d);e&&Reflect.setPrototypeOf(a,e.prototype);return a}}return function(a,b,e){void 0===e&&(e=a);e=$jscomp.objectCreate(e.prototype||Object.prototype);return Function.prototype.apply.call(a,e,b)||e}}();\n$jscomp.polyfill(\"Reflect.construct\",function(a){return $jscomp.construct},\"es6\",\"es3\");$jscomp.underscoreProtoCanBeSet=function(){var a={a:!0},b={};try{return b.__proto__=a,b.a}catch(c){}return!1};$jscomp.setPrototypeOf=\"function\"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+\" is not extensible\");return a}:null;\n$jscomp.polyfill(\"Reflect.setPrototypeOf\",function(a){if(a)return a;if($jscomp.setPrototypeOf){var b=$jscomp.setPrototypeOf;return function(a,d){try{return b(a,d),!0}catch(e){return!1}}}return null},\"es6\",\"es5\");var COMPILED=!0,goog=goog||{};goog.global=this;goog.isDef=function(a){return void 0!==a};\ngoog.exportPath_=function(a,b,c){a=a.split(\".\");c=c||goog.global;a[0]in c||!c.execScript||c.execScript(\"var \"+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]?c[d]:c[d]={}};\ngoog.define=function(a,b){COMPILED||(goog.global.CLOSURE_UNCOMPILED_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,a)?b=goog.global.CLOSURE_UNCOMPILED_DEFINES[a]:goog.global.CLOSURE_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,a)&&(b=goog.global.CLOSURE_DEFINES[a]));goog.exportPath_(a,b)};goog.DEBUG=!0;goog.LOCALE=\"en\";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;goog.provide=function(a){if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace \"'+a+'\" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(\".\")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\ngoog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error(\"Invalid module identifier\");if(!goog.isInModuleLoader_())throw Error(\"Module \"+a+\" has been loaded incorrectly.\");if(goog.moduleLoaderState_.moduleName)throw Error(\"goog.module may only be called once per module.\");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace \"'+a+'\" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};\ngoog.module.getInternal_=function(a){if(!COMPILED)return goog.isProvided_(a)?a in goog.loadedModules_?goog.loadedModules_[a]:goog.getObjectByName(a):null};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return null!=goog.moduleLoaderState_};goog.module.declareTestMethods=function(){if(!goog.isInModuleLoader_())throw Error(\"goog.module.declareTestMethods must be called from within a goog.module\");goog.moduleLoaderState_.declareTestMethods=!0};\ngoog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");goog.moduleLoaderState_.declareLegacyNamespace=!0};\ngoog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||\"\",Error(\"Importing test-only code into non-debug environment\"+(a?\": \"+a:\".\"));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={\"goog.module\":!0});\ngoog.getObjectByName=function(a,b){a=a.split(\".\");b=b||goog.global;for(var c;c=a.shift();)if(goog.isDefAndNotNull(b[c]))b=b[c];else return null;return b};goog.globalize=function(a,b){b=b||goog.global;for(var c in a)b[c]=a[c]};goog.addDependency=function(a,b,c,d){if(goog.DEPENDENCIES_ENABLED){var e;a=a.replace(/\\\\/g,\"/\");for(var f=goog.dependencies_,g=0;e=b[g];g++)f.nameToPath[e]=a,f.pathIsModule[a]=!!d;for(d=0;b=c[d];d++)a in f.requires||(f.requires[a]={}),f.requires[a][b]=!0}};\ngoog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};\ngoog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_&&goog.maybeProcessDeferredDep_(a);if(goog.isProvided_(a))return goog.isInModuleLoader_()?goog.module.getInternal_(a):null;if(goog.ENABLE_DEBUG_LOADER){var b=goog.getPathFromDeps_(a);if(b)return goog.included_[b]=!0,goog.writeScripts_(),null}a=\"goog.require could not find: \"+a;goog.logToConsole_(a);throw Error(a);}};goog.basePath=\"\";goog.nullFunction=function(){};\ngoog.abstractMethod=function(){throw Error(\"unimplemented abstract method\");};goog.addSingletonGetter=function(a){a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;\ngoog.DEPENDENCIES_ENABLED&&(goog.included_={},goog.dependencies_={pathIsModule:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}},goog.inHtmlDocument_=function(){var a=goog.global.document;return\"undefined\"!=typeof a&&\"write\"in a},goog.findBasePath_=function(){if(goog.global.CLOSURE_BASE_PATH)goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_())for(var a=goog.global.document.getElementsByTagName(\"SCRIPT\"),b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf(\"?\");\nd=-1==d?c.length:d;if(\"base.js\"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}},goog.importScript_=function(a,b){(goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_)(a,b)&&(goog.dependencies_.written[a]=!0)},goog.IS_OLD_IE_=!goog.global.atob&&goog.global.document&&goog.global.document.all,goog.importModule_=function(a){goog.importScript_(\"\",'goog.retrieveAndExecModule_(\"'+a+'\");')&&(goog.dependencies_.written[a]=!0)},goog.queuedModules_=[],goog.wrapModule_=function(a,b){return goog.LOAD_MODULE_USING_EVAL&&\ngoog.isDef(goog.global.JSON)?\"goog.loadModule(\"+goog.global.JSON.stringify(b+\"\\n//# sourceURL=\"+a+\"\\n\")+\");\":'goog.loadModule(function(exports) {\"use strict\";'+b+\"\\n;return exports});\\n//# sourceURL=\"+a+\"\\n\"},goog.loadQueuedModules_=function(){var a=goog.queuedModules_.length;if(0<a){var b=goog.queuedModules_;goog.queuedModules_=[];for(var c=0;c<a;c++)goog.maybeProcessDeferredPath_(b[c])}},goog.maybeProcessDeferredDep_=function(a){goog.isDeferredModule_(a)&&goog.allDepsAreAvailable_(a)&&(a=goog.getPathFromDeps_(a),\ngoog.maybeProcessDeferredPath_(goog.basePath+a))},goog.isDeferredModule_=function(a){return(a=goog.getPathFromDeps_(a))&&goog.dependencies_.pathIsModule[a]?goog.basePath+a in goog.dependencies_.deferred:!1},goog.allDepsAreAvailable_=function(a){if((a=goog.getPathFromDeps_(a))&&a in goog.dependencies_.requires)for(var b in goog.dependencies_.requires[a])if(!goog.isProvided_(b)&&!goog.isDeferredModule_(b))return!1;return!0},goog.maybeProcessDeferredPath_=function(a){if(a in goog.dependencies_.deferred){var b=\ngoog.dependencies_.deferred[a];delete goog.dependencies_.deferred[a];goog.globalEval(b)}},goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:void 0,declareTestMethods:!1};if(goog.isFunction(a))var c=a.call(goog.global,{});else if(goog.isString(a))c=goog.loadModuleFromSource_.call(goog.global,a);else throw Error(\"Invalid module definition\");var d=goog.moduleLoaderState_.moduleName;if(!goog.isString(d)||!d)throw Error('Invalid module name \"'+d+'\"');goog.moduleLoaderState_.declareLegacyNamespace?\ngoog.constructNamespace_(d,c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&Object.seal(c);goog.loadedModules_[d]=c;if(goog.moduleLoaderState_.declareTestMethods)for(var e in c)if(0===e.indexOf(\"test\",0)||\"tearDown\"==e||\"setUp\"==e||\"setUpPage\"==e||\"tearDownPage\"==e)goog.global[e]=c[e]}finally{goog.moduleLoaderState_=b}},goog.loadModuleFromSource_=function(a){eval(a);return{}},goog.writeScriptSrcNode_=function(a){goog.global.document.write('<script type=\"text/javascript\" src=\"'+a+'\">\\x3c/script>')},goog.appendScriptSrcNode_=\nfunction(a){var b=goog.global.document,c=b.createElement(\"script\");c.type=\"text/javascript\";c.src=a;c.defer=!1;c.async=!1;b.head.appendChild(c)},goog.writeScriptTag_=function(a,b){if(goog.inHtmlDocument_()){var c=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&\"complete\"==c.readyState){if(/\\bdeps.js$/.test(a))return!1;throw Error('Cannot write \"'+a+'\" after document load');}var d=goog.IS_OLD_IE_;void 0===b?d?(b=\" onreadystatechange='goog.onScriptLoad_(this, \"+ ++goog.lastNonModuleScriptIndex_+\n\")' \",c.write('<script type=\"text/javascript\" src=\"'+a+'\"'+b+\">\\x3c/script>\")):goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING?goog.appendScriptSrcNode_(a):goog.writeScriptSrcNode_(a):c.write('<script type=\"text/javascript\">'+b+\"\\x3c/script>\");return!0}return!1},goog.lastNonModuleScriptIndex_=0,goog.onScriptLoad_=function(a,b){\"complete\"==a.readyState&&goog.lastNonModuleScriptIndex_==b&&goog.loadQueuedModules_();return!0},goog.writeScripts_=function(){function a(e){if(!(e in d.written)){if(!(e in d.visited)&&\n(d.visited[e]=!0,e in d.requires))for(var f in d.requires[e])if(!goog.isProvided_(f))if(f in d.nameToPath)a(d.nameToPath[f]);else throw Error(\"Undefined nameToPath for \"+f);e in c||(c[e]=!0,b.push(e))}}var b=[],c={},d=goog.dependencies_;for(f in goog.included_)d.written[f]||a(f);for(var e=0;e<b.length;e++){var f=b[e];goog.dependencies_.written[f]=!0}var g=goog.moduleLoaderState_;goog.moduleLoaderState_=null;for(e=0;e<b.length;e++)if(f=b[e])d.pathIsModule[f]?goog.importModule_(goog.basePath+f):goog.importScript_(goog.basePath+\nf);else throw goog.moduleLoaderState_=g,Error(\"Undefined script input\");goog.moduleLoaderState_=g},goog.getPathFromDeps_=function(a){return a in goog.dependencies_.nameToPath?goog.dependencies_.nameToPath[a]:null},goog.findBasePath_(),goog.global.CLOSURE_NO_DEPS||goog.importScript_(goog.basePath+\"deps.js\"));goog.normalizePath_=function(a){a=a.split(\"/\");for(var b=0;b<a.length;)\".\"==a[b]?a.splice(b,1):b&&\"..\"==a[b]&&a[b-1]&&\"..\"!=a[b-1]?a.splice(--b,2):b++;return a.join(\"/\")};\ngoog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);var b=new goog.global.XMLHttpRequest;b.open(\"get\",a,!1);b.send();return b.responseText};\ngoog.retrieveAndExecModule_=function(a){if(!COMPILED){var b=a;a=goog.normalizePath_(a);var c=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_,d=goog.loadFileSync_(a);if(null!=d)d=goog.wrapModule_(a,d),goog.IS_OLD_IE_?(goog.dependencies_.deferred[b]=d,goog.queuedModules_.push(b)):c(a,d);else throw Error(\"load of \"+a+\"failed\");}};\ngoog.typeOf=function(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return\"array\"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&\"function\"==typeof a.getFullYear};goog.isString=function(a){return\"string\"==typeof a};\ngoog.isBoolean=function(a){return\"boolean\"==typeof a};goog.isNumber=function(a){return\"number\"==typeof a};goog.isFunction=function(a){return\"function\"==goog.typeOf(a)};goog.isObject=function(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){\"removeAttribute\"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};\ngoog.UID_PROPERTY_=\"closure_uid_\"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(a.clone)return a.clone();b=\"array\"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};\ngoog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};\ngoog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};\ngoog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,\"JavaScript\");else if(goog.global.eval)if(null==goog.evalWorksForGlobals_&&(goog.global.eval(\"var _et_ = 1;\"),\"undefined\"!=typeof goog.global._et_?(delete goog.global._et_,goog.evalWorksForGlobals_=!0):goog.evalWorksForGlobals_=!1),goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement(\"SCRIPT\");c.type=\"text/javascript\";c.defer=!1;c.appendChild(b.createTextNode(a));b.body.appendChild(c);\nb.body.removeChild(c)}else throw Error(\"goog.globalEval not available\");};goog.evalWorksForGlobals_=null;goog.getCssName=function(a,b){var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split(\"-\");for(var b=[],e=0;e<a.length;e++)b.push(c(a[e]));return b.join(\"-\")};d=goog.cssNameMapping_?\"BY_WHOLE\"==goog.cssNameMappingStyle_?c:d:function(a){return a};return b?a+\"-\"+d(b):d(a)};goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};\n!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b){b&&(a=a.replace(/\\{\\$([^}]+)}/g,function(a,d){return d in b?b[d]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};goog.exportProperty=function(a,b,c){a[b]=c};\ngoog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var e=Array(arguments.length-2),d=2;d<arguments.length;d++)e[d-2]=arguments[d];return b.prototype[c].apply(a,e)}};\ngoog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");if(d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];f=!1;for(var g=a.constructor;g;g=\ng.superClass_&&g.superClass_.constructor)if(g.prototype[b]===d)f=!0;else if(f)return g.prototype[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error(\"goog.base called from a method of one name to a method of a different name\");};goog.scope=function(a){a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);\ngoog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error(\"cannot instantiate an interface (no constructor defined).\");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;\ngoog.defineClass.createSealingConstructor_=function(a,b){if(goog.defineClass.SEAL_CLASS_INSTANCES&&Object.seal instanceof Function){if(b&&b.prototype&&b.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_])return a;var c=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===c&&Object.seal(b);return b};return c}return a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\ngoog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_=\"goog_defineClass_legacy_unsealable\";var LOG_ALL=-1,LOG_NONE=0,LOG_OTHER=1,LOG_CPU=2,LOG_FPU=4,LOG_MEM=8,LOG_DMA=16,LOG_IO=32,LOG_PS2=64,LOG_PIC=128,LOG_VGA=256,LOG_PIT=512,LOG_MOUSE=1024,LOG_PCI=2048,LOG_BIOS=4096,LOG_FLOPPY=8192,LOG_SERIAL=16384,LOG_DISK=32768,LOG_RTC=65536,LOG_HPET=131072,LOG_ACPI=262144,LOG_APIC=524288,LOG_NET=1048576,LOG_VIRTIO=2097152,LOG_9P=4194304,LOG_SB16=8388608,LOG_NAMES=[[1,\"\"],[LOG_CPU,\"CPU\"],[LOG_DISK,\"DISK\"],[LOG_FPU,\"FPU\"],[LOG_MEM,\"MEM\"],[LOG_DMA,\"DMA\"],[LOG_IO,\"IO\"],[LOG_PS2,\"PS2\"],[LOG_PIC,\"PIC\"],\n[LOG_VGA,\"VGA\"],[LOG_PIT,\"PIT\"],[LOG_MOUSE,\"MOUS\"],[LOG_PCI,\"PCI\"],[LOG_BIOS,\"BIOS\"],[LOG_FLOPPY,\"FLOP\"],[LOG_SERIAL,\"SERI\"],[LOG_RTC,\"RTC\"],[LOG_HPET,\"HPET\"],[LOG_ACPI,\"ACPI\"],[LOG_APIC,\"APIC\"],[LOG_NET,\"NET\"],[LOG_VIRTIO,\"VIO\"],[LOG_9P,\"9P\"],[LOG_SB16,\"SB16\"]],TLB_SYSTEM_READ=1,TLB_SYSTEM_WRITE=2,TLB_USER_READ=4,TLB_USER_WRITE=8,flag_carry=1,flag_parity=4,flag_adjust=16,flag_zero=64,flag_sign=128,flag_trap=256,flag_interrupt=512,flag_direction=1024,flag_overflow=2048,flag_iopl=12288,flag_nt=16384,\nflag_rf=65536,flag_vm=131072,flag_ac=262144,flag_vif=524288,flag_vip=1048576,flag_id=2097152,flags_default=2,flags_mask=flag_carry|flag_parity|flag_adjust|flag_zero|flag_sign|flag_trap|flag_interrupt|flag_direction|flag_overflow|flag_iopl|flag_nt|flag_rf|flag_vm|flag_ac|flag_vif|flag_vip|flag_id,flags_all=flag_carry|flag_parity|flag_adjust|flag_zero|flag_sign|flag_overflow,OPSIZE_8=7,OPSIZE_16=15,OPSIZE_32=31,PSE_ENABLED=128,reg_eax=0,reg_ecx=1,reg_edx=2,reg_ebx=3,reg_esp=4,reg_ebp=5,reg_esi=6,reg_edi=\n7,reg_ax=0,reg_cx=2,reg_dx=4,reg_bx=6,reg_sp=8,reg_bp=10,reg_si=12,reg_di=14,reg_al=0,reg_cl=4,reg_dl=8,reg_bl=12,reg_ah=1,reg_ch=5,reg_dh=9,reg_bh=13,reg_es=0,reg_cs=1,reg_ss=2,reg_ds=3,reg_fs=4,reg_gs=5,reg_tr=6,reg_ldtr=7,MMAP_BLOCK_BITS=17,MMAP_BLOCK_SIZE=1<<MMAP_BLOCK_BITS,MEM_PAGE_WRITTEN=1,MAGIC_CPU_EXCEPTION=233495534,REPEAT_STRING_PREFIX_NONE=0,REPEAT_STRING_PREFIX_NZ=1,REPEAT_STRING_PREFIX_Z=2,CR0_PE=1,CR0_MP=2,CR0_EM=4,CR0_TS=8,CR0_ET=16,CR0_WP=65536,CR0_NW=536870912,CR0_CD=1073741824,\nCR0_PG=-2147483648,CR4_VME=1,CR4_PVI=2,CR4_TSD=4,CR4_PSE=16,CR4_DE=8,CR4_PAE=32,CR4_PGE=128,CR4_OSFXSR=512,CR4_OSXMMEXCPT=1024,SEG_PREFIX_NONE=-1,SEG_PREFIX_ZERO=7,IA32_SYSENTER_CS=372,IA32_SYSENTER_ESP=373,IA32_SYSENTER_EIP=374,IA32_TIME_STAMP_COUNTER=16,IA32_PLATFORM_ID=23,MSR_EBC_FREQUENCY_ID=44,IA32_APIC_BASE_MSR=27,IA32_BIOS_SIGN_ID=139,IA32_MISC_ENABLE=416,IA32_RTIT_CTL=1392,MSR_SMI_COUNT=52,IA32_MCG_CAP=377,IA32_KERNEL_GS_BASE=-1073741567,MSR_PKG_C2_RESIDENCY=1549,IA32_APIC_BASE_BSP=256,IA32_APIC_BASE_EXTD=\n1024,IA32_APIC_BASE_EN=2048,TSR_BACKLINK=0,TSR_CR3=28,TSR_EIP=32,TSR_EFLAGS=36,TSR_EAX=40,TSR_ECX=44,TSR_EDX=48,TSR_EBX=52,TSR_ESP=56,TSR_EBP=60,TSR_ESI=64,TSR_EDI=68,TSR_ES=72,TSR_CS=76,TSR_SS=80,TSR_DS=84,TSR_FS=88,TSR_GS=92,TSR_LDT=96,FW_CFG_SIGNATURE=0,FW_CFG_RAM_SIZE=3,FW_CFG_NB_CPUS=5,PREFIX_MASK_REP=24,PREFIX_REPZ=8,PREFIX_REPNZ=16,PREFIX_MASK_SEGMENT=7,PREFIX_MASK_OPSIZE=32,PREFIX_MASK_ADDRSIZE=64,PREFIX_F2=PREFIX_REPNZ,PREFIX_F3=PREFIX_REPZ,PREFIX_66=PREFIX_MASK_OPSIZE,MXCSR_MASK=65471,MIXER_CHANNEL_LEFT=\n0,MIXER_CHANNEL_RIGHT=1,MIXER_CHANNEL_BOTH=2,MIXER_SRC_MASTER=0,MIXER_SRC_PCSPEAKER=1,MIXER_SRC_DAC=2;\"undefined\"===typeof window||window.requestAnimationFrame||(window.requestAnimationFrame=window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame);\nfunction ScreenAdapter(a,b){function c(a){a=a.toString(16);return\"#\"+Array(7-a.length).join(\"0\")+a}function d(a,b,c,d){a.style.width=\"\";a.style.height=\"\";d&&(a.style.transform=a.style.webkitTransform=a.style.MozTransform=\"\");var f=a.getBoundingClientRect();d?a.style.transform=a.style.webkitTransform=a.style.MozTransform=(1===b?\"\":\" scaleX(\"+b+\")\")+(1===c?\"\":\" scaleY(\"+c+\")\"):(0===b%1&&0===c%1?(e.style.imageRendering=\"pixelated\",e.style[\"-ms-interpolation-mode\"]=\"nearest-neighbor\"):(e.style.imageRendering=\n\"\",e.style[\"-ms-interpolation-mode\"]=\"\"),d=window.devicePixelRatio||1,0!==d%1&&(b/=d,c/=d));1!==b&&(a.style.width=f.width*b+\"px\");1!==c&&(a.style.height=f.height*c+\"px\")}console.assert(a,\"1st argument must be a DOM container\");var e=a.getElementsByTagName(\"canvas\")[0],f=e.getContext(\"2d\"),g=a.getElementsByTagName(\"div\")[0],k=document.createElement(\"div\"),l,m,p,n,r=1,q=1,u,w=!1,x,A,C,D=this;a=new Uint16Array([199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,\n249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,186,191,8976,172,189,188,161,171,187,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,945,223,915,960,931,963,181,964,934,920,937,948,8734,966,949,8745,8801,177,8805,8804,8992,8993,247,8776,176,8729,183,8730,8319,178,9632,160]);for(var B=new Uint16Array([32,\n9786,9787,9829,9830,9827,9824,8226,9688,9675,9689,9794,9792,9834,9835,9788,9658,9668,8597,8252,182,167,9644,8616,8593,8595,8594,8592,8735,8596,9650,9660]),z=[],y,v=0;256>v;v++)y=127<v?a[v-128]:32>v?B[v]:v,z[v]=String.fromCharCode(y);f.imageSmoothingEnabled=!1;k.style.position=\"absolute\";k.style.backgroundColor=\"#ccc\";k.style.width=\"7px\";k.style.display=\"inline-block\";g.style.display=\"block\";e.style.display=\"none\";this.bus=b;b.register(\"screen-set-mode\",function(a){this.set_mode(a)},this);b.register(\"screen-fill-buffer-end\",\nfunction(a){this.update_buffer(a)},this);b.register(\"screen-put-char\",function(a){this.put_char(a[0],a[1],a[2],a[3],a[4])},this);b.register(\"screen-update-cursor\",function(a){this.update_cursor(a[0],a[1])},this);b.register(\"screen-update-cursor-scanline\",function(a){this.update_cursor_scanline(a[0],a[1])},this);b.register(\"screen-clear\",function(){this.clear_screen()},this);b.register(\"screen-set-size-text\",function(a){this.set_size_text(a[0],a[1])},this);b.register(\"screen-set-size-graphical\",function(a){this.set_size_graphical(a[0],\na[1],a[2],a[3])},this);this.init=function(){this.set_size_text(80,25);this.timer()};this.make_screenshot=function(){try{window.open(e.toDataURL())}catch(G){}};this.put_char=function(a,b,c,e,d){a<C&&b<A&&(b=3*(a*A+b),x[b]=c,x[b+1]=e,x[b+2]=d,u[a]=1)};this.timer=function(){requestAnimationFrame(w?E:F)};var F=function(){for(var a=0;a<C;a++)u[a]&&(D.text_update_row(a),u[a]=0);this.timer()}.bind(this),E=function(){this.bus.send(\"screen-fill-buffer\");this.timer()}.bind(this);this.destroy=function(){};this.set_mode=\nfunction(a){(w=a)?(g.style.display=\"none\",e.style.display=\"block\"):(g.style.display=\"block\",e.style.display=\"none\")};this.clear_screen=function(){f.fillStyle=\"#000\";f.fillRect(0,0,e.width,e.height)};this.set_size_text=function(a,b){if(a!==A||b!==C){u=new Int8Array(b);x=new Int32Array(a*b*3);A=a;for(C=b;g.childNodes.length>b;)g.removeChild(g.firstChild);for(;g.childNodes.length<b;)g.appendChild(document.createElement(\"div\"));for(a=0;a<b;a++)this.text_update_row(a);d(g,r,q,!0)}};this.set_size_graphical=\nfunction(a,b,c,g){DEBUG_SCREEN_LAYERS&&(a=c,b=g);e.style.display=\"block\";e.width=a;e.height=b;l=f.createImageData(c,g);new Uint8Array(l.data.buffer);m=new Int32Array(l.data.buffer);this.bus.send(\"screen-tell-buffer\",[m],[m.buffer]);d(e,r,q,!1)};this.set_scale=function(a,b){r=a;q=b;d(g,r,q,!0);d(e,r,q,!1)};this.set_scale(r,q);this.update_cursor_scanline=function(a,b){a&32?k.style.display=\"none\":(k.style.display=\"inline\",k.style.height=Math.min(15,b-a)+\"px\",k.style.marginTop=Math.min(15,a)+\"px\")};this.update_cursor=\nfunction(a,b){if(a!==p||b!==n)u[a]=1,u[p]=1,p=a,n=b};this.text_update_row=function(a){var b=3*a*A,e;var d=g.childNodes[a];var f=document.createElement(\"div\");for(var l=0;l<A;){var m=document.createElement(\"span\");var q=x[b+1];var r=x[b+2];m.style.backgroundColor=c(q);m.style.color=c(r);for(e=\"\";l<A&&x[b+1]===q&&x[b+2]===r;)if(e+=z[x[b]],l++,b+=3,a===p)if(l===n)break;else if(l===n+1){f.appendChild(k);break}m.textContent=e;f.appendChild(m)}d.parentNode.replaceChild(f,d)};this.update_buffer=function(a){DEBUG_SCREEN_LAYERS?\n(f.putImageData(l,0,0),f.strokeStyle=\"#0F0\",f.lineWidth=4,a.forEach(function(a){f.strokeRect(a.buffer_x,a.buffer_y,a.buffer_width,a.buffer_height)}),f.lineWidth=1):a.forEach(function(a){f.putImageData(l,a.screen_x-a.buffer_x,a.screen_y-a.buffer_y,a.buffer_x,a.buffer_y,a.buffer_width,a.buffer_height)})};this.init()};var DEBUG_CONSOLE=null!==(new URL(window.document.location.href)).searchParams.get(\"debug\");function debug(a){for(var b=[],c=0;c<arguments.length;++c)b[c-0]=arguments[c];DEBUG_CONSOLE&&console.log.apply(console,b)}\nvar V9FS_MAGIC=16914839,P9_TSTATFS=8,P9_TLOPEN=12,P9_TLCREATE=14,P9_TSYMLINK=16,P9_TMKNOD=18,P9_TREADLINK=22,P9_TGETATTR=24,P9_TSETATTR=26,P9_TXATTRWALK=30,P9_TXATTRCREATE=32,P9_TREADDIR=40,P9_TFSYNC=50,P9_TLOCK=52,P9_TGETLOCK=54,P9_TLINK=70,P9_TMKDIR=72,P9_TRENAMEAT=74,P9_TUNLINKAT=76,P9_TVERSION=100,P9_TATTACH=104,P9_TERROR=106,P9_TFLUSH=108,P9_TWALK=110,P9_TOPEN=112,P9_TREAD=116,P9_TWRITE=118,P9_TCLUNK=120,P9_TRENAME=20,P9_TAUTH=102,P9_TCREATE=114,P9_TREMOVE=122,P9_TSTAT=124,P9_TWSTAT=126,POSIX_ERR_CODE_MAP=\n{EPERM:1,ENOENT:2,EBADF:9,EBUSY:11,EINVAL:22,ENOTDIR:20,EISDIR:21,EEXIST:17,ELOOP:40,ENOTEMPTY:39,EIO:5},P9_SETATTR_MODE=1,P9_SETATTR_UID=2,P9_SETATTR_GID=4,P9_SETATTR_SIZE=8,P9_SETATTR_ATIME=16,P9_SETATTR_MTIME=32,P9_SETATTR_CTIME=64,P9_SETATTR_ATIME_SET=128,P9_SETATTR_MTIME_SET=256,P9_STAT_MODE_DIR=2147483648,P9_STAT_MODE_APPEND=1073741824,P9_STAT_MODE_EXCL=536870912,P9_STAT_MODE_MOUNT=268435456,P9_STAT_MODE_AUTH=134217728,P9_STAT_MODE_TMP=67108864,P9_STAT_MODE_SYMLINK=33554432,P9_STAT_MODE_LINK=\n16777216,P9_STAT_MODE_DEVICE=8388608,P9_STAT_MODE_NAMED_PIPE=2097152,P9_STAT_MODE_SOCKET=1048576,P9_STAT_MODE_SETUID=524288,P9_STAT_MODE_SETGID=262144,P9_STAT_MODE_SETVTX=65536,P9_QTDIR=128,P9_QTAPPEND=64,P9_QTEXCL=32,P9_QTMOUNT=16,P9_QTAUTH=8,P9_QTTMP=4,P9_QTSYMLINK=2,P9_QTLINK=1,P9_QTFILE=0,FID_NONE=-1,FID_INODE=1,FID_XATTR=2;function hash32(a){for(var b=5381,c=a.length;c;)b=33*b^a.charCodeAt(--c);return b>>>0}\nfunction getQType(a){switch(a){case \"FILE\":return P9_QTFILE;case \"DIRECTORY\":return P9_QTDIR;case \"SYMLINK\":return P9_QTSYMLINK;default:return P9_QTFILE}}function formatQid(a,b){return{type:getQType(b.type),version:b.version,path:hash32(b.node)}}\nfunction Virtio9p(a,b){this.fs=a.fs;this.sh=a.sh;this.Path=a.Path;this.Buffer=a.Buffer;this.bus=b;this.deviceid=9;this.hostfeature=1;this.configspace=new Uint8Array([6,0,104,111,115,116,57,112]);this.VERSION=\"9P2000.L\";this.msize=this.BLOCKSIZE=8192;this.replybuffer=new Uint8Array(2*this.msize);this.replybuffersize=0;this.fids={};this.pendingTags={}}Virtio9p.prototype.addTag=function(a){this.pendingTags[a]={}};Virtio9p.prototype.flushTag=function(a){delete this.pendingTags[a]};\nVirtio9p.prototype.shouldAbortRequest=function(a){var b=!this.pendingTags[a];b&&debug(\"Request can be aborted tag=\"+a);return b};Virtio9p.prototype.SendReply=function(a,b){debug(\"Unexpected call to SendReply on Virtio9p\",a,b)};Virtio9p.prototype.get_state=function(){var a=[];a[0]=this.deviceid;a[1]=this.hostfeature;a[2]=this.configspace;a[3]=this.VERSION;a[4]=this.BLOCKSIZE;a[5]=this.msize;a[6]=this.replybuffer;a[7]=this.replybuffersize;a[8]=JSON.stringify(this.fids);return a};\nVirtio9p.prototype.set_state=function(a){this.deviceid=a[0];this.hostfeature=a[1];this.configspace=a[2];this.VERSION=a[3];this.BLOCKSIZE=a[4];this.msize=a[5];this.replybuffer=a[6];this.replybuffersize=a[7];this.fids=JSON.parse(a[8])};Virtio9p.prototype.Createfid=function(a,b,c){return{path:a,type:b,uid:c}};Virtio9p.prototype.Reset=function(){this.fids={}};\nVirtio9p.prototype.BuildReply=function(a,b,c){marshall.Marshall([\"w\",\"b\",\"h\"],[c+7,a+1,b],this.replybuffer,0);c+7>=this.replybuffer.length&&debug(\"Error in 9p: payloadsize exceeds maximum length\");this.replybuffersize=c+7;this.flushTag(b)};Virtio9p.prototype.SendError=function(a,b){debug(\"ERROR REPLY\",b);b=marshall.Marshall([\"w\"],[POSIX_ERR_CODE_MAP[b.code]],this.replybuffer,7);this.BuildReply(6,a,b)};\nVirtio9p.prototype.ReceiveRequest=function(a,b){var c=this,d=this.Path,e=this.Buffer,f=this.fs,g=this.sh,k=marshall.Unmarshall2([\"w\",\"b\",\"h\"],b),l=k[0],m=k[1],p=k[2];this.addTag(p);switch(m){case P9_TSTATFS:debug(\"[statfs]\");g=this.BLOCKSIZE;k=Math.floor(274877906944/g);l=marshall.Marshall(\"wwddddddw\".split(\"\"),[V9FS_MAGIC,g,k,k-Math.floor(51200/g),k-Math.floor(51200/g),this.fs.inodes.length,1048576,0,256],this.replybuffer,7);this.BuildReply(m,p,l);this.SendReply(0,a);break;case P9_TLOPEN:var n=marshall.Unmarshall2([\"w\",\n\"w\"],b),r=n[0],q=this.fids[r].path,u=n[1];debug(\"[tlopen] fid=\"+r,\" path=\"+q,\" mode=\"+u);f.stat(q,function(b,e){c.shouldAbortRequest(p)||(b?c.SendError(p,b):(n[0]=formatQid(q,e),n[1]=c.msize-24,marshall.Marshall([\"Q\",\"w\"],n,c.replybuffer,7),c.BuildReply(m,p,17)),c.SendReply(0,a))});break;case P9_TLINK:n=marshall.Unmarshall2([\"w\",\"w\",\"s\"],b);var w=n[0];k=c.fids[w].path;r=n[1];u=c.fids[r].path;g=n[2];var x=d.join(k,g);debug(\"[link] existingPath=\"+u+\", newPath=\"+x);f.link(u,x,function(b){c.shouldAbortRequest(p)||\n(b?c.SendError(p,b):c.BuildReply(m,p,0),c.SendReply(0,a))});break;case P9_TSYMLINK:n=marshall.Unmarshall2([\"w\",\"s\",\"s\",\"w\"],b);w=n[0];k=c.fids[w].path;g=n[1];x=d.join(k,g);g=n[2];k=n[3];debug(\"[symlink] symtgt=\"+g+\", newPath=\"+x+\", gid=\"+k);f.symlink(g,x,function(b){c.shouldAbortRequest(p)||(b?(c.SendError(p,b),c.SendReply(0,a)):f.stat(x,function(b,e){c.shouldAbortRequest(p)||(b?c.SendError(p,b):(b=formatQid(x,e),marshall.Marshall([\"Q\"],[b],c.replybuffer,7),c.BuildReply(m,p,13)),c.SendReply(0,a))}))});\nbreak;case P9_TMKNOD:n=marshall.Unmarshall2(\"wswwww\".split(\"\"),b);w=n[0];k=c.fids[w].path;g=n[1];var A=d.join(k,g);u=n[2];g=n[3];u=n[4];k=n[5];debug(\"[mknod] filePath=\"+A+\", major=\"+g+\", minor=\"+u+\", gid=\"+k);f.mknod(A,\"FILE\",function(b){c.shouldAbortRequest(p)||(b?(c.SendError(p,b),c.SendReply(0,a)):f.stat(A,function(b,e){c.shouldAbortRequest(p)||(b?(c.SendError(p,b),c.SendReply(0,a)):(b=formatQid(A,e),marshall.Marshall([\"Q\"],[b],this.replybuffer,7),this.BuildReply(m,p,13),this.SendReply(0,a)))}))});\nbreak;case P9_TREADLINK:n=marshall.Unmarshall2([\"w\"],b);r=n[0];q=c.fids[r].path;debug(\"[readlink] path=\"+q);f.readlink(q,function(b,e){c.shouldAbortRequest(p)||(b?c.SendError(p,b):(l=marshall.Marshall([\"s\"],[e],c.replybuffer,7),c.BuildReply(m,p,l)),c.SendReply(0,a))});break;case P9_TMKDIR:n=marshall.Unmarshall2([\"w\",\"s\",\"w\",\"w\"],b);w=n[0];g=n[1];u=n[2];k=n[3];w=c.fids[w].path;var C=d.join(w,g);debug(\"[mkdir] fid.path=\"+w+\", name=\"+C+\", mode=\"+u+\", gid=\"+k);f.mkdir(C,u,function(b){c.shouldAbortRequest(p)||\n(b?(c.SendError(p,b),c.SendReply(0,a)):f.stat(C,function(b,e){c.shouldAbortRequest(p)||(b?c.SendError(p,b):(b=formatQid(C,e),marshall.Marshall([\"Q\"],[b],c.replybuffer,7),c.BuildReply(m,p,13)),c.SendReply(0,a))}))});break;case P9_TLCREATE:n=marshall.Unmarshall2([\"w\",\"s\",\"w\",\"w\",\"w\"],b);r=n[0];g=n[1];k=n[2];u=n[3];k=n[4];debug(\"[tlcreate] fid=\"+r+\", name=\"+g+\", mode=\"+u+\", gid=\"+k);var D=d.join(c.fids[r].path,g);f.open(D,\"w+\",u,function(b,e){c.shouldAbortRequest(p)?e&&f.close(e):b?(c.SendError(p,b),\nc.SendReply(0,a)):f.fstat(e,function(b,d){c.shouldAbortRequest(p)?e&&f.close(e):(b?c.SendError(p,b):(c.fids[r]=c.Createfid(D,FID_INODE,E),f.close(e),b=formatQid(D,d),marshall.Marshall([\"Q\",\"w\"],[b,c.msize-24],c.replybuffer,7),c.BuildReply(m,p,17)),c.SendReply(0,a))})});break;case P9_TLOCK:debug(\"lock file\\n\");marshall.Marshall([\"w\"],[0],this.replybuffer,7);this.BuildReply(m,p,1);this.SendReply(0,a);break;case P9_TGETATTR:n=marshall.Unmarshall2([\"w\",\"d\"],b);r=n[0];q=this.fids[r].path;debug(\"[getattr]: fid=\"+\nr+\" path=\"+q+\" request mask=\"+n[1]);f.lstat(q,function(b,e){if(!c.shouldAbortRequest(p)){if(b)c.SendError(p,b);else{b=formatQid(q,e);var d=e.size;b=[2047,b,e.mode,e.uid,e.gid,e.nlinks,0,d,c.BLOCKSIZE,Math.floor(d/512+1),Math.round(e.atimeMs/1E3),1E6*e.atimeMs,Math.round(e.mtimeMs/1E3),1E6*e.mtimeMs,Math.round(e.ctimeMs/1E3),1E6*e.ctimeMs,0,0,0,0];debug(\"stats\",{mode:e.mode,stats:e,p9Stats:b});marshall.Marshall(\"dQwwwddddddddddddddd\".split(\"\"),b,c.replybuffer,7);c.BuildReply(m,p,153)}c.SendReply(0,\na)}});break;case P9_TSETATTR:n=marshall.Unmarshall2(\"wwwwwddddd\".split(\"\"),b);r=n[0];q=c.fids[r].path;debug(\"[setattr]: path=\"+q+\" request mask=\"+n[1]);g=[];n[1]&P9_SETATTR_MODE&&g.push(new Promise(function(a,b){var e=n[2];debug(\"[setattr]: mode=\"+e);c.shouldAbortRequest(p)||f.chmod(q,e,function(c){c?b(c):a()})}));n[1]&P9_SETATTR_UID&&n[1]&P9_SETATTR_GID&&g.push(new Promise(function(a,b){var e=n[3],d=n[4];debug(\"[setattr]: uid=\"+e+\" gid=\"+d);c.shouldAbortRequest(p)||f.chown(q,e,d,function(c){c?b(c):\na()})}));var B,z;k=Date.now();n[1]&P9_SETATTR_ATIME&&(B=k);n[1]&P9_SETATTR_MTIME&&(z=k);n[1]&P9_SETATTR_CTIME&&debug(\"[TODO] requested to SETATTR for CTIME, ignoring\");n[1]&P9_SETATTR_ATIME_SET&&(B=1E3*n[6]);n[1]&P9_SETATTR_MTIME_SET&&(z=1E3*n[8]);(B||z)&&g.push(new Promise(function(a,b){c.shouldAbortRequest(p)||(debug(\"[setattr]: atime=\"+B+\" mtime=\"+z),f.utimes(q,B,z,function(c){c?b(c):a()}))}));n[1]&P9_SETATTR_SIZE&&g.push(new Promise(function(a,b){var c=n[5];debug(\"[setattr]: size=\"+c);f.truncate(q,\nc,function(c){c?b(c):a()})}));Promise.all(g).then(function(){c.BuildReply(m,p,0);c.SendReply(0,a)}).catch(function(b){c.SendError(p,b);c.SendReply(0,a)});break;case P9_TFSYNC:n=marshall.Unmarshall2([\"w\",\"d\"],b);r=n[0];this.BuildReply(m,p,0);this.SendReply(0,a);break;case P9_TREADDIR:n=marshall.Unmarshall2([\"w\",\"d\",\"w\"],b);r=n[0];var y=n[1],v=n[2];q=this.fids[r].path;debug(\"[treaddir]: fid=\"+r+\" path=\"+q+\" offset=\"+y+\" count=\"+v);g.ls(q,{recursive:!1},function(b,e){if(!c.shouldAbortRequest(p))if(b)c.SendError(p,\nb),c.SendReply(0,a);else{var g=e.reduce(function(a,b){return a+13+8+1+2+UTF8.UTF8Length(b.name)},0);g+=25;g+=26;var k=new Uint8Array(g);f.stat(q,function(b,l){if(!c.shouldAbortRequest(p))if(b)c.SendError(p,b),c.SendReply(0,a);else{var n=0;n+=marshall.Marshall([\"Q\",\"d\",\"b\",\"s\"],[formatQid(q,l),n+13+8+1+2+1,l.mode>>12,\".\"],k,n);var r=d.resolve(\"..\",q);f.stat(r,function(b,f){if(!c.shouldAbortRequest(p)){if(b)c.SendError(p,b);else{n+=marshall.Marshall([\"Q\",\"d\",\"b\",\"s\"],[formatQid(r,f),n+13+8+1+2+2,f.mode>>\n12,\"..\"],k,n);e.forEach(function(a){var b=d.join(q,a.name);n+=marshall.Marshall([\"Q\",\"d\",\"b\",\"s\"],[formatQid(b,a),n+13+8+1+2+UTF8.UTF8Length(a.name),a.mode>>12,a.name],k,n)});g<y+v&&(v=g-y);if(k)for(b=0;b<v;b++)c.replybuffer[11+b]=k[y+b];marshall.Marshall([\"w\"],[v],c.replybuffer,7);c.BuildReply(m,p,4+v)}c.SendReply(0,a)}})}})}});break;case P9_TREAD:var F=function(b){var e=b.length;y+v>e&&(v=e-y);for(e=0;e<v;e++)c.replybuffer[11+e]=b[y+e];marshall.Marshall([\"w\"],[v],c.replybuffer,7);c.BuildReply(m,\np,4+v);c.SendReply(0,a)};n=marshall.Unmarshall2([\"w\",\"d\",\"w\"],b);r=n[0];y=n[1];v=n[2];q=this.fids[r].path;debug(\"[tread]: fid=\"+r+\" path=\"+q+\" offset=\"+y+\" count=\"+v);if(g=c.pendingTags[p].data){F(g);break}f.readFile(q,function(b,e){c.shouldAbortRequest(p)||(b?(c.SendError(p,b),c.SendReply(0,a)):(c.pendingTags[p].data=e,F(e)))});break;case P9_TWRITE:n=marshall.Unmarshall2([\"w\",\"d\",\"w\"],b);r=n[0];y=n[1];v=n[2];q=c.fids[r].path;debug(\"[twrite]: fid=\"+r+\" path=\"+q+\" offset=\"+y+\" count=\"+v);f.open(q,\n\"w\",function(d,g){if(c.shouldAbortRequest(p))g&&f.close(g);else if(d)c.SendError(p,d),c.SendReply(0,a);else{d=e.alloc(v);for(var k=0;k<v;k++)d[k]=b();f.write(g,d,0,v,y,function(b,e){c.shouldAbortRequest(p)?g&&f.close(g):(b?c.SendError(p,b):(f.close(g),marshall.Marshall([\"w\"],[e],c.replybuffer,7),c.BuildReply(m,p,4)),c.SendReply(0,a))})}});break;case P9_TRENAMEAT:n=marshall.Unmarshall2([\"w\",\"s\",\"w\",\"s\"],b);g=d.join(c.fids[n[0]].path,n[1]);x=d.join(c.fids[n[2]].path,n[3]);debug(\"[renameat]: oldPath=\"+\ng+\" newPath=\"+x);f.rename(g,x,function(b){c.shouldAbortRequest(p)||(b?c.SendError(p,b):c.BuildReply(m,p,0),c.SendReply(0,a))});break;case P9_TUNLINKAT:n=marshall.Unmarshall2([\"w\",\"s\",\"w\"],b);u=n[0];g=n[1];k=n[2];q=d.join(c.fids[u].path,g);debug(\"[tunlinkat]: path=\"+q);f.stat(q,function(b,e){if(!c.shouldAbortRequest(p))if(b)c.SendError(p,b),c.SendReply(0,a);else f[\"DIRECTORY\"===e.type?\"rmdir\":\"unlink\"](q,function(b){c.shouldAbortRequest(p)||(b?c.SendError(p,b):c.BuildReply(m,p,0),c.SendReply(0,a))})});\nbreak;case P9_TVERSION:g=marshall.Unmarshall2([\"w\",\"s\"],b);debug(\"[version]: msize=\"+g[0]+\" version=\"+g[1]);this.msize=g[0];l=marshall.Marshall([\"w\",\"s\"],[this.msize,this.VERSION],this.replybuffer,7);this.BuildReply(m,p,l);this.SendReply(0,a);break;case P9_TATTACH:n=marshall.Unmarshall2([\"w\",\"w\",\"s\",\"s\",\"w\"],b);r=n[0];var E=n[4];debug(\"[attach]: fid=\"+r+\" afid=\"+hex8(n[1])+\" uname=\"+n[2]+\" aname=\"+n[3]);this.fids[r]=this.Createfid(\"/\",FID_INODE,E);f.stat(\"/\",function(b,e){c.shouldAbortRequest(p)||\n(b?c.SendError(p,b):(b=formatQid(\"/\",e),marshall.Marshall([\"Q\"],[b],c.replybuffer,7),c.BuildReply(m,p,13)),c.SendReply(0,a))});break;case P9_TFLUSH:n=marshall.Unmarshall2([\"h\"],b);this.flushTag(n[0]);debug(\"[flush] \"+p);this.BuildReply(m,p,0);this.SendReply(0,a);break;case P9_TWALK:var G=function(b,e){var g=e.shift();g?(b=d.join(b,g),f.stat(b,function(d,f){c.shouldAbortRequest(p)||(d?(c.SendError(p,d),c.SendReply(0,a)):(d=formatQid(b,f),c.fids[H]=c.Createfid(b,FID_INODE,f.uid),y+=marshall.Marshall([\"Q\"],\n[d],c.replybuffer,y),I++,G(b,e)))})):(marshall.Marshall([\"h\"],[I],c.replybuffer,7),c.BuildReply(m,p,y-7),c.SendReply(0,a))};n=marshall.Unmarshall2([\"w\",\"w\",\"h\"],b);r=n[0];var H=n[1];g=n[2];debug(\"[walk]: fid=\"+n[0]+\" nwfid=\"+n[1]+\" nwname=\"+g);if(0==g){c.fids[H]=c.Createfid(c.fids[r].path,FID_INODE,c.fids[r].uid);marshall.Marshall([\"h\"],[0],c.replybuffer,7);c.BuildReply(m,p,2);c.SendReply(0,a);break}k=[];for(u=0;u<g;u++)k.push(\"s\");g=marshall.Unmarshall2(k,b);q=this.fids[r].path;y=9;var I=0;debug(\"walk in dir \"+\nq+\" to: \"+g.toString());G(q,g);break;case P9_TCLUNK:n=marshall.Unmarshall2([\"w\"],b);r=n[0];q=c.fids[r].path;debug(\"[clunk]: fid=\"+r+\" path=\"+q);delete c.fids[r];this.BuildReply(m,p,0);this.SendReply(0,a);break;case P9_TXATTRCREATE:n=marshall.Unmarshall2([\"w\",\"s\",\"d\",\"w\"],b);r=n[0];g=n[1];u=n[2];k=n[3];debug(\"[txattrcreate]: fid=\"+r+\" name=\"+g+\" attr_size=\"+u+\" flags=\"+k);this.BuildReply(m,p,0);this.SendReply(0,a);break;case P9_TXATTRWALK:n=marshall.Unmarshall2([\"w\",\"w\",\"s\"],b);r=n[0];k=n[1];g=n[2];\ndebug(\"[xattrwalk]: fid=\"+n[0]+\" newfid=\"+n[1]+\" name=\"+n[2]);this.fids[k]=this.Createfid(this.fids[r].inodeid,FID_NONE,this.fids[r].uid);u=0;\"security.capability\"==g&&(u=this.fs.PrepareCAPs(this.fids[r].inodeid),this.fids[k].type=FID_XATTR);marshall.Marshall([\"d\"],[u],this.replybuffer,7);this.BuildReply(m,p,8);this.SendReply(0,a);break;default:debug(\"Error in Virtio9p: Unknown id \"+m+\" received\"),message.Abort()}};var DEBUG=!1,LOG_TO_FILE=!1,LOG_ALL_IO=!1,LOG_PAGE_FAULTS=!1,LOG_LEVEL=LOG_ALL&LOG_9P,DEBUG_SCREEN_LAYERS=DEBUG&&!1,ENABLE_HPET=DEBUG&&!1,ENABLE_ACPI=!1,LOOP_COUNTER=11001,TIME_PER_FRAME=1,TSC_RATE=8192,APIC_TIMER_FREQ=TSC_RATE,VMWARE_HYPERVISOR_PORT=!0;function IO(a){this.ports=[];this.cpu=a;for(var b=0;65536>b;b++)this.ports[b]=this.create_empty_entry();var c=a.memory_size;for(b=0;b<<MMAP_BLOCK_BITS<c;b++)a.memory_map_read8[b]=a.memory_map_write8[b]=void 0,a.memory_map_read32[b]=a.memory_map_write32[b]=void 0;this.mmap_register(c,4294967296-c,function(a){dbg_log(\"Read from unmapped memory space, addr=\"+h(a>>>0,8),LOG_IO);return 255},function(a,b){dbg_log(\"Write to unmapped memory space, addr=\"+h(a>>>0,8)+\" value=\"+h(b,2),LOG_IO)},function(a){dbg_log(\"Read from unmapped memory space, addr=\"+\nh(a>>>0,8),LOG_IO);return-1},function(a,b){dbg_log(\"Write to unmapped memory space, addr=\"+h(a>>>0,8)+\" value=\"+h(b>>>0,8),LOG_IO)})}IO.prototype.create_empty_entry=function(){return{read8:this.empty_port_read8,read16:this.empty_port_read16,read32:this.empty_port_read32,write8:this.empty_port_write,write16:this.empty_port_write,write32:this.empty_port_write,device:void 0}};IO.prototype.empty_port_read8=function(){return 255};IO.prototype.empty_port_read16=function(){return 65535};\nIO.prototype.empty_port_read32=function(){return-1};IO.prototype.empty_port_write=function(a){};\nIO.prototype.register_read=function(a,b,c,d,e){dbg_assert(\"number\"===typeof a);dbg_assert(\"object\"===typeof b);dbg_assert(!c||\"function\"===typeof c);dbg_assert(!d||\"function\"===typeof d);dbg_assert(!e||\"function\"===typeof e);dbg_assert(c||d||e);if(DEBUG){var f=function(c){dbg_assert(!1,\"Overlapped read\"+c+\" \"+h(a,4)+\" (\"+b.name+\")\");return-1>>>32-c|0};c||(c=f.bind(this,8));d||(d=f.bind(this,16));e||(e=f.bind(this,32))}c&&(this.ports[a].read8=c);d&&(this.ports[a].read16=d);e&&(this.ports[a].read32=\ne);this.ports[a].device=b};\nIO.prototype.register_write=function(a,b,c,d,e){dbg_assert(\"number\"===typeof a);dbg_assert(\"object\"===typeof b);dbg_assert(!c||\"function\"===typeof c);dbg_assert(!d||\"function\"===typeof d);dbg_assert(!e||\"function\"===typeof e);dbg_assert(c||d||e);if(DEBUG){var f=function(c){dbg_assert(!1,\"Overlapped write\"+c+\" \"+h(a)+\" (\"+b.name+\")\")};c||(c=f.bind(this,8));d||(d=f.bind(this,16));e||(e=f.bind(this,32))}c&&(this.ports[a].write8=c);d&&(this.ports[a].write16=d);e&&(this.ports[a].write32=e);this.ports[a].device=\nb};IO.prototype.register_read_consecutive=function(a,b,c,d,e,f){function g(){return c.call(this)|d.call(this)<<8}function k(){return e.call(this)|f.call(this)<<8}function l(){return c.call(this)|d.call(this)<<8|e.call(this)<<16|f.call(this)<<24}dbg_assert(4===arguments.length||6===arguments.length);e&&f?(this.register_read(a,b,c,g,l),this.register_read(a+1,b,d),this.register_read(a+2,b,e,k),this.register_read(a+3,b,f)):(this.register_read(a,b,c,g),this.register_read(a+1,b,d))};\nIO.prototype.register_write_consecutive=function(a,b,c,d,e,f){function g(a){c.call(this,a&255);d.call(this,a>>8&255)}function k(a){e.call(this,a&255);f.call(this,a>>8&255)}function l(a){c.call(this,a&255);d.call(this,a>>8&255);e.call(this,a>>16&255);f.call(this,a>>>24)}dbg_assert(4===arguments.length||6===arguments.length);e&&f?(this.register_write(a,b,c,g,l),this.register_write(a+1,b,d),this.register_write(a+2,b,e,k),this.register_write(a+3,b,f)):(this.register_write(a,b,c,g),this.register_write(a+\n1,b,d))};IO.prototype.in_mmap_range=function(a,b){a>>>=0;b=a+(b>>>0);if(b>=this.cpu.memory_size)return!0;for(a&=~(MMAP_BLOCK_SIZE-1);a<b;){if(this.cpu.in_mapped_range(a))return!0;a+=MMAP_BLOCK_SIZE}return!1};IO.prototype.mmap_read32_shim=function(a){var b=this.cpu.memory_map_read8[a>>>MMAP_BLOCK_BITS];return b(a)|b(a+1)<<8|b(a+2)<<16|b(a+3)<<24};\nIO.prototype.mmap_write32_shim=function(a,b){var c=this.cpu.memory_map_write8[a>>>MMAP_BLOCK_BITS];c(a,b&255);c(a+1,b>>8&255);c(a+2,b>>16&255);c(a+3,b>>>24)};\nIO.prototype.mmap_register=function(a,b,c,d,e,f){dbg_log(\"mmap_register addr=\"+h(a>>>0,8)+\" size=\"+h(b,8),LOG_IO);dbg_assert(0===(a&MMAP_BLOCK_SIZE-1));dbg_assert(b&&0===(b&MMAP_BLOCK_SIZE-1));e||(e=this.mmap_read32_shim.bind(this));f||(f=this.mmap_write32_shim.bind(this));for(a>>>=MMAP_BLOCK_BITS;0<b;a++)this.cpu.memory_map_read8[a]=c,this.cpu.memory_map_write8[a]=d,this.cpu.memory_map_read32[a]=e,this.cpu.memory_map_write32[a]=f,b-=MMAP_BLOCK_SIZE};\nIO.prototype.port_write8=function(a,b){var c=this.ports[a];(c.write8===this.empty_port_write||LOG_ALL_IO)&&dbg_log(\"write8 port #\"+h(a,4)+\" <- \"+h(b,2)+this.get_port_description(a),LOG_IO);return c.write8.call(c.device,b)};IO.prototype.port_write16=function(a,b){var c=this.ports[a];(c.write16===this.empty_port_write||LOG_ALL_IO)&&dbg_log(\"write16 port #\"+h(a,4)+\" <- \"+h(b,4)+this.get_port_description(a),LOG_IO);return c.write16.call(c.device,b)};\nIO.prototype.port_write32=function(a,b){var c=this.ports[a];(c.write32===this.empty_port_write||LOG_ALL_IO)&&dbg_log(\"write32 port #\"+h(a,4)+\" <- \"+h(b>>>0,8)+this.get_port_description(a),LOG_IO);return c.write32.call(c.device,b)};IO.prototype.port_read8=function(a){var b=this.ports[a];(b.read8===this.empty_port_read8||LOG_ALL_IO)&&dbg_log(\"read8 port  #\"+h(a,4)+this.get_port_description(a),LOG_IO);b=b.read8.call(b.device);dbg_assert(256>b,\"8 bit port returned large value: \"+h(a));return b};\nIO.prototype.port_read16=function(a){var b=this.ports[a];(b.read16===this.empty_port_read16||LOG_ALL_IO)&&dbg_log(\"read16 port  #\"+h(a,4)+this.get_port_description(a),LOG_IO);b=b.read16.call(b.device);dbg_assert(65536>b&&0<=b,\"16 bit port returned large value: \"+h(a));return b};\nIO.prototype.port_read32=function(a){var b=this.ports[a];(b.read32===this.empty_port_read32||LOG_ALL_IO)&&dbg_log(\"read32 port  #\"+h(a,4)+this.get_port_description(a),LOG_IO);a=b.read32.call(b.device);dbg_assert((a|0)===a);return a};\nvar debug_port_list={4:\"PORT_DMA_ADDR_2\",5:\"PORT_DMA_CNT_2\",10:\"PORT_DMA1_MASK_REG\",11:\"PORT_DMA1_MODE_REG\",12:\"PORT_DMA1_CLEAR_FF_REG\",13:\"PORT_DMA1_MASTER_CLEAR\",32:\"PORT_PIC1_CMD\",33:\"PORT_PIC1_DATA\",64:\"PORT_PIT_COUNTER0\",65:\"PORT_PIT_COUNTER1\",66:\"PORT_PIT_COUNTER2\",67:\"PORT_PIT_MODE\",96:\"PORT_PS2_DATA\",97:\"PORT_PS2_CTRLB\",100:\"PORT_PS2_STATUS\",112:\"PORT_CMOS_INDEX\",113:\"PORT_CMOS_DATA\",128:\"PORT_DIAG\",129:\"PORT_DMA_PAGE_2\",146:\"PORT_A20\",160:\"PORT_PIC2_CMD\",161:\"PORT_PIC2_DATA\",178:\"PORT_SMI_CMD\",\n179:\"PORT_SMI_STATUS\",212:\"PORT_DMA2_MASK_REG\",214:\"PORT_DMA2_MODE_REG\",218:\"PORT_DMA2_MASTER_CLEAR\",240:\"PORT_MATH_CLEAR\",368:\"PORT_ATA2_CMD_BASE\",496:\"PORT_ATA1_CMD_BASE\",632:\"PORT_LPT2\",744:\"PORT_SERIAL4\",760:\"PORT_SERIAL2\",884:\"PORT_ATA2_CTRL_BASE\",888:\"PORT_LPT1\",1E3:\"PORT_SERIAL3\",1008:\"PORT_FD_BASE\",1010:\"PORT_FD_DOR\",1012:\"PORT_FD_STATUS\",1013:\"PORT_FD_DATA\",1014:\"PORT_HD_DATA\",1015:\"PORT_FD_DIR\",1016:\"PORT_SERIAL1\",3320:\"PORT_PCI_CMD\",3321:\"PORT_PCI_REBOOT\",3324:\"PORT_PCI_DATA\",1026:\"PORT_BIOS_DEBUG\",\n1296:\"PORT_QEMU_CFG_CTL\",1297:\"PORT_QEMU_CFG_DATA\",45056:\"PORT_ACPI_PM_BASE\",45312:\"PORT_SMB_BASE\",35072:\"PORT_BIOS_APM\"};IO.prototype.get_port_description=function(a){return debug_port_list[a]?\"  (\"+debug_port_list[a]+\")\":\"\"};function v86(a){this.stopped=this.running=!1;this.cpu=new CPU(a);this.bus=a;a.register(\"cpu-init\",this.init,this);a.register(\"cpu-run\",this.run,this);a.register(\"cpu-stop\",this.stop,this);a.register(\"cpu-restart\",this.restart,this);this.register_tick()}v86.prototype.run=function(){this.running||(this.bus.send(\"emulator-started\"),this.fast_next_tick())};\nv86.prototype.do_tick=function(){if(this.stopped)this.stopped=this.running=!1,this.bus.send(\"emulator-stopped\");else{this.running=!0;var a=this.cpu.main_run();0>=a?this.fast_next_tick():this.next_tick(a)}};v86.prototype.stop=function(){this.running&&(this.stopped=!0)};v86.prototype.restart=function(){this.cpu.reset();this.cpu.load_bios()};v86.prototype.init=function(a){this.cpu.init(a,this.bus);this.bus.send(\"emulator-ready\")};\nif(\"undefined\"!==typeof setImmediate)var fast_next_tick=function(){var a=this;setImmediate(function(){a.do_tick()})},register_tick=function(){};else if(\"undefined\"!==typeof window&&\"undefined\"!==typeof postMessage){var MAGIC_POST_MESSAGE=43605;fast_next_tick=function(){window.postMessage(MAGIC_POST_MESSAGE,\"*\")};register_tick=function(){var a=this;window.addEventListener(\"message\",function(b){b.source===window&&b.data===MAGIC_POST_MESSAGE&&a.do_tick()},!1)}}else fast_next_tick=function(){var a=this;\nsetTimeout(function(){a.do_tick()},0)},register_tick=function(){};v86.prototype.fast_next_tick=fast_next_tick;v86.prototype.register_tick=register_tick;var next_tick=\"undefined\"!==typeof document&&\"boolean\"===typeof document.hidden?function(a){var b=this;4>a||document.hidden?this.fast_next_tick():setTimeout(function(){b.do_tick()},a)}:function(a){var b=this;setTimeout(function(){b.do_tick()},a)};v86.prototype.next_tick=next_tick;v86.prototype.save_state=function(){return this.cpu.save_state()};\nv86.prototype.restore_state=function(a){return this.cpu.restore_state(a)};v86.microtick=\"object\"===typeof performance&&performance.now?function(){return performance.now()}:Date.now;var v86util=v86util||{};v86util.pads=function(a,b){for(a=a?a+\"\":\"\";a.length<b;)a+=\" \";return a};v86util.pad0=function(a,b){for(a=a?a+\"\":\"\";a.length<b;)a=\"0\"+a;return a};function h(a,b){a=a?a.toString(16):\"\";return\"0x\"+v86util.pad0(a.toUpperCase(),b||1)}\nif(\"undefined\"!==typeof window&&window.crypto&&window.crypto.getRandomValues){var rand_data=new Int32Array(1);v86util.has_rand_int=function(){return!0};v86util.get_rand_int=function(){window.crypto.getRandomValues(rand_data);return rand_data[0]}}else v86util.has_rand_int=function(){return!1},v86util.get_rand_int=function(){console.assert(!1)};function SyncBuffer(a){this.buffer=a;this.byteLength=a.byteLength;this.onprogress=this.onload=void 0}SyncBuffer.prototype.load=function(){this.onload&&this.onload({buffer:this.buffer})};\nSyncBuffer.prototype.get=function(a,b,c){dbg_assert(a+b<=this.byteLength);c(new Uint8Array(this.buffer,a,b))};SyncBuffer.prototype.set=function(a,b,c){dbg_assert(a+b.byteLength<=this.byteLength);(new Uint8Array(this.buffer,a,b.byteLength)).set(b);c()};SyncBuffer.prototype.get_buffer=function(a){a(this.buffer)};\n(function(){for(var a=new Int8Array(256),b=0,c=-2;256>b;b++)b&b-1||c++,a[b]=c;v86util.int_log2_byte=function(b){dbg_assert(0<b);dbg_assert(256>b);return a[b]};v86util.int_log2=function(b){dbg_assert(0<b);var c=b>>>16;if(c){var d=c>>>8;return d?24+a[d]:16+a[c]}return(d=b>>>8)?8+a[d]:a[b]}})();\nfunction ByteQueue(a){var b=new Uint8Array(a),c,d;dbg_assert(0===(a&a-1));this.length=0;this.push=function(c){this.length!==a&&this.length++;b[d]=c;d=d+1&a-1};this.shift=function(){if(this.length){var e=b[c];c=c+1&a-1;this.length--;return e}return-1};this.peek=function(){return this.length?b[c]:-1};this.clear=function(){this.length=d=c=0};this.clear()}function FloatQueue(a){this.size=a;this.data=new Float32Array(a);this.length=this.end=this.start=0;dbg_assert(0===(a&a-1))}\nFloatQueue.prototype.push=function(a){this.length===this.size?this.start=this.start+1&this.size-1:this.length++;this.data[this.end]=a;this.end=this.end+1&this.size-1};FloatQueue.prototype.shift=function(){if(this.length){var a=this.data[this.start];this.start=this.start+1&this.size-1;this.length--;return a}};\nFloatQueue.prototype.shift_block=function(a){var b=new Float32Array(a);a>this.length&&(a=this.length);var c=this.start+a,d=this.data.subarray(this.start,c);b.set(d);c>=this.size&&(c-=this.size,b.set(this.data.subarray(0,c),d.length));this.start=c;this.length-=a;return b};FloatQueue.prototype.peek=function(){if(this.length)return this.data[this.start]};FloatQueue.prototype.clear=function(){this.length=this.end=this.start=0};function CircularQueue(a){this.data=[];this.index=0;this.size=a}\nCircularQueue.prototype.add=function(a){this.data[this.index]=a;this.index=(this.index+1)%this.size};CircularQueue.prototype.toArray=function(){return[].slice.call(this.data,this.index).concat([].slice.call(this.data,0,this.index))};CircularQueue.prototype.clear=function(){this.data=[];this.index=0};CircularQueue.prototype.set=function(a){this.data=a;this.index=0};function dump_file(a,b){a instanceof Array||(a=[a]);a=new Blob(a);download(a,b)}\nfunction download(a,b){var c=document.createElement(\"a\");c.download=b;c.href=window.URL.createObjectURL(a);c.dataset.downloadurl=[\"application/octet-stream\",c.download,c.href].join(\":\");document.createEvent?(a=document.createEvent(\"MouseEvent\"),a.initMouseEvent(\"click\",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),c.dispatchEvent(a)):c.click();window.URL.revokeObjectURL(c.href)};var FPU_LOG_OP=!1,FPU_C0=256,FPU_C1=512,FPU_C2=1024,FPU_C3=16384,FPU_RESULT_FLAGS=FPU_C0|FPU_C1|FPU_C2|FPU_C3,FPU_STACK_TOP=14336,FPU_PC=768,FPU_RC=3072,FPU_IF=4096,FPU_EX_SF=64,FPU_EX_P=32,FPU_EX_U=16,FPU_EX_O=8,FPU_EX_Z=4,FPU_EX_D=2,FPU_EX_I=1,TWO_POW_63=0x7fffffffffffffff;\nfunction FPU(a){this.cpu=a;this.st=new Float64Array(8);this.float32=new Float32Array(1);this.float32_byte=new Uint8Array(this.float32.buffer);this.float32_int=new Int32Array(this.float32.buffer);this.float64=new Float64Array(1);this.float64_byte=new Uint8Array(this.float64.buffer);this.float64_int=new Int32Array(this.float64.buffer);this.st8=new Uint8Array(this.st.buffer);this.st32=new Int32Array(this.st.buffer);this.stack_empty=255;this.stack_ptr=0;this.control_word=895;this.fpu_dp_selector=this.fpu_dp=\nthis.fpu_opcode=this.fpu_ip_selector=this.fpu_ip=this.status_word=0;this.indefinite_nan=NaN;this.constants=new Float64Array([1,Math.log(10)/Math.LN2,Math.LOG2E,Math.PI,Math.log(2)/Math.LN10,Math.LN2,0])}FPU.prototype.get_state=function(){var a=[];a[0]=this.st;a[1]=this.stack_empty;a[2]=this.stack_ptr;a[3]=this.control_word;a[4]=this.fpu_dp_selector;a[5]=this.fpu_ip;a[6]=this.fpu_ip_selector;a[7]=this.fpu_dp;a[8]=this.fpu_dp_selector;a[9]=this.fpu_opcode;return a};\nFPU.prototype.set_state=function(a){this.st.set(a[0]);this.stack_empty=a[1];this.stack_ptr=a[2];this.control_word=a[3];this.fpu_ip=a[5];this.fpu_ip_selector=a[6];this.fpu_dp=a[7];this.fpu_dp_selector=a[8];this.fpu_opcode=a[9]};FPU.prototype.fpu_unimpl=function(){dbg_trace();if(DEBUG)throw\"fpu: unimplemented\";this.cpu.trigger_ud()};FPU.prototype.stack_fault=function(){this.status_word=this.status_word|FPU_EX_SF|FPU_EX_I};FPU.prototype.invalid_arithmatic=function(){this.status_word|=FPU_EX_I};\nFPU.prototype.fcom=function(a){var b=this.get_st0();this.status_word&=~FPU_RESULT_FLAGS;b>a||(this.status_word=a>b?this.status_word|FPU_C0:b===a?this.status_word|FPU_C3:this.status_word|FPU_C0|FPU_C2|FPU_C3)};FPU.prototype.fucom=function(a){this.fcom(a)};\nFPU.prototype.fcomi=function(a){var b=this.st[this.stack_ptr];this.cpu.flags_changed&=~(1|flag_parity|flag_zero);this.cpu.flags&=~(1|flag_parity|flag_zero);b>a||(this.cpu.flags=a>b?this.cpu.flags|1:b===a?this.cpu.flags|flag_zero:this.cpu.flags|1|flag_parity|flag_zero)};FPU.prototype.fucomi=function(a){this.fcomi(a)};\nFPU.prototype.ftst=function(a){this.status_word&=~FPU_RESULT_FLAGS;isNaN(a)?this.status_word=this.status_word|FPU_C3|FPU_C2|FPU_C0:0===a?this.status_word|=FPU_C3:0>a&&(this.status_word|=FPU_C0)};\nFPU.prototype.fxam=function(a){this.status_word&=~FPU_RESULT_FLAGS;this.status_word|=this.sign(0)<<9;this.stack_empty>>this.stack_ptr&1?this.status_word=this.status_word|FPU_C3|FPU_C0:isNaN(a)?this.status_word|=FPU_C0:this.status_word=0===a?this.status_word|FPU_C3:Infinity===a||-Infinity===a?this.status_word|FPU_C2|FPU_C0:this.status_word|FPU_C2};FPU.prototype.finit=function(){this.control_word=895;this.fpu_opcode=this.fpu_dp=this.fpu_ip=this.status_word=0;this.stack_empty=255;this.stack_ptr=0};\nFPU.prototype.load_status_word=function(){return this.status_word&-14337|this.stack_ptr<<11};FPU.prototype.set_status_word=function(a){this.status_word=a&-14337;this.stack_ptr=a>>11&7};FPU.prototype.load_tag_word=function(){for(var a=0,b,c=0;8>c;c++)b=this.st[c],this.stack_empty>>c&1?a|=3<<(c<<1):0===b?a|=1<<(c<<1):isFinite(b)||(a|=2<<(c<<1));return a};FPU.prototype.set_tag_word=function(a){for(var b=this.stack_empty=0;8>b;b++)this.stack_empty|=a>>b&a>>b+1&1<<b};\nFPU.prototype.fstenv=function(a){this.cpu.is_osize_32()?(this.cpu.writable_or_pagefault(a,26),this.cpu.safe_write16(a,this.control_word),this.cpu.safe_write16(a+4,this.load_status_word()),this.cpu.safe_write16(a+8,this.load_tag_word()),this.cpu.safe_write32(a+12,this.fpu_ip),this.cpu.safe_write16(a+16,this.fpu_ip_selector),this.cpu.safe_write16(a+18,this.fpu_opcode),this.cpu.safe_write32(a+20,this.fpu_dp),this.cpu.safe_write16(a+24,this.fpu_dp_selector)):this.fpu_unimpl()};\nFPU.prototype.fldenv=function(a){this.cpu.is_osize_32()?(this.control_word=this.cpu.safe_read16(a),this.set_status_word(this.cpu.safe_read16(a+4)),this.set_tag_word(this.cpu.safe_read16(a+8)),this.fpu_ip=this.cpu.safe_read32s(a+12),this.fpu_ip_selector=this.cpu.safe_read16(a+16),this.fpu_opcode=this.cpu.safe_read16(a+18),this.fpu_dp=this.cpu.safe_read32s(a+20),this.fpu_dp_selector=this.cpu.safe_read16(a+24)):this.fpu_unimpl()};\nFPU.prototype.fsave=function(a){this.cpu.writable_or_pagefault(a,108);this.fstenv(a);a+=28;for(var b=0;8>b;b++)this.store_m80(a,this.st[this.stack_ptr+b&7]),a+=10;this.finit()};FPU.prototype.frstor=function(a){this.fldenv(a);a+=28;for(var b=0;8>b;b++)this.st[b+this.stack_ptr&7]=this.load_m80(a),a+=10};\nFPU.prototype.fxtract=function(){this.float64[0]=this.get_st0();var a=((this.float64_byte[7]&127)<<4|this.float64_byte[6]>>4)-1023;this.float64_byte[7]=63|this.float64_byte[7]&128;this.float64_byte[6]|=240;this.st[this.stack_ptr]=a;this.push(this.float64[0])};FPU.prototype.integer_round=function(a){var b=this.control_word>>10&3;return 0===b?(b=Math.round(a),.5===b-a&&b%2&&b--,b):1===b||3===b&&0<a?Math.floor(a):Math.ceil(a)};FPU.prototype.truncate=function(a){return 0<a?Math.floor(a):Math.ceil(a)};\nFPU.prototype.push=function(a){this.stack_ptr=this.stack_ptr-1&7;this.stack_empty>>this.stack_ptr&1?(this.status_word&=~FPU_C1,this.stack_empty&=~(1<<this.stack_ptr),this.st[this.stack_ptr]=a):(this.status_word|=FPU_C1,this.stack_fault(),this.st[this.stack_ptr]=this.indefinite_nan)};FPU.prototype.pop=function(){this.stack_empty|=1<<this.stack_ptr;this.stack_ptr=this.stack_ptr+1&7};\nFPU.prototype.get_sti=function(a){dbg_assert(\"number\"===typeof a&&0<=a&&8>a);a=a+this.stack_ptr&7;return this.stack_empty>>a&1?(this.status_word&=~FPU_C1,this.stack_fault(),this.indefinite_nan):this.st[a]};FPU.prototype.get_st0=function(){return this.stack_empty>>this.stack_ptr&1?(this.status_word&=~FPU_C1,this.stack_fault(),this.indefinite_nan):this.st[this.stack_ptr]};\nFPU.prototype.load_m80=function(a){var b=this.cpu.safe_read16(a+8),c=this.cpu.safe_read32s(a)>>>0,d=this.cpu.safe_read32s(a+4)>>>0;a=b>>15;b&=-32769;if(0===b)return 0;if(!(32767>b))return this.float64_byte[7]=127|a<<7,this.float64_byte[6]=240|d>>30<<3&8,this.float64_byte[5]=0,this.float64_byte[4]=0,this.float64_int[0]=0,this.float64[0];c+=4294967296*d;a&&(c=-c);return c*Math.pow(2,b-16383-63)};\nFPU.prototype.store_m80=function(a,b){this.float64[0]=b;b=this.float64_byte[7]&128;var c=(this.float64_byte[7]&127)<<4|this.float64_byte[6]>>4;if(2047===c){c=32767;var d=0;var e=2147483648|(this.float64_int[1]&524288)<<11}else 0===c?e=d=0:(c+=15360,d=this.float64_int[0]<<11,e=2147483648|(this.float64_int[1]&1048575)<<11|this.float64_int[0]>>>21);dbg_assert(0<=c&&32768>c);this.cpu.safe_write32(a,d);this.cpu.safe_write32(a+4,e);this.cpu.safe_write16(a+8,b<<8|c)};\nFPU.prototype.load_m64=function(a){var b=this.cpu.safe_read32s(a);a=this.cpu.safe_read32s(a+4);this.float64_int[0]=b;this.float64_int[1]=a;return this.float64[0]};FPU.prototype.store_m64=function(a,b){this.cpu.writable_or_pagefault(a,8);this.float64[0]=this.get_sti(b);this.cpu.safe_write32(a,this.float64_int[0]);this.cpu.safe_write32(a+4,this.float64_int[1])};FPU.prototype.load_m32=function(a){this.float32_int[0]=this.cpu.safe_read32s(a);return this.float32[0]};\nFPU.prototype.store_m32=function(a,b){this.float32[0]=b;this.cpu.safe_write32(a,this.float32_int[0])};FPU.prototype.sign=function(a){return this.st8[(this.stack_ptr+a&7)<<3|7]>>7};\nFPU.prototype.dbg_log_fpu_op=function(a,b){FPU_LOG_OP&&(192<=b?dbg_log(h(a,2)+\" \"+h(b,2)+\"/\"+(b>>3&7)+\"/\"+(b&7)+\" @\"+h(this.cpu.instruction_pointer>>>0,8)+\" sp=\"+this.stack_ptr+\" st=\"+h(this.stack_empty,2),LOG_FPU):dbg_log(h(a,2)+\" /\"+(b>>3&7)+\"     @\"+h(this.cpu.instruction_pointer>>>0,8)+\" sp=\"+this.stack_ptr+\" st=\"+h(this.stack_empty,2),LOG_FPU))};FPU.prototype.fwait=function(){};\nFPU.prototype.op_D8_reg=function(a){this.dbg_log_fpu_op(216,a);var b=a>>3&7;a=this.get_sti(a&7);var c=this.get_st0();switch(b){case 0:this.st[this.stack_ptr]=c+a;break;case 1:this.st[this.stack_ptr]=c*a;break;case 2:this.fcom(a);break;case 3:this.fcom(a);this.pop();break;case 4:this.st[this.stack_ptr]=c-a;break;case 5:this.st[this.stack_ptr]=a-c;break;case 6:this.st[this.stack_ptr]=c/a;break;case 7:this.st[this.stack_ptr]=a/c;break;default:dbg_assert(!1)}};\nFPU.prototype.op_D8_mem=function(a,b){this.dbg_log_fpu_op(216,a);a=a>>3&7;b=this.load_m32(b);var c=this.get_st0();switch(a){case 0:this.st[this.stack_ptr]=c+b;break;case 1:this.st[this.stack_ptr]=c*b;break;case 2:this.fcom(b);break;case 3:this.fcom(b);this.pop();break;case 4:this.st[this.stack_ptr]=c-b;break;case 5:this.st[this.stack_ptr]=b-c;break;case 6:this.st[this.stack_ptr]=c/b;break;case 7:this.st[this.stack_ptr]=b/c;break;default:dbg_assert(!1)}};\nFPU.prototype.op_D9_reg=function(a){this.dbg_log_fpu_op(217,a);var b=a&7;switch(a>>3&7){case 0:a=this.get_sti(b);this.push(a);break;case 1:a=this.get_sti(b);this.st[this.stack_ptr+b&7]=this.get_st0();this.st[this.stack_ptr]=a;break;case 2:switch(b){case 0:break;default:dbg_log(b),this.fpu_unimpl()}break;case 3:this.fpu_unimpl();break;case 4:a=this.get_st0();switch(b){case 0:this.st[this.stack_ptr]=-a;break;case 1:this.st[this.stack_ptr]=Math.abs(a);break;case 4:this.ftst(a);break;case 5:this.fxam(a);\nbreak;default:dbg_log(b),this.fpu_unimpl()}break;case 5:this.push(this.constants[b]);break;case 6:a=this.get_st0();switch(b){case 0:this.st[this.stack_ptr]=Math.pow(2,a)-1;break;case 1:this.st[this.stack_ptr+1&7]=this.get_sti(1)*Math.log(a)/Math.LN2;this.pop();break;case 2:this.st[this.stack_ptr]=Math.tan(a);this.push(1);break;case 3:this.st[this.stack_ptr+1&7]=Math.atan2(this.get_sti(1),a);this.pop();break;case 4:this.fxtract();break;case 5:this.st[this.stack_ptr]=a%this.get_sti(1);break;case 6:this.stack_ptr=\nthis.stack_ptr-1&7;this.status_word&=~FPU_C1;break;case 7:this.stack_ptr=this.stack_ptr+1&7;this.status_word&=~FPU_C1;break;default:dbg_assert(!1)}break;case 7:a=this.get_st0();switch(b){case 0:b=this.get_sti(1);var c=Math.trunc(a/b);this.st[this.stack_ptr]=a%b;this.status_word&=~(FPU_C0|FPU_C1|FPU_C3);c&1&&(this.status_word|=FPU_C1);c&2&&(this.status_word|=FPU_C3);c&4&&(this.status_word|=FPU_C0);this.status_word&=~FPU_C2;break;case 1:this.st[this.stack_ptr+1&7]=this.get_sti(1)*Math.log(a+1)/Math.LN2;\nthis.pop();break;case 2:this.st[this.stack_ptr]=Math.sqrt(a);break;case 3:this.st[this.stack_ptr]=Math.sin(a);this.push(Math.cos(a));break;case 4:this.st[this.stack_ptr]=this.integer_round(a);break;case 5:this.st[this.stack_ptr]=a*Math.pow(2,this.truncate(this.get_sti(1)));break;case 6:this.st[this.stack_ptr]=Math.sin(a);break;case 7:this.st[this.stack_ptr]=Math.cos(a);break;default:dbg_assert(!1)}break;default:dbg_assert(!1)}};\nFPU.prototype.op_D9_mem=function(a,b){this.dbg_log_fpu_op(217,a);switch(a>>3&7){case 0:a=this.load_m32(b);this.push(a);break;case 1:this.fpu_unimpl();break;case 2:this.store_m32(b,this.get_st0());break;case 3:this.store_m32(b,this.get_st0());this.pop();break;case 4:this.fldenv(b);break;case 5:this.control_word=this.cpu.safe_read16(b);break;case 6:this.fstenv(b);break;case 7:this.cpu.safe_write16(b,this.control_word);break;default:dbg_assert(!1)}};\nFPU.prototype.op_DA_reg=function(a){this.dbg_log_fpu_op(218,a);var b=a>>3&7;a&=7;switch(b){case 0:this.cpu.test_b()&&(this.st[this.stack_ptr]=this.get_sti(a),this.stack_empty&=~(1<<this.stack_ptr));break;case 1:this.cpu.test_z()&&(this.st[this.stack_ptr]=this.get_sti(a),this.stack_empty&=~(1<<this.stack_ptr));break;case 2:this.cpu.test_be()&&(this.st[this.stack_ptr]=this.get_sti(a),this.stack_empty&=~(1<<this.stack_ptr));break;case 3:this.cpu.test_p()&&(this.st[this.stack_ptr]=this.get_sti(a),this.stack_empty&=\n~(1<<this.stack_ptr));break;case 5:1===a?(this.fucom(this.get_sti(1)),this.pop(),this.pop()):(dbg_log(b),this.fpu_unimpl());break;default:dbg_log(b),this.fpu_unimpl()}};\nFPU.prototype.op_DA_mem=function(a,b){this.dbg_log_fpu_op(218,a);a=a>>3&7;b=this.cpu.safe_read32s(b);var c=this.get_st0();switch(a){case 0:this.st[this.stack_ptr]=c+b;break;case 1:this.st[this.stack_ptr]=c*b;break;case 2:this.fcom(b);break;case 3:this.fcom(b);this.pop();break;case 4:this.st[this.stack_ptr]=c-b;break;case 5:this.st[this.stack_ptr]=b-c;break;case 6:this.st[this.stack_ptr]=c/b;break;case 7:this.st[this.stack_ptr]=b/c;break;default:dbg_assert(!1)}};\nFPU.prototype.op_DB_reg=function(a){this.dbg_log_fpu_op(219,a);var b=a>>3&7,c=a&7;switch(b){case 0:this.cpu.test_b()||(this.st[this.stack_ptr]=this.get_sti(c),this.stack_empty&=~(1<<this.stack_ptr));break;case 1:this.cpu.test_z()||(this.st[this.stack_ptr]=this.get_sti(c),this.stack_empty&=~(1<<this.stack_ptr));break;case 2:this.cpu.test_be()||(this.st[this.stack_ptr]=this.get_sti(c),this.stack_empty&=~(1<<this.stack_ptr));break;case 3:this.cpu.test_p()||(this.st[this.stack_ptr]=this.get_sti(c),this.stack_empty&=\n~(1<<this.stack_ptr));break;case 4:227===a?this.finit():228!==a&&225!==a&&(226===a?this.status_word=0:(dbg_log(h(a)),this.fpu_unimpl()));break;case 5:this.fucomi(this.get_sti(c));break;case 6:this.fcomi(this.get_sti(c));break;default:dbg_log(b),this.fpu_unimpl()}};\nFPU.prototype.op_DB_mem=function(a,b){this.dbg_log_fpu_op(219,a);a=a>>3&7;switch(a){case 0:b=this.cpu.safe_read32s(b);this.push(b);break;case 2:a=this.integer_round(this.get_st0());2147483647>=a&&-2147483648<=a?this.cpu.safe_write32(b,a):(this.invalid_arithmatic(),this.cpu.safe_write32(b,-2147483648));break;case 3:a=this.integer_round(this.get_st0());2147483647>=a&&-2147483648<=a?this.cpu.safe_write32(b,a):(this.invalid_arithmatic(),this.cpu.safe_write32(b,-2147483648));this.pop();break;case 5:this.push(this.load_m80(b));\nbreak;case 7:this.cpu.writable_or_pagefault(b,10);this.store_m80(b,this.get_st0());this.pop();break;default:dbg_log(a),this.fpu_unimpl()}};\nFPU.prototype.op_DC_reg=function(a){this.dbg_log_fpu_op(220,a);var b=a>>3&7,c=a&7;a=this.stack_ptr+c&7;c=this.get_sti(c);var d=this.get_st0();switch(b){case 0:this.st[a]=c+d;break;case 1:this.st[a]=c*d;break;case 2:this.fcom(c);break;case 3:this.fcom(c);this.pop();break;case 4:this.st[a]=d-c;break;case 5:this.st[a]=c-d;break;case 6:this.st[a]=d/c;break;case 7:this.st[a]=c/d;break;default:dbg_assert(!1)}};\nFPU.prototype.op_DC_mem=function(a,b){this.dbg_log_fpu_op(220,a);a=a>>3&7;b=this.load_m64(b);var c=this.get_st0();switch(a){case 0:this.st[this.stack_ptr]=c+b;break;case 1:this.st[this.stack_ptr]=c*b;break;case 2:this.fcom(b);break;case 3:this.fcom(b);this.pop();break;case 4:this.st[this.stack_ptr]=c-b;break;case 5:this.st[this.stack_ptr]=b-c;break;case 6:this.st[this.stack_ptr]=c/b;break;case 7:this.st[this.stack_ptr]=b/c;break;default:dbg_assert(!1)}};\nFPU.prototype.op_DD_reg=function(a){this.dbg_log_fpu_op(221,a);var b=a>>3&7;a&=7;switch(b){case 0:this.stack_empty|=1<<(this.stack_ptr+a&7);break;case 2:this.st[this.stack_ptr+a&7]=this.get_st0();break;case 3:0!==a&&(this.st[this.stack_ptr+a&7]=this.get_st0());this.pop();break;case 4:this.fucom(this.get_sti(a));break;case 5:this.fucom(this.get_sti(a));this.pop();break;default:dbg_log(b),this.fpu_unimpl()}};\nFPU.prototype.op_DD_mem=function(a,b){this.dbg_log_fpu_op(221,a);switch(a>>3&7){case 0:a=this.load_m64(b);this.push(a);break;case 1:this.fpu_unimpl();break;case 2:this.store_m64(b,0);break;case 3:this.store_m64(b,0);this.pop();break;case 4:this.frstor(b);break;case 5:this.fpu_unimpl();break;case 6:this.fsave(b);break;case 7:this.cpu.safe_write16(b,this.load_status_word());break;default:dbg_assert(!1)}};\nFPU.prototype.op_DE_reg=function(a){this.dbg_log_fpu_op(222,a);var b=a>>3&7;a&=7;var c=this.stack_ptr+a&7,d=this.get_sti(a),e=this.get_st0();switch(b){case 0:this.st[c]=d+e;break;case 1:this.st[c]=d*e;break;case 2:this.fcom(d);break;case 3:1===a?(this.fcom(this.st[c]),this.pop()):(dbg_log(b),this.fpu_unimpl());break;case 4:this.st[c]=e-d;break;case 5:this.st[c]=d-e;break;case 6:this.st[c]=e/d;break;case 7:this.st[c]=d/e;break;default:dbg_assert(!1)}this.pop()};\nFPU.prototype.op_DE_mem=function(a,b){this.dbg_log_fpu_op(222,a);a=a>>3&7;b=this.cpu.safe_read16(b)<<16>>16;var c=this.get_st0();switch(a){case 0:this.st[this.stack_ptr]=c+b;break;case 1:this.st[this.stack_ptr]=c*b;break;case 2:this.fcom(b);break;case 3:this.fcom(b);this.pop();break;case 4:this.st[this.stack_ptr]=c-b;break;case 5:this.st[this.stack_ptr]=b-c;break;case 6:this.st[this.stack_ptr]=c/b;break;case 7:this.st[this.stack_ptr]=b/c;break;default:dbg_assert(!1)}};\nFPU.prototype.op_DF_reg=function(a){this.dbg_log_fpu_op(223,a);var b=a>>3&7,c=a&7;switch(b){case 4:224===a?this.cpu.reg16[reg_ax]=this.load_status_word():(dbg_log(a),this.fpu_unimpl());break;case 5:this.fucomi(this.get_sti(c));this.pop();break;case 6:this.fcomi(this.get_sti(c));this.pop();break;default:dbg_log(b),this.fpu_unimpl()}};\nFPU.prototype.op_DF_mem=function(a,b){this.dbg_log_fpu_op(223,a);switch(a>>3&7){case 0:b=this.cpu.safe_read16(b)<<16>>16;this.push(b);break;case 1:this.fpu_unimpl();break;case 2:a=this.integer_round(this.get_st0());32767>=a&&-32768<=a?this.cpu.safe_write16(b,a):(this.invalid_arithmatic(),this.cpu.safe_write16(b,32768));break;case 3:a=this.integer_round(this.get_st0());32767>=a&&-32768<=a?this.cpu.safe_write16(b,a):(this.invalid_arithmatic(),this.cpu.safe_write16(b,32768));this.pop();break;case 4:this.fpu_unimpl();\nbreak;case 5:a=this.cpu.safe_read32s(b)>>>0;b=this.cpu.safe_read32s(b+4);this.push(a+4294967296*b);break;case 6:this.fpu_unimpl();break;case 7:this.cpu.writable_or_pagefault(b,8);a=this.integer_round(this.get_st0());if(a<TWO_POW_63&&a>=-TWO_POW_63){var c=a|0;var d=a/4294967296|0;0===d&&0>a&&(d=-1)}else c=0,d=-2147483648,this.invalid_arithmatic();this.cpu.safe_write32(b,c);this.cpu.safe_write32(b+4,d);this.pop();break;default:dbg_assert(!1)}};function hex_dump(a,b){var c=[];b=b||a.byteLength;for(var d,e,f=0;f<b>>4;f++){d=h(f<<4,5)+\"   \";for(var g=0;16>g;g++)e=a[(f<<4)+g],d+=h(e,2)+\" \";d+=\"  \";for(g=0;16>g;g++)e=a[(f<<4)+g],d+=33>e||126<e?\".\":String.fromCharCode(e);c.push(d)}return\"\\n\"+c.join(\"\\n\")}var CDROM_SECTOR_SIZE=2048,HD_SECTOR_SIZE=512;\nfunction IDEDevice(a,b,c,d,e){this.master=new IDEInterface(this,a,b,c,d,0,e);this.slave=new IDEInterface(this,a,void 0,!1,d,1,e);this.current_interface=this.master;this.cpu=a;0===d?(this.ata_port=496,this.irq=14,this.pci_id=240):1===d?(this.ata_port=368,this.irq=15,this.pci_id=248):dbg_assert(!1,\"IDE device with nr \"+d+\" ignored\",LOG_DISK);this.ata_port_high=this.ata_port|516;this.master_port=46080;this.pci_space=[134,128,16,112,5,0,160,2,0,128,1,1,0,0,0,0,this.ata_port&255|1,this.ata_port>>8,0,0,\nthis.ata_port_high&255|1,this.ata_port_high>>8,0,0,0,0,0,0,0,0,0,0,this.master_port&255|1,this.master_port>>8,0,0,0,0,0,0,0,0,0,0,67,16,212,130,0,0,0,0,0,0,0,0,0,0,0,0,this.irq,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];this.pci_bars=[{size:8},{size:4},void 0,void 0,{size:16}];this.name=\"ide\"+d;this.device_control=2;a.io.register_read(this.ata_port|\n7,this,function(){dbg_log(\"lower irq\",LOG_DISK);this.cpu.device_lower_irq(this.irq);return this.read_status()});a.io.register_read(this.ata_port_high|2,this,this.read_status);a.io.register_write(this.ata_port_high|2,this,this.write_control);a.io.register_read(this.ata_port|0,this,function(){return this.current_interface.read_data(1)},function(){return this.current_interface.read_data(2)},function(){return this.current_interface.read_data(4)});a.io.register_read(this.ata_port|1,this,function(){dbg_log(\"Read error: \"+\nh(this.current_interface.error&255)+\" slave=\"+(this.current_interface===this.slave),LOG_DISK);return this.current_interface.error});a.io.register_read(this.ata_port|2,this,function(){dbg_log(\"Read bytecount: \"+h(this.current_interface.bytecount&255),LOG_DISK);return this.current_interface.bytecount&255});a.io.register_read(this.ata_port|3,this,function(){dbg_log(\"Read sector: \"+h(this.current_interface.sector&255),LOG_DISK);return this.current_interface.sector&255});a.io.register_read(this.ata_port|\n4,this,function(){dbg_log(\"Read 1F4: \"+h(this.current_interface.cylinder_low&255),LOG_DISK);return this.current_interface.cylinder_low&255});a.io.register_read(this.ata_port|5,this,function(){dbg_log(\"Read 1F5: \"+h(this.current_interface.cylinder_high&255),LOG_DISK);return this.current_interface.cylinder_high&255});a.io.register_read(this.ata_port|6,this,function(){dbg_log(\"Read 1F6\",LOG_DISK);return this.current_interface.drive_head});a.io.register_write(this.ata_port|0,this,function(a){this.current_interface.write_data_port8(a)},\nfunction(a){this.current_interface.write_data_port16(a)},function(a){this.current_interface.write_data_port32(a)});a.io.register_write(this.ata_port|1,this,function(a){dbg_log(\"1F1/lba_count: \"+h(a),LOG_DISK);this.master.lba_count=(this.master.lba_count<<8|a)&65535;this.slave.lba_count=(this.slave.lba_count<<8|a)&65535});a.io.register_write(this.ata_port|2,this,function(a){dbg_log(\"1F2/bytecount: \"+h(a),LOG_DISK);this.master.bytecount=(this.master.bytecount<<8|a)&65535;this.slave.bytecount=(this.slave.bytecount<<\n8|a)&65535});a.io.register_write(this.ata_port|3,this,function(a){dbg_log(\"1F3/sector: \"+h(a),LOG_DISK);this.master.sector=(this.master.sector<<8|a)&65535;this.slave.sector=(this.slave.sector<<8|a)&65535});a.io.register_write(this.ata_port|4,this,function(a){dbg_log(\"1F4/sector low: \"+h(a),LOG_DISK);this.master.cylinder_low=(this.master.cylinder_low<<8|a)&65535;this.slave.cylinder_low=(this.slave.cylinder_low<<8|a)&65535});a.io.register_write(this.ata_port|5,this,function(a){dbg_log(\"1F5/sector high: \"+\nh(a),LOG_DISK);this.master.cylinder_high=(this.master.cylinder_high<<8|a)&65535;this.slave.cylinder_high=(this.slave.cylinder_high<<8|a)&65535});a.io.register_write(this.ata_port|6,this,function(a){var b=a&16;dbg_log(\"1F6/drive: \"+h(a,2),LOG_DISK);b?(dbg_log(\"Slave\",LOG_DISK),this.current_interface=this.slave):this.current_interface=this.master;this.master.drive_head=a;this.slave.drive_head=a;this.master.is_lba=this.slave.is_lba=a>>6&1;this.master.head=this.slave.head=a&15});this.dma_command=this.dma_status=\nthis.prdt_addr=0;a.io.register_write(this.ata_port|7,this,function(a){dbg_log(\"lower irq\",LOG_DISK);this.cpu.device_lower_irq(this.irq);this.current_interface.ata_command(a)});a.io.register_read(this.master_port|4,this,void 0,void 0,this.dma_read_addr);a.io.register_write(this.master_port|4,this,void 0,void 0,this.dma_set_addr);a.io.register_read(this.master_port,this,this.dma_read_command8,void 0,this.dma_read_command);a.io.register_write(this.master_port,this,this.dma_write_command8,void 0,this.dma_write_command);\na.io.register_read(this.master_port|2,this,this.dma_read_status);a.io.register_write(this.master_port|2,this,this.dma_write_status);a.io.register_read(this.master_port|8,this,function(){dbg_log(\"DMA read 0x8\",LOG_DISK);return 0});a.io.register_read(this.master_port|10,this,function(){dbg_log(\"DMA read 0xA\",LOG_DISK);return 0});a.devices.pci.register_device(this);DEBUG&&Object.seal(this)}\nIDEDevice.prototype.read_status=function(){if(this.current_interface.buffer){var a=this.current_interface.status;dbg_log(\"ATA read status: \"+h(a,2),LOG_DISK);return a}return 0};IDEDevice.prototype.write_control=function(a){dbg_log(\"set device control: \"+h(a,2)+\" interrupts \"+(a&2?\"disabled\":\"enabled\"),LOG_DISK);a&4&&(dbg_log(\"Reset via control port\",LOG_DISK),this.cpu.device_lower_irq(this.irq),this.master.device_reset(),this.slave.device_reset());this.device_control=a};\nIDEDevice.prototype.dma_read_addr=function(){dbg_log(\"dma get address: \"+h(this.prdt_addr,8),LOG_DISK);return this.prdt_addr};IDEDevice.prototype.dma_set_addr=function(a){dbg_log(\"dma set address: \"+h(a,8),LOG_DISK);this.prdt_addr=a};IDEDevice.prototype.dma_read_status=function(){dbg_log(\"DMA read status: \"+h(this.dma_status),LOG_DISK);return this.dma_status};IDEDevice.prototype.dma_write_status=function(a){dbg_log(\"DMA set status: \"+h(a),LOG_DISK);this.dma_status&=~(a&6)};\nIDEDevice.prototype.dma_read_command=function(){return this.dma_read_command8()|this.dma_read_status()<<16};IDEDevice.prototype.dma_read_command8=function(){dbg_log(\"DMA read command: \"+h(this.dma_command),LOG_DISK);return this.dma_command};IDEDevice.prototype.dma_write_command=function(a){dbg_log(\"DMA write command: \"+h(a),LOG_DISK);this.dma_write_command8(a&255);this.dma_write_status(a>>16&255)};\nIDEDevice.prototype.dma_write_command8=function(a){dbg_log(\"DMA write command8: \"+h(a),LOG_DISK);var b=this.dma_command;this.dma_command=a&9;if((b&1)!==(a&1))if(0===(a&1))this.dma_status&=-2;else switch(this.dma_status|=1,this.current_interface.current_command){case 37:case 200:this.current_interface.do_ata_read_sectors_dma();break;case 202:case 53:this.current_interface.do_ata_write_sectors_dma();break;case 160:this.current_interface.do_atapi_dma();break;default:dbg_log(\"Spurious dma command write, current command: \"+\nh(this.current_interface.current_command),LOG_DISK),dbg_assert(!1)}};IDEDevice.prototype.push_irq=function(){0===(this.device_control&2)&&(dbg_log(\"push irq\",LOG_DISK),this.dma_status|=4,this.cpu.device_raise_irq(this.irq))};\nIDEDevice.prototype.get_state=function(){var a=[];a[0]=this.master;a[1]=this.slave;a[2]=this.ata_port;a[3]=this.irq;a[4]=this.pci_id;a[5]=this.ata_port_high;a[6]=this.master_port;a[7]=this.name;a[8]=this.device_control;a[9]=this.prdt_addr;a[10]=this.dma_status;a[11]=this.current_interface===this.master;a[12]=this.dma_command;return a};\nIDEDevice.prototype.set_state=function(a){this.master=a[0];this.slave=a[1];this.ata_port=a[2];this.irq=a[3];this.pci_id=a[4];this.ata_port_high=a[5];this.master_port=a[6];this.name=a[7];this.device_control=a[8];this.prdt_addr=a[9];this.dma_status=a[10];this.current_interface=a[11]?this.master:this.slave;this.dma_command=a[12]};\nfunction IDEInterface(a,b,c,d,e,f,g){this.device=a;this.bus=g;this.nr=e;this.cpu=b;this.buffer=c;this.sector_size=d?CDROM_SECTOR_SIZE:HD_SECTOR_SIZE;this.is_atapi=d;this.cylinder_count=this.sectors_per_track=this.head_count=this.sector_count=0;this.buffer&&(this.sector_count=this.buffer.byteLength/this.sector_size,this.sector_count!==(this.sector_count|0)&&(dbg_log(\"Warning: Disk size not aligned with sector size\",LOG_DISK),this.sector_count=Math.ceil(this.sector_count)),d?(this.head_count=1,this.sectors_per_track=\n0):(this.head_count=16,this.sectors_per_track=63),this.cylinder_count=this.sector_count/this.head_count/this.sectors_per_track,this.cylinder_count!==(this.cylinder_count|0)&&(dbg_log(\"Warning: Rounding up cylinder count. Choose different head number\",LOG_DISK),this.cylinder_count=Math.floor(this.cylinder_count)),a=b.devices.rtc,a.cmos_write(CMOS_BIOS_DISKTRANSFLAG,a.cmos_read(CMOS_BIOS_DISKTRANSFLAG)|1<<4*this.nr),a.cmos_write(CMOS_DISK_DATA,a.cmos_read(CMOS_DISK_DATA)&15|240),b=CMOS_DISK_DRIVE1_CYL,\na.cmos_write(b+0,this.cylinder_count&255),a.cmos_write(b+1,this.cylinder_count>>8&255),a.cmos_write(b+2,this.head_count&255),a.cmos_write(b+3,255),a.cmos_write(b+4,255),a.cmos_write(b+5,200),a.cmos_write(b+6,this.cylinder_count&255),a.cmos_write(b+7,this.cylinder_count>>8&255),a.cmos_write(b+8,this.sectors_per_track&255));this.stats={sectors_read:0,sectors_written:0,bytes_read:0,bytes_written:0,loading:!1};this.buffer=c;this.drive_head=this.head=this.cylinder_high=this.cylinder_low=this.lba_count=\nthis.sector=this.bytecount=this.is_lba=0;this.status=80;this.sectors_per_drq=128;this.data_pointer=this.error=0;this.data=new Uint8Array(65536);this.data16=new Uint16Array(this.data.buffer);this.data32=new Int32Array(this.data.buffer);this.data_end=this.data_length=0;this.current_atapi_command=this.current_command=-1;this.write_dest=0;Object.seal(this)}\nIDEInterface.prototype.device_reset=function(){this.is_atapi?(this.status=0,this.sector=this.error=this.bytecount=1,this.cylinder_low=20,this.cylinder_high=235):(this.status=81,this.sector=this.error=this.bytecount=1,this.cylinder_high=this.cylinder_low=0)};IDEInterface.prototype.push_irq=function(){this.device.push_irq()};\nIDEInterface.prototype.ata_command=function(a){dbg_log(\"ATA Command: \"+h(a)+\" slave=\"+(this.drive_head>>4&1),LOG_DISK);if(this.buffer)switch(this.current_command=a,this.error=0,a){case 8:dbg_log(\"ATA device reset\",LOG_DISK);this.data_length=this.data_end=this.data_pointer=0;this.device_reset();this.push_irq();break;case 16:this.status=80;this.cylinder_low=0;this.push_irq();break;case 248:this.status=80;a=this.sector_count-1;this.sector=a&255;this.cylinder_low=a>>8&255;this.cylinder_high=a>>16&255;\nthis.drive_head=this.drive_head&240|a>>24&15;this.push_irq();break;case 39:this.status=80;a=this.sector_count-1;this.sector=a&255;this.cylinder_low=a>>8&255;this.cylinder_high=a>>16&255;this.sector|=a>>24<<8&65280;this.push_irq();break;case 32:case 36:case 41:case 196:this.ata_read_sectors(a);break;case 48:case 52:case 57:case 197:this.ata_write_sectors(a);break;case 144:this.push_irq();this.error=257;this.status=80;break;case 145:this.status=80;this.push_irq();break;case 160:this.is_atapi&&(this.status=\n88,this.data_allocate(12),this.data_end=12,this.bytecount=1,this.push_irq());break;case 161:dbg_log(\"ATA identify packet device\",LOG_DISK);this.is_atapi?(this.create_identify_packet(),this.status=88,this.cylinder_low=20,this.cylinder_high=235):this.status=65;this.push_irq();break;case 198:dbg_log(\"Logical sectors per DRQ Block: \"+h(this.bytecount&255),LOG_DISK);this.sectors_per_drq=this.bytecount&255;this.status=80;this.push_irq();break;case 37:case 200:this.ata_read_sectors_dma(a);break;case 53:case 202:this.ata_write_sectors_dma(a);\nbreak;case 64:dbg_log(\"read verify sectors\",LOG_DISK);this.status=80;this.push_irq();break;case 218:dbg_log(\"Unimplemented: get media status\",LOG_DISK);this.status=65;this.error=4;this.push_irq();break;case 224:dbg_log(\"ATA standby immediate\",LOG_DISK);this.status=80;this.push_irq();break;case 225:dbg_log(\"ATA idle immediate\",LOG_DISK);this.status=80;this.push_irq();break;case 231:dbg_log(\"ATA flush cache\",LOG_DISK);this.status=80;this.push_irq();break;case 236:dbg_log(\"ATA identify device\",LOG_DISK);\nif(this.is_atapi){this.status=65;this.error=4;this.push_irq();break}this.create_identify_packet();this.status=88;this.push_irq();break;case 234:dbg_log(\"flush cache ext\",LOG_DISK);this.status=80;this.push_irq();break;case 239:dbg_log(\"set features: \"+h(this.bytecount&255),LOG_DISK);this.status=80;this.push_irq();break;case 245:dbg_log(\"security freeze lock\",LOG_DISK);this.status=80;this.push_irq();break;case 249:dbg_log(\"Unimplemented: set max address\",LOG_DISK);this.status=65;this.error=4;break;\ndefault:dbg_assert(!1,\"New ATA cmd on 1F7: \"+h(a),LOG_DISK),this.status=65,this.error=4}else dbg_log(\"abort: No buffer\",LOG_DISK),this.error=4,this.status=65,this.push_irq()};\nIDEInterface.prototype.atapi_handle=function(){dbg_log(\"ATAPI Command: \"+h(this.data[0])+\" slave=\"+(this.drive_head>>4&1),LOG_DISK);this.data_pointer=0;this.current_atapi_command=this.data[0];switch(this.current_atapi_command){case 0:dbg_log(\"test unit ready\",LOG_DISK);this.data_allocate(0);this.data_end=this.data_length;this.status=80;break;case 3:this.data_allocate(this.data[4]);this.data_end=this.data_length;this.status=88;this.data[0]=240;this.data[2]=5;this.data[7]=8;break;case 18:var a=this.data[4];\nthis.status=88;dbg_log(\"inquiry: \"+h(this.data[1],2)+\" length=\"+a,LOG_DISK);this.data.set([5,128,1,49,31,0,0,0,83,79,78,89,32,32,32,32,67,68,45,82,79,77,32,67,68,85,45,49,48,48,48,32,49,46,49,97]);this.data_end=this.data_length=Math.min(36,a);break;case 26:this.data_allocate(this.data[4]);this.data_end=this.data_length;this.status=88;break;case 30:this.data_allocate(0);this.data_end=this.data_length;this.status=80;break;case 37:a=this.sector_count-1;this.data_set(new Uint8Array([a>>24&255,a>>16&255,\na>>8&255,a&255,0,0,this.sector_size>>8&255,this.sector_size&255]));this.data_end=this.data_length;this.status=88;break;case 40:this.lba_count&1?this.atapi_read_dma(this.data):this.atapi_read(this.data);break;case 66:a=this.data[8];this.data_allocate(Math.min(8,a));this.data_end=this.data_length;dbg_log(\"read q subcode: length=\"+a,LOG_DISK);this.status=88;break;case 67:a=this.data[8]|this.data[7]<<8;var b=this.data[9]>>6;this.data_allocate(a);this.data_end=this.data_length;dbg_log(\"read toc: \"+h(b,\n2)+\" length=\"+a+\" \"+(this.data[1]&2)+\" \"+h(this.data[6]),LOG_DISK);0===b?(a=this.sector_count,this.data.set(new Uint8Array([0,18,1,1,0,20,1,0,0,0,0,0,0,22,170,0,a>>24,a>>16&255,a>>8&255,a&255]))):1===b?this.data.set(new Uint8Array([0,10,1,1,0,0,0,0,0,0,0,0])):dbg_assert(!1,\"Unimplemented format: \"+b);this.status=88;break;case 70:a=this.data[8]|this.data[7]<<8;a=Math.min(a,32);this.data_allocate(a);this.data_end=this.data_length;this.data[0]=a-4>>24&255;this.data[1]=a-4>>16&255;this.data[2]=a-4>>8&\n255;this.data[3]=a-4&255;this.data[6]=8;this.data[10]=3;this.status=88;break;case 81:this.data_allocate(0);this.data_end=this.data_length;this.status=80;break;case 82:dbg_log(\"Unimplemented ATAPI command: \"+h(this.data[0]),LOG_DISK);this.status=81;this.data_length=0;this.error=80;break;case 90:a=this.data[8]|this.data[7]<<8;b=this.data[2];dbg_log(\"mode sense: \"+h(b)+\" length=\"+a,LOG_DISK);42===b&&this.data_allocate(Math.min(30,a));this.data_end=this.data_length;this.status=88;break;case 189:this.data_allocate(this.data[9]|\nthis.data[8]<<8);this.data_end=this.data_length;this.data[5]=1;this.status=88;break;case 74:this.status=81;this.data_length=0;this.error=80;dbg_log(\"Unimplemented ATAPI command: \"+h(this.data[0]),LOG_DISK);break;default:this.status=81,this.data_length=0,this.error=80,dbg_log(\"Unimplemented ATAPI command: \"+h(this.data[0]),LOG_DISK),dbg_assert(!1)}this.bytecount=this.bytecount&-8|2;0===(this.status&128)&&this.push_irq();0===(this.status&128)&&0===this.data_length&&(this.bytecount|=1,this.status&=-9)};\nIDEInterface.prototype.do_write=function(){this.status=80;dbg_assert(this.data_length<=this.data.length);var a=this.data.subarray(0,this.data_length);dbg_assert(0===this.data_length%512);this.ata_advance(this.current_command,this.data_length/512);this.push_irq();this.buffer.set(this.write_dest,a,function(){});this.report_write(this.data_length)};\nIDEInterface.prototype.atapi_read=function(a){var b=this,c=a[2]<<24|a[3]<<16|a[4]<<8|a[5],d=a[7]<<8|a[8];a=a[1];var e=d*this.sector_size,f=c*this.sector_size;dbg_log(\"CD read lba=\"+h(c)+\" lbacount=\"+h(d)+\" bytecount=\"+h(e)+\" flags=\"+h(a),LOG_DISK);this.data_length=0;var g=this.cylinder_high<<8&65280|this.cylinder_low&255;dbg_log(h(this.cylinder_high,2)+\" \"+h(this.cylinder_low,2),LOG_DISK);this.cylinder_low=this.cylinder_high=0;65535===g&&g--;g>e&&(g=e);f>=this.buffer.byteLength?(dbg_assert(!1,\"CD read: Outside of disk  end=\"+\nh(f+e)+\" size=\"+h(this.buffer.byteLength),LOG_DISK),this.status=255,this.push_irq()):0===e?(this.status=80,this.data_pointer=0):(e=Math.min(e,this.buffer.byteLength-f),this.status=208,this.report_read_start(),this.buffer.get(f,e,function(a){dbg_log(\"cd read: data arrived\",LOG_DISK);b.data_set(a);b.status=88;b.bytecount=b.bytecount&-8|2;b.push_irq();g&=-4;b.data_end=g;b.data_end>b.data_length&&(b.data_end=b.data_length);b.cylinder_low=b.data_end&255;b.cylinder_high=b.data_end>>8&255;b.report_read_end(e)}))};\nIDEInterface.prototype.atapi_read_dma=function(a){var b=this,c=a[2]<<24|a[3]<<16|a[4]<<8|a[5],d=a[7]<<8|a[8];a=a[1];var e=d*this.sector_size,f=c*this.sector_size;dbg_log(\"CD read DMA lba=\"+h(c)+\" lbacount=\"+h(d)+\" bytecount=\"+h(e)+\" flags=\"+h(a),LOG_DISK);f>=this.buffer.byteLength?(dbg_assert(!1,\"CD read: Outside of disk  end=\"+h(f+e)+\" size=\"+h(this.buffer.byteLength),LOG_DISK),this.status=255,this.push_irq()):(this.status=208,this.report_read_start(),this.buffer.get(f,e,function(a){dbg_log(\"atapi_read_dma: Data arrived\");\nb.report_read_end(e);b.status=88;b.bytecount=b.bytecount&-8|2;b.data_set(a);b.do_atapi_dma()}))};\nIDEInterface.prototype.do_atapi_dma=function(){if(0===(this.device.dma_status&1))dbg_log(\"do_atapi_dma: Status not set\",LOG_DISK);else if(0===(this.status&8))dbg_log(\"do_atapi_dma: DRQ not set\",LOG_DISK);else{dbg_log(\"atapi dma transfer len=\"+this.data_length,LOG_DISK);var a=this.device.prdt_addr,b=0,c=this.data;do{var d=this.cpu.read32s(a),e=this.cpu.read16(a+4),f=this.cpu.read8(a+7)&128;e||(e=65536);dbg_log(\"dma read dest=\"+h(d)+\" count=\"+h(e)+\" datalen=\"+h(this.data_length),LOG_DISK);this.cpu.write_blob(c.subarray(b,\nMath.min(b+e,this.data_length)),d);b+=e;a+=8;if(b>=this.data_length&&!f){dbg_log(\"leave early end=\"+ +f+\" offset=\"+h(b)+\" data_length=\"+h(this.data_length)+\" cmd=\"+h(this.current_command),LOG_DISK);break}}while(!f);dbg_log(\"end offset=\"+b,LOG_DISK);this.status=80;this.device.dma_status&=-2;this.bytecount=this.bytecount&-8|3;this.push_irq()}};\nIDEInterface.prototype.read_data=function(a){if(this.data_pointer<this.data_end){dbg_assert(this.data_pointer+a-1<this.data_end);dbg_assert(0===this.data_pointer%a,h(this.data_pointer)+\" \"+a);var b=1===a?this.data[this.data_pointer]:2===a?this.data16[this.data_pointer>>>1]:this.data32[this.data_pointer>>>2];this.data_pointer+=a;0===(this.data_pointer&(0===(this.data_end&4095)?4095:255))&&dbg_log(\"Read 1F0: \"+h(this.data[this.data_pointer],2)+\" cur=\"+h(this.data_pointer)+\" cnt=\"+h(this.data_length),\nLOG_DISK);this.data_pointer>=this.data_end&&this.read_end();return b}dbg_log(\"Read 1F0: empty\",LOG_DISK);this.data_pointer+=a;return 0};\nIDEInterface.prototype.read_end=function(){dbg_log(\"read_end cmd=\"+h(this.current_command)+\" data_pointer=\"+h(this.data_pointer)+\" end=\"+h(this.data_end)+\" length=\"+h(this.data_length),LOG_DISK);if(160===this.current_command)if(this.data_end===this.data_length)this.status=80,this.bytecount=this.bytecount&-8|3,this.push_irq();else{this.status=88;this.bytecount=this.bytecount&-8|2;this.push_irq();var a=this.cylinder_high<<8&65280|this.cylinder_low&255;this.data_end+a>this.data_length?(this.cylinder_low=\nthis.data_length-this.data_end&255,this.cylinder_high=this.data_length-this.data_end>>8&255,this.data_end=this.data_length):this.data_end+=a;dbg_log(\"data_end=\"+h(this.data_end),LOG_DISK)}else this.error=0,this.data_pointer>=this.data_length?this.status=80:(196===this.current_command||41===this.current_command?(a=Math.min(this.sectors_per_drq,(this.data_length-this.data_end)/512),dbg_assert(0===a%1)):(dbg_assert(32===this.current_command||36===this.current_command),a=1),this.ata_advance(this.current_command,\na),this.data_end+=512*a,this.status=88),this.push_irq()};\nIDEInterface.prototype.write_data_port=function(a,b){dbg_assert(0===this.data_pointer%b);this.data_pointer>=this.data_end?dbg_log(\"Redundant write to data port: \"+h(a)+\" count=\"+h(this.data_end)+\" cur=\"+h(this.data_pointer),LOG_DISK):((0===(this.data_pointer+b&(0===(this.data_end&4095)?4095:255))||20>this.data_end)&&dbg_log(\"Data port: \"+h(a>>>0)+\" count=\"+h(this.data_end)+\" cur=\"+h(this.data_pointer),LOG_DISK),1===b?this.data[this.data_pointer++]=a:2===b?(this.data16[this.data_pointer>>>1]=a,this.data_pointer+=\n2):(this.data32[this.data_pointer>>>2]=a,this.data_pointer+=4),dbg_assert(this.data_pointer<=this.data_end),this.data_pointer===this.data_end&&this.write_end())};IDEInterface.prototype.write_data_port8=function(a){this.write_data_port(a,1)};IDEInterface.prototype.write_data_port16=function(a){this.write_data_port(a,2)};IDEInterface.prototype.write_data_port32=function(a){this.write_data_port(a,4)};\nIDEInterface.prototype.write_end=function(){160===this.current_command?this.atapi_handle():(dbg_log(\"write_end data_pointer=\"+h(this.data_pointer)+\" data_length=\"+h(this.data_length),LOG_DISK),this.data_pointer>=this.data_length?this.do_write():(dbg_assert(48===this.current_command||52===this.current_command),this.status=88,this.data_end+=512,this.push_irq()))};\nIDEInterface.prototype.ata_advance=function(a,b){dbg_log(\"Advance sectors=\"+b+\" old_bytecount=\"+this.bytecount,LOG_DISK);this.bytecount-=b;36===a||41===a||52===a||57===a||37===a||53===a?(a=b+this.get_lba48(),this.sector=a&255|a>>16&65280,this.cylinder_low=a>>8&255,this.cylinder_high=a>>16&255):this.is_lba?(a=b+this.get_lba28(),this.sector=a&255,this.cylinder_low=a>>8&255,this.cylinder_high=a>>16&255,this.head=this.head&-16|a&15):(a=b+this.get_chs(),b=a/(this.head_count*this.sectors_per_track)|0,this.cylinder_low=\nb&255,this.cylinder_high=b>>8&255,this.head=(a/this.sectors_per_track|0)%this.head_count&15,this.sector=a%this.sectors_per_track+1&255,dbg_assert(a===this.get_chs()))};\nIDEInterface.prototype.ata_read_sectors=function(a){var b=this,c=36===a||41===a,d=this.get_count(c);c=this.get_lba(c);var e=32===a||36===a,f=d*this.sector_size,g=c*this.sector_size;dbg_log(\"ATA read cmd=\"+h(a)+\" mode=\"+(this.is_lba?\"lba\":\"chs\")+\" lba=\"+h(c)+\" lbacount=\"+h(d)+\" bytecount=\"+h(f),LOG_DISK);g+f>this.buffer.byteLength?(dbg_assert(!1,\"ATA read: Outside of disk\",LOG_DISK),this.status=255,this.push_irq()):(this.status=192,this.report_read_start(),this.buffer.get(g,f,function(c){dbg_log(\"ata_read: Data arrived\",\nLOG_DISK);b.data_set(c);b.status=88;b.data_end=e?512:Math.min(f,512*b.sectors_per_drq);b.ata_advance(a,e?1:Math.min(d,b.sectors_per_track));b.push_irq();b.report_read_end(f)}))};\nIDEInterface.prototype.ata_read_sectors_dma=function(a){var b=37===a;a=this.get_count(b);b=this.get_lba(b);var c=a*this.sector_size,d=b*this.sector_size;dbg_log(\"ATA DMA read lba=\"+h(b)+\" lbacount=\"+h(a)+\" bytecount=\"+h(c),LOG_DISK);d+c>this.buffer.byteLength?(dbg_assert(!1,\"ATA read: Outside of disk\",LOG_DISK),this.status=255,this.push_irq()):(this.status=88,this.device.dma_status|=1)};\nIDEInterface.prototype.do_ata_read_sectors_dma=function(){var a=this,b=37===this.current_command,c=this.get_count(b);b=this.get_lba(b);var d=c*this.sector_size,e=b*this.sector_size;dbg_assert(b<this.buffer.byteLength);this.report_read_start();var f=this.device.prdt_addr;this.buffer.get(e,d,function(b){dbg_log(\"do_ata_read_sectors_dma: Data arrived\",LOG_DISK);var e=a.device.prdt_addr,g=0;dbg_assert(f===e);do{var m=a.cpu.read32s(e),p=a.cpu.read16(e+4),n=a.cpu.read8(e+7)&128;p||(p=65536,dbg_log(\"dma: prd count was 0\",\nLOG_DISK));dbg_log(\"dma read transfer dest=\"+h(m)+\" prd_count=\"+h(p),LOG_DISK);a.cpu.write_blob(b.subarray(g,g+p),m);g+=p;e+=8}while(!n);dbg_assert(g===d);a.ata_advance(a.current_command,c);a.status=80;a.device.dma_status&=-2;a.current_command=-1;a.push_irq();a.report_read_end(d)})};\nIDEInterface.prototype.ata_write_sectors=function(a){var b=52===a||57===a,c=this.get_count(b);b=this.get_lba(b);a=48===a||52===a;var d=c*this.sector_size,e=b*this.sector_size;dbg_log(\"ATA write lba=\"+h(b)+\" mode=\"+(this.is_lba?\"lba\":\"chs\")+\" lbacount=\"+h(c)+\" bytecount=\"+h(d),LOG_DISK);e+d>this.buffer.byteLength?(dbg_assert(!1,\"ATA write: Outside of disk\",LOG_DISK),this.status=255,this.push_irq()):(this.status=88,this.data_allocate_noclear(d),this.data_end=a?512:Math.min(d,512*this.sectors_per_drq),\nthis.write_dest=e)};IDEInterface.prototype.ata_write_sectors_dma=function(a){var b=53===a;a=this.get_count(b);b=this.get_lba(b);var c=a*this.sector_size,d=b*this.sector_size;dbg_log(\"ATA DMA write lba=\"+h(b)+\" lbacount=\"+h(a)+\" bytecount=\"+h(c),LOG_DISK);d+c>this.buffer.byteLength?(dbg_assert(!1,\"ATA DMA write: Outside of disk\",LOG_DISK),this.status=255,this.push_irq()):(this.status=88,this.device.dma_status|=1)};\nIDEInterface.prototype.do_ata_write_sectors_dma=function(){var a=53===this.current_command,b=this.get_count(a),c=this.get_lba(a);a=b*this.sector_size;c*=this.sector_size;var d=this.device.prdt_addr,e=0,f=0,g=0;dbg_log(\"prdt addr: \"+h(d,8),LOG_DISK);do{var k=this.cpu.read32s(d),l=this.cpu.read16(d+4),m=this.cpu.read8(d+7)&128;l||(l=65536,dbg_log(\"dma: prd count was 0\",LOG_DISK));dbg_log(\"dma write transfer dest=\"+h(k)+\" prd_count=\"+h(l),LOG_DISK);k=this.cpu.mem8.subarray(k,k+l);dbg_assert(k.length===\nl);this.buffer.set(c+g,k,function(){f++});g+=l;d+=8;e++}while(!m);f===e?(dbg_log(\"dma write completed\",LOG_DISK),this.ata_advance(this.current_command,b),this.status=80,this.push_irq(),this.device.dma_status&=-2,this.current_command=-1):dbg_assert(!1,\"dma write not completed\",LOG_DISK);this.report_write(a)};\nIDEInterface.prototype.get_chs=function(){var a=this.cylinder_low&255|this.cylinder_high<<8&65280,b=this.head,c=this.sector&255;dbg_log(\"get_chs: c=\"+a+\" h=\"+b+\" s=\"+c,LOG_DISK);return(a*this.head_count+b)*this.sectors_per_track+c-1};IDEInterface.prototype.get_lba28=function(){return this.sector&255|this.cylinder_low<<8&65280|this.cylinder_high<<16&16711680|(this.head&15)<<24};\nIDEInterface.prototype.get_lba48=function(){return(this.sector&255|this.cylinder_low<<8&65280|this.cylinder_high<<16&16711680|this.sector>>8<<24&4278190080)>>>0};IDEInterface.prototype.get_lba=function(a){return a?this.get_lba48():this.is_lba?this.get_lba28():this.get_chs()};IDEInterface.prototype.get_count=function(a){a?(a=this.bytecount,0===a&&(a=65536)):(a=this.bytecount&255,0===a&&(a=256));return a};\nIDEInterface.prototype.create_identify_packet=function(){if(this.drive_head&16)this.data_allocate(0);else{for(var a=0;512>a;a++)this.data[a]=0;a=Math.min(16383,this.cylinder_count);this.data_set([64,this.is_atapi?133:0,a,a>>8,0,0,this.head_count,this.head_count>>8,this.sectors_per_track/512,this.sectors_per_track/512>>8,0,2,this.sectors_per_track,this.sectors_per_track>>8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,4,0,0,0,0,0,0,0,0,0,56,118,32,54,68,72,32,32,32,32,32,32,32,32,32,\n32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,128,0,1,0,0,2,0,0,0,2,0,2,7,0,a,a>>8,this.head_count,this.head_count>>8,this.sectors_per_track,0,this.sector_count&255,this.sector_count>>8&255,this.sector_count>>16&255,this.sector_count>>24&255,0,0,this.sector_count&255,this.sector_count>>8&255,this.sector_count>>16&255,this.sector_count>>24&255,0,0,160===this.current_command?0:7,160===this.current_command?0:4,0,0,30,0,30,0,30,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,126,0,0,0,0,0,0,116,0,64,0,64,0,116,0,64,0,0,0,0,0,0,0,0,0,0,1,96,0,0,0,0,0,0,0,0,0,0,0,0,this.sector_count&255,this.sector_count>>8&255,this.sector_count>>16&255,this.sector_count>>24&255]);this.data_end=this.data_length=512}};IDEInterface.prototype.data_allocate=function(a){this.data_allocate_noclear(a);for(var b=0;b<a+3>>2;b++)this.data32[b]=0};\nIDEInterface.prototype.data_allocate_noclear=function(a){this.data.length<a&&(this.data=new Uint8Array(a+3&-4),this.data16=new Uint16Array(this.data.buffer),this.data32=new Int32Array(this.data.buffer));this.data_length=a;this.data_pointer=0};IDEInterface.prototype.data_set=function(a){this.data_allocate_noclear(a.length);this.data.set(a)};IDEInterface.prototype.report_read_start=function(){this.stats.loading=!0;this.bus.send(\"ide-read-start\")};\nIDEInterface.prototype.report_read_end=function(a){this.stats.loading=!1;var b=a/this.sector_size|0;this.stats.sectors_read+=b;this.stats.bytes_read+=a;this.bus.send(\"ide-read-end\",[this.nr,a,b])};IDEInterface.prototype.report_write=function(a){var b=a/this.sector_size|0;this.stats.sectors_written+=b;this.stats.bytes_written+=a;this.bus.send(\"ide-write-end\",[this.nr,a,b])};\nIDEInterface.prototype.get_state=function(){var a=[];a[0]=this.bytecount;a[1]=this.cylinder_count;a[2]=this.cylinder_high;a[3]=this.cylinder_low;a[4]=this.data_pointer;a[5]=0;a[6]=0;a[7]=0;a[8]=0;a[9]=this.drive_head;a[10]=this.error;a[11]=this.head;a[12]=this.head_count;a[13]=this.is_atapi;a[14]=this.is_lba;a[15]=this.lba_count;a[16]=this.data;a[17]=this.data_length;a[18]=this.sector;a[19]=this.sector_count;a[20]=this.sector_size;a[21]=this.sectors_per_drq;a[22]=this.sectors_per_track;a[23]=this.status;\na[24]=this.write_dest;a[25]=this.current_command;a[26]=this.data_end;a[27]=this.current_atapi_command;return a};\nIDEInterface.prototype.set_state=function(a){this.bytecount=a[0];this.cylinder_count=a[1];this.cylinder_high=a[2];this.cylinder_low=a[3];this.data_pointer=a[4];this.drive_head=a[9];this.error=a[10];this.head=a[11];this.head_count=a[12];this.is_atapi=a[13];this.is_lba=a[14];this.lba_count=a[15];this.data=a[16];this.data_length=a[17];this.sector=a[18];this.sector_count=a[19];this.sector_size=a[20];this.sectors_per_drq=a[21];this.sectors_per_track=a[22];this.status=a[23];this.write_dest=a[24];this.current_command=\na[25];this.data_end=a[26];this.current_atapi_command=a[27];this.data16=new Uint16Array(this.data.buffer);this.data32=new Int32Array(this.data.buffer)};var PCI_CONFIG_ADDRESS=3320,PCI_CONFIG_DATA=3324;\nfunction PCI(a){this.pci_addr=new Uint8Array(4);this.pci_value=new Uint8Array(4);this.pci_response=new Uint8Array(4);this.pci_status=new Uint8Array(4);this.pci_addr32=new Int32Array(this.pci_addr.buffer);this.pci_value32=new Int32Array(this.pci_value.buffer);this.pci_response32=new Int32Array(this.pci_response.buffer);this.pci_status32=new Int32Array(this.pci_status.buffer);this.device_spaces=[];this.devices=[];this.cpu=a;for(var b=0;256>b;b++)this.device_spaces[b]=void 0,this.devices[b]=void 0;this.io=\na.io;a.io.register_write(PCI_CONFIG_DATA,this,function(a){this.pci_write8(this.pci_addr32[0],a)},function(a){this.pci_write16(this.pci_addr32[0],a)},function(a){this.pci_write32(this.pci_addr32[0],a)});a.io.register_write(PCI_CONFIG_DATA+1,this,function(a){this.pci_write8(this.pci_addr32[0]+1|0,a)});a.io.register_write(PCI_CONFIG_DATA+2,this,function(a){this.pci_write8(this.pci_addr32[0]+2|0,a)},function(a){this.pci_write16(this.pci_addr32[0]+2|0,a)});a.io.register_write(PCI_CONFIG_DATA+3,this,function(a){this.pci_write8(this.pci_addr32[0]+\n3|0,a)});a.io.register_read_consecutive(PCI_CONFIG_DATA,this,function(){return this.pci_response[0]},function(){return this.pci_response[1]},function(){return this.pci_response[2]},function(){return this.pci_response[3]});a.io.register_read_consecutive(PCI_CONFIG_ADDRESS,this,function(){return this.pci_status[0]},function(){return this.pci_status[1]},function(){return this.pci_status[2]},function(){return this.pci_status[3]});a.io.register_write_consecutive(PCI_CONFIG_ADDRESS,this,function(a){this.pci_addr[0]=\na&252},function(a){this.pci_addr[1]=a},function(a){this.pci_addr[2]=a},function(a){this.pci_addr[3]=a;this.pci_query()});this.register_device({pci_id:0,pci_space:[134,128,55,18,0,0,0,0,2,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],pci_bars:[],name:\"82441FX PMC\"});this.isa_bridge={pci_id:8,pci_space:[134,128,0,112,7,0,0,2,0,0,1,6,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0],pci_bars:[],name:\"82371SB PIIX3 ISA\"};this.isa_bridge_space=this.register_device(this.isa_bridge);this.isa_bridge_space8=new Uint8Array(this.isa_bridge_space.buffer)}PCI.prototype.get_state=function(){for(var a=[],b=0;256>b;b++)a[b]=this.device_spaces[b];a[256]=this.pci_addr;a[257]=this.pci_value;a[258]=this.pci_response;a[259]=this.pci_status;return a};\nPCI.prototype.set_state=function(a){for(var b=0;256>b;b++){var c=this.devices[b],d=a[b];if(c&&d){for(var e=0;e<c.pci_bars.length;e++){var f=d[4+e];if(f&1){var g=c.pci_bars[e];this.set_io_bars(g,g.original_bar&65534,f&65534)}}this.device_spaces[b].set(d)}else c&&dbg_log(\"Warning: While restoring PCI device: Device exists in current configuration but not in snapshot (\"+c.name+\")\"),d&&dbg_log(\"Warning: While restoring PCI device: Device doesn't exist in current configuration but does in snapshot (device \"+\nh(b,2)+\")\")}this.pci_addr.set(a[256]);this.pci_value.set(a[257]);this.pci_response.set(a[258]);this.pci_status.set(a[259])};\nPCI.prototype.pci_query=function(){var a=this.pci_addr[2]<<8|this.pci_addr[1],b=this.pci_addr[0]&252,c=a>>3&31;var d=\"query enabled=\"+(this.pci_addr[3]>>7)+(\" bdf=\"+h(a,4));d+=\" dev=\"+h(c,2);d+=\" addr=\"+h(b,2);c=this.device_spaces[a];void 0!==c?(this.pci_status32[0]=-2147483648,this.pci_response32[0]=b<c.byteLength?c[b>>2]:0,d+=\" \"+h(this.pci_addr32[0]>>>0,8)+\" -> \"+h(this.pci_response32[0]>>>0,8),b>=c.byteLength&&(d+=\" (undef)\"),d+=\" (\"+this.devices[a].name+\")\",dbg_log(d,LOG_PCI)):(this.pci_response32[0]=\n-1,this.pci_status32[0]=0)};PCI.prototype.pci_write8=function(a,b){var c=a>>8&65535;a&=255;var d=new Uint8Array(this.device_spaces[c].buffer),e=this.devices[c];d&&(dbg_assert(!(16<=a&&44>a||48<=a&&52>a),\"PCI: Expected 32-bit write\"),dbg_log(\"PCI write8 dev=\"+h(c>>3,2)+\" (\"+e.name+\") addr=\"+h(a,4)+\" value=\"+h(b,2),LOG_PCI),d[a]=b)};\nPCI.prototype.pci_write16=function(a,b){dbg_assert(0===(a&1));var c=a>>8&65535;a&=255;var d=new Uint16Array(this.device_spaces[c].buffer),e=this.devices[c];d&&(dbg_assert(!(16<=a&&44>a||48<=a&&52>a),\"PCI: Expected 32-bit write\"),dbg_log(\"PCI writ16 dev=\"+h(c>>3,2)+\" (\"+e.name+\") addr=\"+h(a,4)+\" value=\"+h(b,4),LOG_PCI),d[a>>>1]=b)};\nPCI.prototype.pci_write32=function(a,b){dbg_assert(0===(a&3));var c=a>>8&65535;a&=255;var d=this.device_spaces[c],e=this.devices[c];if(d)if(16<=a&&40>a){var f=a-16>>2,g=e.pci_bars[f];dbg_log(\"BAR\"+f+\" exists=\"+(g?\"y\":\"n\")+\" changed to \"+h(b>>>0)+\" dev=\"+h(c>>3,2)+\" (\"+e.name+\") \",LOG_PCI);g?(dbg_assert(!(g.size&g.size-1),\"bar size should be power of 2\"),c=a>>2,e=d[c]&1,-1===(b|3|g.size-1)?(b=~(g.size-1)|e,0===e&&(d[c]=b)):0===e&&(f=g.original_bar,(b&-16)!==(f&-16)&&dbg_log(\"Warning: Changing memory bar not supported, ignored\",\nLOG_PCI),d[c]=f),1===e&&(dbg_assert(1===e),e=d[c]&65534,f=b&65534,dbg_log(\"io bar changed from \"+h(e>>>0,8)+\" to \"+h(f>>>0,8)+\" size=\"+g.size,LOG_PCI),this.set_io_bars(g,e,f),d[c]=b|1)):d[a>>2]=0;dbg_log(\"BAR effective value: \"+h(d[a>>2]>>>0),LOG_PCI)}else 48===a?(dbg_log(\"PCI write rom address dev=\"+h(c>>3,2)+\" (\"+e.name+\") value=\"+h(b>>>0,8),LOG_PCI),d[a>>2]=e.pci_rom_size?-1===(b|2047)?-e.pci_rom_size|0:e.pci_rom_address|0:0):(dbg_log(\"PCI write dev=\"+h(c>>3,2)+\" (\"+e.name+\") addr=\"+h(a,4)+\" value=\"+\nh(b>>>0,8),LOG_PCI),d[a>>>2]=b)};\nPCI.prototype.register_device=function(a){dbg_assert(void 0!==a.pci_id);dbg_assert(void 0!==a.pci_space);dbg_assert(void 0!==a.pci_bars);var b=a.pci_id;dbg_log(\"PCI register bdf=\"+h(b)+\" (\"+a.name+\")\",LOG_PCI);dbg_assert(!this.devices[b]);dbg_assert(64<=a.pci_space.length);dbg_assert(b<this.devices.length);var c=new Int32Array(64);c.set(new Int32Array((new Uint8Array(a.pci_space)).buffer));this.device_spaces[b]=c;this.devices[b]=a;b=c.slice(4,10);for(var d=0;d<a.pci_bars.length;d++){var e=a.pci_bars[d];\nif(e){var f=b[d],g=f&1;e.original_bar=f;e.entries=[];if(0!==g)for(dbg_assert(1===g),f&=-2,g=0;g<e.size;g++)e.entries[g]=this.io.ports[f+g]}}return c};\nPCI.prototype.set_io_bars=function(a,b,c){var d=a.size;dbg_log(\"Move io bars: from=\"+h(b)+\" to=\"+h(c)+\" count=\"+d,LOG_PCI);for(var e=this.io.ports,f=0;f<d;f++){var g=e[b+f];e[b+f]=this.io.create_empty_entry();g.read8===this.io.empty_port_read8&&g.read16===this.io.empty_port_read16&&g.read32===this.io.empty_port_read32&&g.write8===this.io.empty_port_write&&g.write16===this.io.empty_port_write&&g.write32===this.io.empty_port_write&&dbg_log(\"Move IO bar: Source not mapped, port=\"+h(b+f,4),LOG_PCI);g=\na.entries[f];var k=e[c+f];dbg_assert(g&&k);e[c+f]=g;dbg_assert(k.read8===this.io.empty_port_read8,\"Bad IO bar: Target already mapped\");dbg_assert(k.read16===this.io.empty_port_read16,\"Bad IO bar: Target already mapped\");dbg_assert(k.read32===this.io.empty_port_read32,\"Bad IO bar: Target already mapped\");dbg_assert(k.write8===this.io.empty_port_write,\"Bad IO bar: Target already mapped\");dbg_assert(k.write16===this.io.empty_port_write,\"Bad IO bar: Target already mapped\");dbg_assert(k.write32===this.io.empty_port_write,\n\"Bad IO bar: Target already mapped\")}};PCI.prototype.raise_irq=function(a){var b=this.device_spaces[a];dbg_assert(b);this.cpu.device_raise_irq(this.isa_bridge_space8[96+((b[15]>>8&255)-1+((a>>3)-1&255)&3)])};PCI.prototype.lower_irq=function(a){var b=this.device_spaces[a];dbg_assert(b);this.cpu.device_lower_irq(this.isa_bridge_space8[96+((b[15]>>8&255)+(a>>3&255)-2&3)])};function FloppyController(a,b,c){this.io=a.io;this.cpu=a;this.dma=a.devices.dma;this.bytes_expecting=0;this.receiving_command=new Uint8Array(10);this.receiving_index=0;this.next_command=null;this.response_data=new Uint8Array(10);this.floppy_size=this.response_length=this.response_index=0;this.fda_image=b;this.fdb_image=c;this.last_head=this.last_cylinder=this.drive=this.status_reg2=this.status_reg1=this.status_reg0=0;this.last_sector=1;this.dor=0;if(b){this.floppy_size=b.byteLength;if((c={160:{type:1,\ntracks:40,sectors:8,heads:1},180:{type:1,tracks:40,sectors:9,heads:1},200:{type:1,tracks:40,sectors:10,heads:1},320:{type:1,tracks:40,sectors:8,heads:2},360:{type:1,tracks:40,sectors:9,heads:2},400:{type:1,tracks:40,sectors:10,heads:2},720:{type:3,tracks:80,sectors:9,heads:2},1200:{type:2,tracks:80,sectors:15,heads:2},1440:{type:4,tracks:80,sectors:18,heads:2},1722:{type:5,tracks:82,sectors:21,heads:2},2880:{type:5,tracks:80,sectors:36,heads:2}}[this.floppy_size>>10])&&0===(this.floppy_size&1023))a.devices.rtc.cmos_write(CMOS_FLOPPY_DRIVE_TYPE,\nc.type<<4),a=c.sectors,b=c.heads,c=c.tracks;else throw\"Unknown floppy size: \"+h(b.byteLength);this.sectors_per_track=a;this.number_of_heads=b;this.number_of_cylinders=c}else a.devices.rtc.cmos_write(CMOS_FLOPPY_DRIVE_TYPE,64),this.floppy_size=this.number_of_cylinders=this.number_of_heads=this.sectors_per_track=0;this.io.register_read(1008,this,this.port3F0_read);this.io.register_read(1010,this,this.port3F2_read);this.io.register_read(1012,this,this.port3F4_read);this.io.register_read(1013,this,this.port3F5_read);\nthis.io.register_read(1015,this,this.port3F7_read);this.io.register_write(1010,this,this.port3F2_write);this.io.register_write(1013,this,this.port3F5_write)}\nFloppyController.prototype.get_state=function(){var a=[];a[0]=this.bytes_expecting;a[1]=this.receiving_command;a[2]=this.receiving_index;a[4]=this.response_data;a[5]=this.response_index;a[6]=this.response_length;a[7]=this.floppy_size;a[8]=this.status_reg0;a[9]=this.status_reg1;a[10]=this.status_reg2;a[11]=this.drive;a[12]=this.last_cylinder;a[13]=this.last_head;a[14]=this.last_sector;a[15]=this.dor;a[16]=this.sectors_per_track;a[17]=this.number_of_heads;a[18]=this.number_of_cylinders;return a};\nFloppyController.prototype.set_state=function(a){this.bytes_expecting=a[0];this.receiving_command=a[1];this.receiving_index=a[2];this.next_command=a[3];this.response_data=a[4];this.response_index=a[5];this.response_length=a[6];this.floppy_size=a[7];this.status_reg0=a[8];this.status_reg1=a[9];this.status_reg2=a[10];this.drive=a[11];this.last_cylinder=a[12];this.last_head=a[13];this.last_sector=a[14];this.dor=a[15];this.sectors_per_track=a[16];this.number_of_heads=a[17];this.number_of_cylinders=a[18]};\nFloppyController.prototype.port3F0_read=function(){dbg_log(\"3F0 read\",LOG_FLOPPY);return 0};FloppyController.prototype.port3F4_read=function(){dbg_log(\"3F4 read\",LOG_FLOPPY);var a=128;this.response_index<this.response_length&&(a|=80);0===(this.dor&8)&&(a|=32);return a};FloppyController.prototype.port3F7_read=function(){dbg_log(\"3F7 read\",LOG_FLOPPY);return 0};\nFloppyController.prototype.port3F5_read=function(){if(this.response_index<this.response_length)return dbg_log(\"3F5 read: \"+this.response_data[this.response_index],LOG_FLOPPY),this.cpu.device_lower_irq(6),this.response_data[this.response_index++];dbg_log(\"3F5 read, empty\",LOG_FLOPPY);return 255};\nFloppyController.prototype.port3F5_write=function(a){if(this.fda_image)if(dbg_log(\"3F5 write \"+h(a),LOG_FLOPPY),0<this.bytes_expecting){if(this.receiving_command[this.receiving_index++]=a,this.bytes_expecting--,0===this.bytes_expecting){if(DEBUG){a=\"3F5 command received: \";for(var b=0;b<this.receiving_index;b++)a+=h(this.receiving_command[b])+\" \";dbg_log(a,LOG_FLOPPY)}this.next_command.call(this,this.receiving_command)}}else{switch(a){case 3:this.next_command=this.fix_drive_data;this.bytes_expecting=\n2;break;case 4:this.next_command=this.check_drive_status;this.bytes_expecting=1;break;case 5:case 197:this.next_command=function(a){this.do_sector(!0,a)};this.bytes_expecting=8;break;case 230:this.next_command=function(a){this.do_sector(!1,a)};this.bytes_expecting=8;break;case 7:this.next_command=this.calibrate;this.bytes_expecting=1;break;case 8:this.check_interrupt_status();break;case 74:this.next_command=this.read_sector_id;this.bytes_expecting=1;break;case 15:this.bytes_expecting=2;this.next_command=\nthis.seek;break;case 14:dbg_log(\"dump registers\",LOG_FLOPPY);this.response_data[0]=128;this.response_index=0;this.response_length=1;this.bytes_expecting=0;break;default:dbg_assert(!1,\"Unimplemented floppy command call \"+h(a))}this.receiving_index=0}};FloppyController.prototype.port3F2_read=function(){dbg_log(\"read 3F2: DOR\",LOG_FLOPPY);return this.dor};\nFloppyController.prototype.port3F2_write=function(a){4===(a&4)&&0===(this.dor&4)&&this.cpu.device_raise_irq(6);dbg_log(\"start motors: \"+h(a>>4),LOG_FLOPPY);dbg_log(\"enable dma: \"+!!(a&8),LOG_FLOPPY);dbg_log(\"reset fdc: \"+!!(a&4),LOG_FLOPPY);dbg_log(\"drive select: \"+(a&3),LOG_FLOPPY);dbg_log(\"DOR = \"+h(a),LOG_FLOPPY);this.dor=a};FloppyController.prototype.check_drive_status=function(a){dbg_log(\"check drive status\",LOG_FLOPPY);this.response_index=0;this.response_length=1;this.response_data[0]=32};\nFloppyController.prototype.seek=function(a){dbg_log(\"seek\",LOG_FLOPPY);dbg_assert(0===(a[0]&3),\"Unhandled seek drive\");this.last_cylinder=a[1];this.last_head=a[0]>>2&1;this.raise_irq()};FloppyController.prototype.calibrate=function(a){dbg_log(\"floppy calibrate\",LOG_FLOPPY);this.raise_irq()};FloppyController.prototype.check_interrupt_status=function(){dbg_log(\"floppy check interrupt status\",LOG_FLOPPY);this.response_index=0;this.response_length=2;this.response_data[0]=32;this.response_data[1]=this.last_cylinder};\nFloppyController.prototype.do_sector=function(a,b){var c=b[2],d=b[1],e=b[3],f=128<<b[4],g=b[5]-b[3]+1,k=((c+this.number_of_heads*d)*this.sectors_per_track+e-1)*f;dbg_log(\"Floppy \"+(a?\"Write\":\"Read\"),LOG_FLOPPY);dbg_log(\"from \"+h(k)+\" length \"+h(g*f),LOG_FLOPPY);dbg_log(d+\" / \"+c+\" / \"+e,LOG_FLOPPY);b[4]||dbg_log(\"FDC: sector count is zero, use data length instead\",LOG_FLOPPY);this.fda_image&&(a?this.dma.do_write(this.fda_image,k,g*f,2,this.done.bind(this,b,d,c,e)):this.dma.do_read(this.fda_image,\nk,g*f,2,this.done.bind(this,b,d,c,e)))};FloppyController.prototype.done=function(a,b,c,d,e){e||(d++,d>this.sectors_per_track&&(d=1,c++,c>=this.number_of_heads&&(c=0,b++)),this.last_cylinder=b,this.last_head=c,this.last_sector=d,this.response_index=0,this.response_length=7,this.response_data[0]=c<<2|32,this.response_data[1]=0,this.response_data[2]=0,this.response_data[3]=b,this.response_data[4]=c,this.response_data[5]=d,this.response_data[6]=a[4],this.raise_irq())};\nFloppyController.prototype.fix_drive_data=function(a){dbg_log(\"floppy fix drive data \"+a,LOG_FLOPPY)};FloppyController.prototype.read_sector_id=function(a){dbg_log(\"floppy read sector id \"+a,LOG_FLOPPY);this.response_index=0;this.response_length=7;this.response_data[0]=0;this.response_data[1]=0;this.response_data[2]=0;this.response_data[3]=0;this.response_data[4]=0;this.response_data[5]=0;this.response_data[6]=0;this.raise_irq()};FloppyController.prototype.raise_irq=function(){this.dor&8&&this.cpu.device_raise_irq(6)};var A20_MASK=-1048577,A20_MASK16=-524289,A20_MASK32=-262145,USE_A20=!1;CPU.prototype.debug_write=function(a,b,c){DEBUG&&(dbg_assert(\"number\"===typeof c&&!isNaN(c)),dbg_assert(-2147483648<=c&&2147483648>a),this.debug_read(a,b,!0))};CPU.prototype.debug_read=function(a,b,c){DEBUG&&(dbg_assert(\"number\"===typeof a),dbg_assert(!isNaN(a)))};CPU.prototype.mmap_read8=function(a){return this.memory_map_read8[a>>>MMAP_BLOCK_BITS](a)};\nCPU.prototype.mmap_write8=function(a,b){this.memory_map_write8[a>>>MMAP_BLOCK_BITS](a,b)};CPU.prototype.mmap_read16=function(a){var b=this.memory_map_read8[a>>>MMAP_BLOCK_BITS];return b(a)|b(a+1|0)<<8};CPU.prototype.mmap_write16=function(a,b){var c=this.memory_map_write8[a>>>MMAP_BLOCK_BITS];c(a,b&255);c(a+1|0,b>>8&255)};CPU.prototype.mmap_read32=function(a){return this.memory_map_read32[a>>>MMAP_BLOCK_BITS](a)};\nCPU.prototype.mmap_write32=function(a,b){this.memory_map_write32[a>>>MMAP_BLOCK_BITS](a,b)};CPU.prototype.in_mapped_range=function(a){return 655360<=(a|0)&&786432>(a|0)||a>>>0>=this.memory_size>>>0};CPU.prototype.read8=function(a){this.debug_read(a,1);USE_A20&&!this.a20_enabled&&(a&=A20_MASK);return this.in_mapped_range(a)?this.mmap_read8(a):this.mem8[a]};\nCPU.prototype.read16=function(a){this.debug_read(a,2);USE_A20&&!this.a20_enabled&&(a&=A20_MASK);return this.in_mapped_range(a)?this.mmap_read16(a):this.mem8[a]|this.mem8[a+1|0]<<8};CPU.prototype.read_aligned16=function(a){dbg_assert(0<=a&&2147483648>a);this.debug_read(a<<1,2);USE_A20&&!this.a20_enabled&&(a&=A20_MASK16);return this.in_mapped_range(a<<1)?this.mmap_read16(a<<1):this.mem16[a]};\nCPU.prototype.read32s=function(a){this.debug_read(a,4);USE_A20&&!this.a20_enabled&&(a&=A20_MASK);return this.in_mapped_range(a)?this.mmap_read32(a):this.mem8[a]|this.mem8[a+1|0]<<8|this.mem8[a+2|0]<<16|this.mem8[a+3|0]<<24};CPU.prototype.read_aligned32=function(a){dbg_assert(0<=a&&1073741824>a);this.debug_read(a<<2,4);USE_A20&&!this.a20_enabled&&(a&=A20_MASK32);return this.in_mapped_range(a<<2)?this.mmap_read32(a<<2):this.mem32s[a]};\nCPU.prototype.write8=function(a,b){this.debug_write(a,1,b);USE_A20&&!this.a20_enabled&&(a&=A20_MASK);this.in_mapped_range(a)?this.mmap_write8(a,b):this.mem8[a]=b};CPU.prototype.write16=function(a,b){this.debug_write(a,2,b);USE_A20&&!this.a20_enabled&&(a&=A20_MASK);this.in_mapped_range(a)?this.mmap_write16(a,b):(this.mem8[a]=b,this.mem8[a+1|0]=b>>8)};\nCPU.prototype.write_aligned16=function(a,b){dbg_assert(0<=a&&2147483648>a);this.debug_write(a<<1,2,b);USE_A20&&!this.a20_enabled&&(a&=A20_MASK16);this.in_mapped_range(a<<1)?this.mmap_write16(a<<1,b):this.mem16[a]=b};CPU.prototype.write32=function(a,b){this.debug_write(a,4,b);USE_A20&&!this.a20_enabled&&(a&=A20_MASK);this.in_mapped_range(a)?this.mmap_write32(a,b):(this.mem8[a]=b,this.mem8[a+1|0]=b>>8,this.mem8[a+2|0]=b>>16,this.mem8[a+3|0]=b>>24)};\nCPU.prototype.write_aligned32=function(a,b){dbg_assert(0<=a&&1073741824>a);this.debug_write(a<<2,4,b);USE_A20&&!this.a20_enabled&&(a&=A20_MASK32);this.in_mapped_range(a<<2)?this.mmap_write32(a<<2,b):this.mem32s[a]=b};CPU.prototype.write_blob=function(a,b){this.debug_write(b,a.length,0);dbg_assert(a&&0<=a.length);this.mem8.set(a,b)};CPU.prototype.write_blob32=function(a,b){dbg_assert(a&&a.length);this.debug_write(b,a.length<<2,0);this.mem32s.set(a,b)};function DMA(a){this.cpu=a;this.channel_page=new Uint8Array(8);this.channel_pagehi=new Uint8Array(8);this.channel_addr=new Uint16Array(8);this.channel_addr_init=new Uint16Array(8);this.channel_count=new Uint16Array(8);this.channel_count_init=new Uint16Array(8);this.channel_mask=new Uint8Array(8);this.channel_mode=new Uint8Array(8);this.unmask_listeners=[];this.lsb_msb_flipflop=0;a=a.io;a.register_write(0,this,this.port_addr_write.bind(this,0));a.register_write(2,this,this.port_addr_write.bind(this,\n1));a.register_write(4,this,this.port_addr_write.bind(this,2));a.register_write(6,this,this.port_addr_write.bind(this,3));a.register_write(1,this,this.port_count_write.bind(this,0));a.register_write(3,this,this.port_count_write.bind(this,1));a.register_write(5,this,this.port_count_write.bind(this,2));a.register_write(7,this,this.port_count_write.bind(this,3));a.register_read(0,this,this.port_addr_read.bind(this,0));a.register_read(2,this,this.port_addr_read.bind(this,1));a.register_read(4,this,this.port_addr_read.bind(this,\n2));a.register_read(6,this,this.port_addr_read.bind(this,3));a.register_read(1,this,this.port_count_read.bind(this,0));a.register_read(3,this,this.port_count_read.bind(this,1));a.register_read(5,this,this.port_count_read.bind(this,2));a.register_read(7,this,this.port_count_read.bind(this,3));a.register_write(192,this,this.port_addr_write.bind(this,4));a.register_write(196,this,this.port_addr_write.bind(this,5));a.register_write(200,this,this.port_addr_write.bind(this,6));a.register_write(204,this,\nthis.port_addr_write.bind(this,7));a.register_write(194,this,this.port_count_write.bind(this,4));a.register_write(198,this,this.port_count_write.bind(this,5));a.register_write(202,this,this.port_count_write.bind(this,6));a.register_write(206,this,this.port_count_write.bind(this,7));a.register_read(192,this,this.port_addr_read.bind(this,4));a.register_read(196,this,this.port_addr_read.bind(this,5));a.register_read(200,this,this.port_addr_read.bind(this,6));a.register_read(204,this,this.port_addr_read.bind(this,\n7));a.register_read(194,this,this.port_count_read.bind(this,4));a.register_read(198,this,this.port_count_read.bind(this,5));a.register_read(202,this,this.port_count_read.bind(this,6));a.register_read(206,this,this.port_count_read.bind(this,7));a.register_write(135,this,this.port_page_write.bind(this,0));a.register_write(131,this,this.port_page_write.bind(this,1));a.register_write(129,this,this.port_page_write.bind(this,2));a.register_write(130,this,this.port_page_write.bind(this,3));a.register_write(143,\nthis,this.port_page_write.bind(this,4));a.register_write(139,this,this.port_page_write.bind(this,5));a.register_write(137,this,this.port_page_write.bind(this,6));a.register_write(138,this,this.port_page_write.bind(this,7));a.register_read(135,this,this.port_page_read.bind(this,0));a.register_read(131,this,this.port_page_read.bind(this,1));a.register_read(129,this,this.port_page_read.bind(this,2));a.register_read(130,this,this.port_page_read.bind(this,3));a.register_read(143,this,this.port_page_read.bind(this,\n4));a.register_read(139,this,this.port_page_read.bind(this,5));a.register_read(137,this,this.port_page_read.bind(this,6));a.register_read(138,this,this.port_page_read.bind(this,7));a.register_write(1159,this,this.port_pagehi_write.bind(this,0));a.register_write(1155,this,this.port_pagehi_write.bind(this,1));a.register_write(1153,this,this.port_pagehi_write.bind(this,2));a.register_write(1154,this,this.port_pagehi_write.bind(this,3));a.register_write(1163,this,this.port_pagehi_write.bind(this,5));\na.register_write(1161,this,this.port_pagehi_write.bind(this,6));a.register_write(1162,this,this.port_pagehi_write.bind(this,7));a.register_read(1159,this,this.port_pagehi_read.bind(this,0));a.register_read(1155,this,this.port_pagehi_read.bind(this,1));a.register_read(1153,this,this.port_pagehi_read.bind(this,2));a.register_read(1154,this,this.port_pagehi_read.bind(this,3));a.register_read(1163,this,this.port_pagehi_read.bind(this,5));a.register_read(1161,this,this.port_pagehi_read.bind(this,6));a.register_read(1162,\nthis,this.port_pagehi_read.bind(this,7));a.register_write(10,this,this.port_singlemask_write.bind(this,0));a.register_write(212,this,this.port_singlemask_write.bind(this,4));a.register_write(15,this,this.port_multimask_write.bind(this,0));a.register_write(222,this,this.port_multimask_write.bind(this,4));a.register_read(15,this,this.port_multimask_read.bind(this,0));a.register_read(222,this,this.port_multimask_read.bind(this,4));a.register_write(11,this,this.port_mode_write.bind(this,0));a.register_write(214,\nthis,this.port_mode_write.bind(this,4));a.register_write(12,this,this.portC_write);a.register_write(216,this,this.portC_write)}DMA.prototype.get_state=function(){return[this.channel_page,this.channel_pagehi,this.channel_addr,this.channel_addr_init,this.channel_count,this.channel_count_init,this.channel_mask,this.channel_mode,this.lsb_msb_flipflop]};\nDMA.prototype.set_state=function(a){this.channel_page=a[0];this.channel_pagehi=a[1];this.channel_addr=a[2];this.channel_addr_init=a[3];this.channel_count=a[4];this.channel_count_init=a[5];this.channel_mask=a[6];this.channel_mode=a[7];this.lsb_msb_flipflop=a[8]};DMA.prototype.port_count_write=function(a,b){dbg_log(\"count write [\"+a+\"] = \"+h(b),LOG_DMA);this.channel_count[a]=this.flipflop_get(this.channel_count[a],b,!1);this.channel_count_init[a]=this.flipflop_get(this.channel_count_init[a],b,!0)};\nDMA.prototype.port_count_read=function(a){dbg_log(\"count read [\"+a+\"] -> \"+h(this.channel_count[a]),LOG_DMA);return this.flipflop_read(this.channel_count[a])};DMA.prototype.port_addr_write=function(a,b){dbg_log(\"addr write [\"+a+\"] = \"+h(b),LOG_DMA);this.channel_addr[a]=this.flipflop_get(this.channel_addr[a],b,!1);this.channel_addr_init[a]=this.flipflop_get(this.channel_addr_init[a],b,!0)};DMA.prototype.port_addr_read=function(a){dbg_log(\"addr read [\"+a+\"] -> \"+h(this.channel_addr[a]),LOG_DMA);return this.flipflop_read(this.channel_addr[a])};\nDMA.prototype.port_pagehi_write=function(a,b){dbg_log(\"pagehi write [\"+a+\"] = \"+h(b),LOG_DMA);this.channel_pagehi[a]=b};DMA.prototype.port_pagehi_read=function(a){dbg_log(\"pagehi read [\"+a+\"]\",LOG_DMA);return this.channel_pagehi[a]};DMA.prototype.port_page_write=function(a,b){dbg_log(\"page write [\"+a+\"] = \"+h(b),LOG_DMA);this.channel_page[a]=b};DMA.prototype.port_page_read=function(a){dbg_log(\"page read [\"+a+\"]\",LOG_DMA);return this.channel_page[a]};\nDMA.prototype.port_singlemask_write=function(a,b){a=(b&3)+a;b=b&4?1:0;dbg_log(\"singlechannel mask write [\"+a+\"] = \"+b,LOG_DMA);this.update_mask(a,b)};DMA.prototype.port_multimask_write=function(a,b){dbg_log(\"multichannel mask write: \"+h(b),LOG_DMA);for(var c=0;4>c;c++)this.update_mask(a+c,b&1<<c)};\nDMA.prototype.port_multimask_read=function(a){var b=0|this.channel_mask[a+0];b|=this.channel_mask[a+1]<<1;b|=this.channel_mask[a+2]<<2;b|=this.channel_mask[a+3]<<3;dbg_log(\"multichannel mask read: \"+h(b),LOG_DMA);return b};DMA.prototype.port_mode_write=function(a,b){a=(b&3)+a;dbg_log(\"mode write [\"+a+\"] = \"+h(b),LOG_DMA);this.channel_mode[a]=b};DMA.prototype.portC_write=function(a){dbg_log(\"flipflop reset\",LOG_DMA);this.lsb_msb_flipflop=0};\nDMA.prototype.on_unmask=function(a,b){this.unmask_listeners.push({fn:a,this_value:b})};DMA.prototype.update_mask=function(a,b){if(this.channel_mask[a]!==b&&(this.channel_mask[a]=b,!b))for(dbg_log(\"firing on_unmask(\"+a+\")\",LOG_DMA),b=0;b<this.unmask_listeners.length;b++)this.unmask_listeners[b].fn.call(this.unmask_listeners[b].this_value,a)};\nDMA.prototype.do_read=function(a,b,c,d,e){var f=this.count_get_8bit(d),g=this.address_get_8bit(d);dbg_log(\"DMA write channel \"+d,LOG_DMA);dbg_log(\"to \"+h(g)+\" len \"+h(f),LOG_DMA);c<f&&dbg_log(\"DMA should read more than provided: \"+h(c)+\" \"+h(f),LOG_DMA);if(b+f>a.byteLength)dbg_log(\"DMA read outside of buffer\",LOG_DMA),e(!0);else{var k=this.cpu;this.channel_addr[d]+=f;a.get(b,f,function(a){k.write_blob(a,g);e(!1)})}};\nDMA.prototype.do_write=function(a,b,c,d,e){var f=this,g=this.channel_count[d]+1&65535,k=5<=d?2:1,l=g*k,m=this.address_get_8bit(d),p=!1,n=!1,r=this.channel_mode[d]&16;dbg_log(\"DMA write channel \"+d,LOG_DMA);dbg_log(\"to \"+h(m)+\" len \"+h(l),LOG_DMA);c<l?(dbg_log(\"DMA should read more than provided\",LOG_DMA),g=Math.floor(c/k),l=g*k,p=!0):c>l&&(dbg_log(\"DMA attempted to read more than provided\",LOG_DMA),n=!0);b+l>a.byteLength?(dbg_log(\"DMA write outside of buffer\",LOG_DMA),e(!0)):(this.channel_addr[d]+=\ng,this.channel_count[d]-=g,!p&&r&&(dbg_log(\"DMA autoinit\",LOG_DMA),this.channel_addr[d]=this.channel_addr_init[d],this.channel_count[d]=this.channel_count_init[d]),a.set(b,this.cpu.mem8.subarray(m,m+l),function(){n&&r?(dbg_log(\"DMA continuing from start\",LOG_DMA),f.do_write(a,b+l,c-l,d,e)):e(!1)}))};DMA.prototype.address_get_8bit=function(a){var b=this.channel_addr[a];5<=a&&(b<<=1);b=b&65535|this.channel_page[a]<<16;return b|=this.channel_pagehi[a]<<24};\nDMA.prototype.count_get_8bit=function(a){var b=this.channel_count[a]+1;5<=a&&(b*=2);return b};DMA.prototype.flipflop_get=function(a,b,c){c||(this.lsb_msb_flipflop^=1);return this.lsb_msb_flipflop?a&-256|b:a&-65281|b<<8};DMA.prototype.flipflop_read=function(a){return(this.lsb_msb_flipflop^=1)?a&255:a>>8&255};var OSCILLATOR_FREQ=1193.1816666;\nfunction PIT(a,b){this.cpu=a;this.bus=b;this.counter_start_time=new Float64Array(3);this.counter_start_value=new Uint16Array(3);this.counter_next_low=new Uint8Array(4);this.counter_enabled=new Uint8Array(4);this.counter_mode=new Uint8Array(4);this.counter_read_mode=new Uint8Array(4);this.counter_latch=new Uint8Array(4);this.counter_latch_value=new Uint16Array(3);this.counter_reload=new Uint16Array(3);a.io.register_read(97,this,function(){var a=v86.microtick(),b=66.66666666666667*a&1;a=this.did_rollover(2,\na);return b<<4|a<<5});a.io.register_write(97,this,function(a){a&1?this.bus.send(\"pcspeaker-enable\"):this.bus.send(\"pcspeaker-disable\")});a.io.register_read(64,this,function(){return this.counter_read(0)});a.io.register_read(65,this,function(){return this.counter_read(1)});a.io.register_read(66,this,function(){return this.counter_read(2)});a.io.register_write(64,this,function(a){this.counter_write(0,a)});a.io.register_write(65,this,function(a){this.counter_write(1,a)});a.io.register_write(66,this,\nfunction(a){this.counter_write(2,a)});a.io.register_write(67,this,this.port43_write)}PIT.prototype.get_state=function(){var a=[];a[0]=this.counter_next_low;a[1]=this.counter_enabled;a[2]=this.counter_mode;a[3]=this.counter_read_mode;a[4]=this.counter_latch;a[5]=this.counter_latch_value;a[6]=this.counter_reload;a[7]=this.counter_start_time;a[8]=this.counter_start_value;return a};\nPIT.prototype.set_state=function(a){this.counter_next_low=a[0];this.counter_enabled=a[1];this.counter_mode=a[2];this.counter_read_mode=a[3];this.counter_latch=a[4];this.counter_latch_value=a[5];this.counter_reload=a[6];this.counter_start_time=a[7];this.counter_start_value=a[8]};\nPIT.prototype.timer=function(a,b){b||(this.counter_enabled[0]&&this.did_rollover(0,a)?(this.counter_start_value[0]=this.get_counter_value(0,a),this.counter_start_time[0]=a,dbg_log(\"pit interrupt. new value: \"+this.counter_start_value[0],LOG_PIT),this.cpu.device_raise_irq(0),0===this.counter_mode[0]&&(this.counter_enabled[0]=0)):this.cpu.device_lower_irq(0));return 0};\nPIT.prototype.get_counter_value=function(a,b){if(!this.counter_enabled[a])return 0;var c=b-this.counter_start_time[a],d=Math.floor(c*OSCILLATOR_FREQ);b=this.counter_start_value[a]-d;dbg_log(\"diff=\"+c+\" dticks=\"+d+\" value=\"+b+\" reload=\"+this.counter_reload[a],LOG_PIT);c=this.counter_reload[a];b>=c?(dbg_log(\"Warning: Counter\"+a+\" value \"+b+\" is larger than reload \"+c,LOG_PIT),b%=c):0>b&&(b=b%c+c);return b};\nPIT.prototype.did_rollover=function(a,b){b-=this.counter_start_time[a];return 0>b?(dbg_log(\"Warning: PIT timer difference is negative, resetting\"),!0):this.counter_start_value[a]<Math.floor(b*OSCILLATOR_FREQ)};\nPIT.prototype.counter_read=function(a){var b=this.counter_latch[a];if(b)return this.counter_latch[a]--,2===b?this.counter_latch_value[a]&255:this.counter_latch_value[a]>>8;b=this.counter_next_low[a];3===this.counter_mode[a]&&(this.counter_next_low[a]^=1);a=this.get_counter_value(a,v86.microtick());return b?a&255:a>>8};\nPIT.prototype.counter_write=function(a,b){this.counter_reload[a]=this.counter_next_low[a]?this.counter_reload[a]&-256|b:this.counter_reload[a]&255|b<<8;3===this.counter_read_mode[a]&&this.counter_next_low[a]||(this.counter_reload[a]||(this.counter_reload[a]=65535),this.counter_start_value[a]=this.counter_reload[a],this.counter_enabled[a]=!0,this.counter_start_time[a]=v86.microtick(),dbg_log(\"counter\"+a+\" reload=\"+h(this.counter_reload[a])+\" tick=\"+(this.counter_reload[a]||65536)/OSCILLATOR_FREQ+\"ms\",\nLOG_PIT));3===this.counter_read_mode[a]&&(this.counter_next_low[a]^=1);this.bus.send(\"pcspeaker-update\",[this.counter_mode[2],this.counter_reload[2]])};\nPIT.prototype.port43_write=function(a){var b=a>>1&7,c=a&1,d=a>>6&3;a=a>>4&3;1===d&&dbg_log(\"Unimplemented timer1\",LOG_PIT);3===d?dbg_log(\"Unimplemented read back\",LOG_PIT):0===a?(this.counter_latch[d]=2,b=this.get_counter_value(d,v86.microtick()),dbg_log(\"latch: \"+b,LOG_PIT),this.counter_latch_value[d]=b?b-1:0):(6<=b&&(b&=-5),dbg_log(\"Control: mode=\"+b+\" ctr=\"+d+\" read_mode=\"+a+\" bcd=\"+c,LOG_PIT),this.counter_next_low[d]=1===a?0:1,0===d&&this.cpu.device_lower_irq(0),0!==b&&3!==b&&2!==b&&dbg_log(\"Unimplemented counter mode: \"+\nh(b),LOG_PIT),this.counter_mode[d]=b,this.counter_read_mode[d]=a,this.bus.send(\"pcspeaker-update\",[this.counter_mode[2],this.counter_reload[2]]))};var VGA_BANK_SIZE=65536,MAX_XRES=2560,MAX_YRES=1600,MAX_BPP=32,VGA_LFB_ADDRESS=3758096384,VGA_PIXEL_BUFFER_START=4*VGA_BANK_SIZE,VGA_PIXEL_BUFFER_SIZE=8*VGA_BANK_SIZE,VGA_MIN_MEMORY_SIZE=VGA_PIXEL_BUFFER_START+VGA_PIXEL_BUFFER_SIZE,VGA_HOST_MEMORY_SPACE_START=Uint32Array.from([655360,655360,720896,753664]),VGA_HOST_MEMORY_SPACE_SIZE=Uint32Array.from([131072,65536,32768,32768]);\nfunction VGAScreen(a,b,c){var d=this;this.bus=b;this.vga_memory_size=c;this.cursor_address=0;this.cursor_scanline_start=14;this.cursor_scanline_end=15;this.max_cols=80;this.max_rows=25;this.virtual_height=this.virtual_width=this.screen_height=this.screen_width=0;this.layers=[];this.start_address_latched=this.start_address=0;this.crtc=new Uint8Array(25);this.line_compare=this.offset_register=this.preset_row_scan=this.underline_location_register=this.vertical_blank_start=this.vertical_display_enable_end=\nthis.horizontal_blank_start=this.horizontal_display_enable_end=this.crtc_mode=0;this.graphical_mode_is_linear=!0;this.graphical_mode=!1;setTimeout(function(){b.send(\"screen-set-mode\",d.graphical_mode)},0);this.vga256_palette=new Int32Array(256);this.svga_height=this.svga_width=this.latch_dword=0;this.svga_enabled=!1;this.svga_bpp=32;this.svga_offset=this.svga_bank_offset=0;this.pci_space=[222,16,32,10,7,0,0,0,162,0,0,3,0,0,128,0,8,VGA_LFB_ADDRESS>>>8,VGA_LFB_ADDRESS>>>16,VGA_LFB_ADDRESS>>>24,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,0];this.pci_id=144;this.pci_bars=[{size:c}];this.pci_rom_size=65536;this.pci_rom_address=4272947200;this.name=\"vga\";this.stats={is_graphical:!1,res_x:0,res_y:0,bpp:0};this.dac_state=this.dac_color_index_read=this.dac_color_index_write=this.index_crtc=0;this.dac_map=new Uint8Array(16);this.attribute_controller_index=-1;this.palette_source=32;this.color_select=this.horizontal_panning=this.color_plane_enable=this.attribute_mode=\n0;this.sequencer_index=-1;this.plane_write_bm=15;this.clocking_mode=this.sequencer_memory_mode=0;this.graphics_index=-1;this.planar_rotate_reg=this.planar_mode=this.plane_read=0;this.planar_bitmap=255;this.max_scan_line=this.color_dont_care=this.color_compare=this.miscellaneous_graphics_register=this.planar_setreset_enable=this.planar_setreset=0;this.port_3DA_value=this.miscellaneous_output_register=255;c=a.io;c.register_write(960,this,this.port3C0_write);c.register_read(960,this,this.port3C0_read,\nthis.port3C0_read16);c.register_read(961,this,this.port3C1_read);c.register_write(962,this,this.port3C2_write);c.register_write_consecutive(964,this,this.port3C4_write,this.port3C5_write);c.register_read(964,this,this.port3C4_read);c.register_read(965,this,this.port3C5_read);c.register_write_consecutive(974,this,this.port3CE_write,this.port3CF_write);c.register_read(974,this,this.port3CE_read);c.register_read(975,this,this.port3CF_read);c.register_write(967,this,this.port3C7_write);c.register_read(967,\nthis,this.port3C7_read);c.register_write(968,this,this.port3C8_write);c.register_read(968,this,this.port3C8_read);c.register_write(969,this,this.port3C9_write);c.register_read(969,this,this.port3C9_read);c.register_read(972,this,this.port3CC_read);c.register_write_consecutive(980,this,this.port3D4_write,this.port3D5_write);c.register_read(980,this,this.port3D4_read);c.register_read(981,this,this.port3D5_read);c.register_read(970,this,function(){dbg_log(\"3CA read\",LOG_VGA);return 0});c.register_read(986,\nthis,this.port3DA_read);c.register_read(954,this,this.port3DA_read);this.dispi_index=-1;this.dispi_enable_value=0;c.register_write(462,this,void 0,this.port1CE_write);c.register_write(463,this,void 0,this.port1CF_write);c.register_read(463,this,void 0,this.port1CF_read);void 0===this.vga_memory_size||this.vga_memory_size<VGA_MIN_MEMORY_SIZE?(this.vga_memory_size=VGA_MIN_MEMORY_SIZE,dbg_log(\"vga memory size rounded up to \"+this.vga_memory_size,LOG_VGA)):this.vga_memory_size&VGA_BANK_SIZE-1&&(this.vga_memory_size|=\nVGA_BANK_SIZE-1,this.vga_memory_size++);this.svga_memory=new Uint8Array(this.vga_memory_size);this.diff_addr_min=this.vga_memory_size;this.diff_addr_max=0;this.diff_plot_min=this.vga_memory_size;this.diff_plot_max=0;this.dest_buffer=void 0;b.register(\"screen-tell-buffer\",function(a){this.dest_buffer&&a[0]&&a[0].set(this.dest_buffer.subarray(0,a[0].length));this.dest_buffer=a[0]},this);b.register(\"screen-fill-buffer\",function(){this.screen_fill_buffer()},this);this.svga_memory16=new Uint16Array(this.svga_memory.buffer);\nthis.svga_memory32=new Int32Array(this.svga_memory.buffer);this.vga_memory=new Uint8Array(this.svga_memory.buffer,0,4*VGA_BANK_SIZE);this.plane0=new Uint8Array(this.svga_memory.buffer,0*VGA_BANK_SIZE,VGA_BANK_SIZE);this.plane1=new Uint8Array(this.svga_memory.buffer,1*VGA_BANK_SIZE,VGA_BANK_SIZE);this.plane2=new Uint8Array(this.svga_memory.buffer,2*VGA_BANK_SIZE,VGA_BANK_SIZE);this.plane3=new Uint8Array(this.svga_memory.buffer,3*VGA_BANK_SIZE,VGA_BANK_SIZE);this.pixel_buffer=new Uint8Array(this.svga_memory.buffer,\nVGA_PIXEL_BUFFER_START,VGA_PIXEL_BUFFER_SIZE);var e=this;c.mmap_register(655360,131072,function(a){return e.vga_memory_read(a)},function(a,b){e.vga_memory_write(a,b)});c.mmap_register(VGA_LFB_ADDRESS,this.vga_memory_size,function(a){return e.svga_memory_read8(a)},function(a,b){e.svga_memory_write8(a,b)},function(a){return e.svga_memory_read32(a)},function(a,b){e.svga_memory_write32(a,b)});a.devices.pci.register_device(this)}\nVGAScreen.prototype.get_state=function(){var a=[];a[0]=this.vga_memory_size;a[1]=this.cursor_address;a[2]=this.cursor_scanline_start;a[3]=this.cursor_scanline_end;a[4]=this.max_cols;a[5]=this.max_rows;a[6]=this.layers;a[7]=this.dac_state;a[8]=this.start_address;a[9]=this.graphical_mode;a[10]=this.vga256_palette;a[11]=this.latch_dword;a[12]=this.color_compare;a[13]=this.color_dont_care;a[14]=this.miscellaneous_graphics_register;a[15]=this.svga_width;a[16]=this.svga_height;a[17]=this.crtc_mode;a[18]=\nthis.svga_enabled;a[19]=this.svga_bpp;a[20]=this.svga_bank_offset;a[21]=this.svga_offset;a[22]=this.index_crtc;a[23]=this.dac_color_index_write;a[24]=this.dac_color_index_read;a[25]=this.dac_map;a[26]=this.sequencer_index;a[27]=this.plane_write_bm;a[28]=this.sequencer_memory_mode;a[29]=this.graphics_index;a[30]=this.plane_read;a[31]=this.planar_mode;a[32]=this.planar_rotate_reg;a[33]=this.planar_bitmap;a[34]=this.max_scan_line;a[35]=this.miscellaneous_output_register;a[36]=this.port_3DA_value;a[37]=\nthis.dispi_index;a[38]=this.dispi_enable_value;a[39]=this.svga_memory;a[40]=this.graphical_mode_is_linear;a[41]=this.attribute_controller_index;a[42]=this.offset_register;a[43]=this.planar_setreset;a[44]=this.planar_setreset_enable;a[45]=this.start_address_latched;a[46]=this.crtc;a[47]=this.horizontal_display_enable_end;a[48]=this.horizontal_blank_start;a[49]=this.vertical_display_enable_end;a[50]=this.vertical_blank_start;a[51]=this.underline_location_register;a[52]=this.preset_row_scan;a[53]=this.offset_register;\na[54]=this.palette_source;a[55]=this.attribute_mode;a[56]=this.color_plane_enable;a[57]=this.horizontal_panning;a[58]=this.color_select;a[59]=this.clocking_mode;a[60]=this.line_compare;return a};\nVGAScreen.prototype.set_state=function(a){this.vga_memory_size=a[0];this.cursor_address=a[1];this.cursor_scanline_start=a[2];this.cursor_scanline_end=a[3];this.max_cols=a[4];this.max_rows=a[5];this.layers=a[6];this.dac_state=a[7];this.start_address=a[8];this.graphical_mode=a[9];this.vga256_palette=a[10];this.latch_dword=a[11];this.color_compare=a[12];this.color_dont_care=a[13];this.miscellaneous_graphics_register=a[14];this.svga_width=a[15];this.svga_height=a[16];this.crtc_mode=a[17];this.svga_enabled=\na[18];this.svga_bpp=a[19];this.svga_bank_offset=a[20];this.svga_offset=a[21];this.index_crtc=a[22];this.dac_color_index_write=a[23];this.dac_color_index_read=a[24];this.dac_map=a[25];this.sequencer_index=a[26];this.plane_write_bm=a[27];this.sequencer_memory_mode=a[28];this.graphics_index=a[29];this.plane_read=a[30];this.planar_mode=a[31];this.planar_rotate_reg=a[32];this.planar_bitmap=a[33];this.max_scan_line=a[34];this.miscellaneous_output_register=a[35];this.port_3DA_value=a[36];this.dispi_index=\na[37];this.dispi_enable_value=a[38];this.svga_memory.set(a[39]);this.graphical_mode_is_linear=a[40];this.attribute_controller_index=a[41];this.offset_register=a[42];this.planar_setreset=a[43];this.planar_setreset_enable=a[44];this.start_address_latched=a[45];this.crtc.set(a[46]);this.horizontal_display_enable_end=a[47];this.horizontal_blank_start=a[48];this.vertical_display_enable_end=a[49];this.vertical_blank_start=a[50];this.underline_location_register=a[51];this.preset_row_scan=a[52];this.offset_register=\na[53];this.palette_source=a[54];this.attribute_mode=a[55];this.color_plane_enable=a[56];this.horizontal_panning=a[57];this.color_select=a[58];this.clocking_mode=a[59];this.line_compare=a[60];this.bus.send(\"screen-set-mode\",this.graphical_mode);this.graphical_mode?(this.screen_height=this.screen_width=0,this.svga_enabled?(this.set_size_graphical(this.svga_width,this.svga_height,this.svga_bpp,this.svga_width,this.svga_height),this.update_layers()):(this.update_vga_size(),this.complete_replot())):(this.set_size_text(this.max_cols,\nthis.max_rows),this.update_cursor_scanline(),this.update_cursor());this.complete_redraw()};\nVGAScreen.prototype.vga_memory_read=function(a){if(this.svga_enabled&&this.graphical_mode_is_linear)return a=a-655360|this.svga_bank_offset,this.svga_memory[a];var b=this.miscellaneous_graphics_register>>2&3;a-=VGA_HOST_MEMORY_SPACE_START[b];if(0>a||a>=VGA_HOST_MEMORY_SPACE_SIZE[b])return dbg_log(\"vga read outside memory space: addr:\"+h(a),LOG_VGA),0;this.latch_dword=this.plane0[a];this.latch_dword|=this.plane1[a]<<8;this.latch_dword|=this.plane2[a]<<16;this.latch_dword|=this.plane3[a]<<24;if(this.planar_mode&\n8)return b=255,this.color_dont_care&1&&(b&=this.plane0[a]^~(this.color_compare&1?255:0)),this.color_dont_care&2&&(b&=this.plane1[a]^~(this.color_compare&2?255:0)),this.color_dont_care&4&&(b&=this.plane2[a]^~(this.color_compare&4?255:0)),this.color_dont_care&8&&(b&=this.plane3[a]^~(this.color_compare&8?255:0)),b;b=this.plane_read;this.graphical_mode?this.sequencer_memory_mode&8?(b=a&3,a&=-4):this.planar_mode&16&&(b=a&1,a&=-2):b=0;return this.vga_memory[b<<16|a]};\nVGAScreen.prototype.vga_memory_write=function(a,b){if(this.svga_enabled&&this.graphical_mode&&this.graphical_mode_is_linear)this.vga_memory_write_graphical_linear(a-655360,b);else{var c=this.miscellaneous_graphics_register>>2&3;a-=VGA_HOST_MEMORY_SPACE_START[c];0>a||a>=VGA_HOST_MEMORY_SPACE_SIZE[c]?dbg_log(\"vga write outside memory space: addr:\"+h(a)+\", value:\"+h(b),LOG_VGA):this.graphical_mode?this.vga_memory_write_graphical(a,b):this.plane_write_bm&3&&this.vga_memory_write_text_mode(a,b)}};\nVGAScreen.prototype.vga_memory_write_graphical_linear=function(a,b){a|=this.svga_bank_offset;this.diff_addr_min=a<this.diff_addr_min?a:this.diff_addr_min;this.diff_addr_max=a>this.diff_addr_max?a:this.diff_addr_max;this.svga_memory[a]=b};\nVGAScreen.prototype.vga_memory_write_graphical=function(a,b){var c=this.planar_mode&3,d=this.apply_feed(this.planar_bitmap),e=this.apply_expand(this.planar_setreset),f=this.apply_expand(this.planar_setreset_enable);switch(c){case 0:b=this.apply_rotate(b);var g=this.apply_feed(b);g=this.apply_setreset(g,f);g=this.apply_logical(g,this.latch_dword);g=this.apply_bitmask(g,d);break;case 1:g=this.latch_dword;break;case 2:g=this.apply_expand(b);g=this.apply_logical(g,this.latch_dword);g=this.apply_bitmask(g,\nd);break;case 3:b=this.apply_rotate(b),d&=this.apply_feed(b),g=this.apply_bitmask(e,d)}b=15;switch(this.sequencer_memory_mode&12){case 0:b=5<<(a&1);a&=-2;break;case 8:case 12:b=1<<(a&3),a&=-4}b&=this.plane_write_bm;b&1&&(this.plane0[a]=g>>0&255);b&2&&(this.plane1[a]=g>>8&255);b&4&&(this.plane2[a]=g>>16&255);b&8&&(this.plane3[a]=g>>24&255);a=this.vga_addr_to_pixel(a);this.partial_replot(a,a+7)};VGAScreen.prototype.apply_feed=function(a){return a|a<<8|a<<16|a<<24};\nVGAScreen.prototype.apply_expand=function(a){return(a&1?255:0)|(a&2?255:0)<<8|(a&4?255:0)<<16|(a&8?255:0)<<24};VGAScreen.prototype.apply_rotate=function(a){return(a|a<<8)>>>(this.planar_rotate_reg&7)&255};VGAScreen.prototype.apply_setreset=function(a,b){var c=this.apply_expand(this.planar_setreset);return(a|b&c)&(~b|c)};VGAScreen.prototype.apply_logical=function(a,b){switch(this.planar_rotate_reg&24){case 8:return a&b;case 16:return a|b;case 24:return a^b}return a};\nVGAScreen.prototype.apply_bitmask=function(a,b){return b&a|~b&this.latch_dword};VGAScreen.prototype.text_mode_redraw=function(){for(var a=this.start_address<<1,b,c,d=0;d<this.max_rows;d++)for(var e=0;e<this.max_cols;e++)b=this.vga_memory[a],c=this.vga_memory[a|1],this.bus.send(\"screen-put-char\",[d,e,b,this.vga256_palette[c>>4&15],this.vga256_palette[c&15]]),a+=2};\nVGAScreen.prototype.vga_memory_write_text_mode=function(a,b){var c=(a>>1)-this.start_address,d=c/this.max_cols|0;c%=this.max_cols;if(a&1){var e=b;var f=this.vga_memory[a&-2]}else f=b,e=this.vga_memory[a|1];this.bus.send(\"screen-put-char\",[d,c,f,this.vga256_palette[e>>4&15],this.vga256_palette[e&15]]);this.vga_memory[a]=b};\nVGAScreen.prototype.update_cursor=function(){var a=(this.cursor_address-this.start_address)/this.max_cols|0,b=(this.cursor_address-this.start_address)%this.max_cols;a=Math.min(this.max_rows-1,a);this.bus.send(\"screen-update-cursor\",[a,b])};VGAScreen.prototype.svga_memory_read8=function(a){return this.svga_memory[a&268435455]};\nVGAScreen.prototype.svga_memory_read32=function(a){a&=268435455;return a&3?this.svga_memory[a]|this.svga_memory[a+1]<<8|this.svga_memory[a+2]<<16|this.svga_memory[a+3]<<24:this.svga_memory32[a>>2]};VGAScreen.prototype.svga_memory_write8=function(a,b){a&=268435455;this.svga_memory[a]=b;this.diff_addr_min=a<this.diff_addr_min?a:this.diff_addr_min;this.diff_addr_max=a>this.diff_addr_max?a:this.diff_addr_max};\nVGAScreen.prototype.svga_memory_write32=function(a,b){a&=268435455;this.diff_addr_min=a<this.diff_addr_min?a:this.diff_addr_min;this.diff_addr_max=a+3>this.diff_addr_max?a+3:this.diff_addr_max;this.svga_memory[a]=b;this.svga_memory[a+1]=b>>8;this.svga_memory[a+2]=b>>16;this.svga_memory[a+3]=b>>24};\nVGAScreen.prototype.complete_redraw=function(){dbg_log(\"complete redraw\",LOG_VGA);this.graphical_mode?(this.diff_addr_min=0,this.diff_addr_max=this.svga_enabled?this.vga_memory_size:VGA_PIXEL_BUFFER_SIZE):this.text_mode_redraw()};VGAScreen.prototype.complete_replot=function(){dbg_log(\"complete replot\",LOG_VGA);this.graphical_mode&&!this.svga_enabled&&(this.diff_plot_min=0,this.diff_plot_max=VGA_PIXEL_BUFFER_SIZE,this.complete_redraw())};\nVGAScreen.prototype.partial_redraw=function(a,b){a<this.diff_addr_min&&(this.diff_addr_min=a);b>this.diff_addr_max&&(this.diff_addr_max=b)};VGAScreen.prototype.partial_replot=function(a,b){a<this.diff_plot_min&&(this.diff_plot_min=a);b>this.diff_plot_max&&(this.diff_plot_max=b);this.partial_redraw(a,b)};VGAScreen.prototype.reset_diffs=function(){this.diff_addr_min=this.vga_memory_size;this.diff_addr_max=0;this.diff_plot_min=this.vga_memory_size;this.diff_plot_max=0};VGAScreen.prototype.destroy=function(){};\nVGAScreen.prototype.vga_bytes_per_line=function(){var a=this.offset_register<<2;this.underline_location_register&64?a<<=1:this.crtc_mode&64&&(a>>>=1);return a};VGAScreen.prototype.vga_addr_shift_count=function(){var a=128+(~this.underline_location_register&this.crtc_mode&64);a-=this.underline_location_register&64;a-=this.attribute_mode&64;return a>>>6};\nVGAScreen.prototype.vga_addr_to_pixel=function(a){var b=this.vga_addr_shift_count();if(~this.crtc_mode&3){var c=a-this.start_address;c&=this.crtc_mode<<13|-24577;c<<=b;var d=c/this.virtual_width|0;c%=this.virtual_width;switch(this.crtc_mode&3){case 2:d=d<<1|a>>13&1;break;case 1:d=d<<1|a>>14&1;break;case 0:d=d<<2|a>>13&3}return d*this.virtual_width+c+(this.start_address<<b)}return a<<b};\nVGAScreen.prototype.scan_line_to_screen_row=function(a){this.max_scan_line&128&&(a>>>=1);a=Math.ceil(a/(1+(this.max_scan_line&31)));this.crtc_mode&1||(a<<=1);this.crtc_mode&2||(a<<=1);return a};VGAScreen.prototype.set_size_text=function(a,b){this.max_cols=a;this.max_rows=b;this.bus.send(\"screen-set-size-text\",[a,b])};\nVGAScreen.prototype.set_size_graphical=function(a,b,c,d,e){this.stats.is_graphical&&this.stats.bpp===c&&this.screen_width===a&&this.screen_height===b&&this.virtual_width===d&&this.virtual_height===e||(this.screen_width=a,this.screen_height=b,this.virtual_width=d,this.virtual_height=e,this.stats.bpp=c,this.stats.is_graphical=!0,this.stats.res_x=a,this.stats.res_y=b,this.bus.send(\"screen-set-size-graphical\",[a,b,d,e,c]))};\nVGAScreen.prototype.update_vga_size=function(){if(!this.svga_enabled){var a=Math.min(1+this.horizontal_display_enable_end,this.horizontal_blank_start),b=Math.min(1+this.vertical_display_enable_end,this.vertical_blank_start);if(a&&b)if(this.graphical_mode){a<<=3;var c=this.offset_register<<4;this.attribute_mode&64&&(a>>>=1,c>>>=1);b=this.scan_line_to_screen_row(b);var d=Math.ceil(VGA_HOST_MEMORY_SPACE_SIZE[0]/this.vga_bytes_per_line());this.set_size_graphical(a,b,8,c,d);this.update_vertical_retrace();\nthis.update_layers()}else this.max_scan_line&128&&(b>>>=1),c=b/(1+(this.max_scan_line&31))|0,a&&c&&this.set_size_text(a,c)}};\nVGAScreen.prototype.update_layers=function(){this.graphical_mode||this.text_mode_redraw();if(this.svga_enabled)this.layers=[];else if(this.virtual_width&&this.screen_width)if(!this.palette_source||this.clocking_mode&32)this.layers=[],this.bus.send(\"screen-clear\");else{var a=this.start_address_latched,b=this.horizontal_panning;this.attribute_mode&64&&(b>>>=1);var c=this.preset_row_scan>>5&3,d=this.vga_addr_to_pixel(a+c);a=d/this.virtual_width|0;var e=d%this.virtual_width+b;d=this.scan_line_to_screen_row(1+\nthis.line_compare);d=Math.min(d,this.screen_height);var f=this.screen_height-d;this.layers=[];e=-e;for(var g=0;e<this.screen_width;e+=this.virtual_width,g++)this.layers.push({screen_x:e,screen_y:0,buffer_x:0,buffer_y:a+g,buffer_width:this.virtual_width,buffer_height:d});a=0;this.attribute_mode&32||(a=this.vga_addr_to_pixel(c)+b);e=-a;for(g=0;e<this.screen_width;e+=this.virtual_width,g++)this.layers.push({screen_x:e,screen_y:d,buffer_x:0,buffer_y:g,buffer_width:this.virtual_width,buffer_height:f})}};\nVGAScreen.prototype.update_vertical_retrace=function(){this.port_3DA_value|=8;this.start_address_latched!==this.start_address&&(this.start_address_latched=this.start_address,this.update_layers())};VGAScreen.prototype.update_cursor_scanline=function(){this.bus.send(\"screen-update-cursor-scanline\",[this.cursor_scanline_start,this.cursor_scanline_end])};\nVGAScreen.prototype.port3C0_write=function(a){if(-1===this.attribute_controller_index)dbg_log(\"attribute controller index register: \"+h(a),LOG_VGA),this.attribute_controller_index=a&31,dbg_log(\"attribute actual index: \"+h(this.attribute_controller_index),LOG_VGA),this.palette_source!==(a&32)&&(this.palette_source=a&32,this.update_layers());else{if(16>this.attribute_controller_index)dbg_log(\"internal palette: \"+h(this.attribute_controller_index)+\" -> \"+h(a),LOG_VGA),this.dac_map[this.attribute_controller_index]=\na,this.attribute_mode&64||this.complete_redraw();else switch(this.attribute_controller_index){case 16:dbg_log(\"3C0 / attribute mode control: \"+h(a),LOG_VGA);if(this.attribute_mode!==a){var b=this.attribute_mode;this.attribute_mode=a;var c=0<(a&1);this.svga_enabled||this.graphical_mode===c||(this.graphical_mode=c,this.bus.send(\"screen-set-mode\",this.graphical_mode));(b^a)&64&&this.complete_replot();this.update_vga_size();this.complete_redraw()}break;case 18:dbg_log(\"3C0 / color plane enable: \"+h(a),\nLOG_VGA);this.color_plane_enable!==a&&(this.color_plane_enable=a,this.complete_redraw());break;case 19:dbg_log(\"3C0 / horizontal panning: \"+h(a),LOG_VGA);this.horizontal_panning!==a&&(this.horizontal_panning=a&15,this.update_layers());break;case 20:dbg_log(\"3C0 / color select: \"+h(a),LOG_VGA);this.color_select!==a&&(this.color_select=a,this.complete_redraw());break;default:dbg_log(\"3C0 / attribute controller write \"+h(this.attribute_controller_index)+\": \"+h(a),LOG_VGA)}this.attribute_controller_index=\n-1}};VGAScreen.prototype.port3C0_read=function(){dbg_log(\"3C0 read\",LOG_VGA);return this.attribute_controller_index|this.palette_source};VGAScreen.prototype.port3C0_read16=function(){dbg_log(\"3C0 read16\",LOG_VGA);return this.port3C0_read()&255|this.port3C1_read()<<8&65280};\nVGAScreen.prototype.port3C1_read=function(){if(16>this.attribute_controller_index)return dbg_log(\"3C1 / internal palette read: \"+h(this.attribute_controller_index)+\" -> \"+h(this.dac_map[this.attribute_controller_index]),LOG_VGA),this.dac_map[this.attribute_controller_index];switch(this.attribute_controller_index){case 16:return dbg_log(\"3C1 / attribute mode read: \"+h(this.attribute_mode),LOG_VGA),this.attribute_mode;case 18:return dbg_log(\"3C1 / color plane enable read: \"+h(this.color_plane_enable),\nLOG_VGA),this.color_plane_enable;case 19:return dbg_log(\"3C1 / horizontal panning read: \"+h(this.horizontal_panning),LOG_VGA),this.horizontal_panning;case 20:return dbg_log(\"3C1 / color select read: \"+h(this.color_select),LOG_VGA),this.color_select;default:dbg_log(\"3C1 / attribute controller read \"+h(this.attribute_controller_index),LOG_VGA)}return-1};VGAScreen.prototype.port3C2_write=function(a){dbg_log(\"3C2 / miscellaneous output register = \"+h(a),LOG_VGA);this.miscellaneous_output_register=a};\nVGAScreen.prototype.port3C4_write=function(a){this.sequencer_index=a};VGAScreen.prototype.port3C4_read=function(){return this.sequencer_index};\nVGAScreen.prototype.port3C5_write=function(a){switch(this.sequencer_index){case 1:dbg_log(\"clocking mode: \"+h(a),LOG_VGA);var b=this.clocking_mode;this.clocking_mode=a;(b^a)&32&&this.update_layers();break;case 2:dbg_log(\"plane write mask: \"+h(a),LOG_VGA);this.plane_write_bm=a;break;case 4:dbg_log(\"sequencer memory mode: \"+h(a),LOG_VGA);this.sequencer_memory_mode=a;break;default:dbg_log(\"3C5 / sequencer write \"+h(this.sequencer_index)+\": \"+h(a),LOG_VGA)}};\nVGAScreen.prototype.port3C5_read=function(){dbg_log(\"3C5 / sequencer read \"+h(this.sequencer_index),LOG_VGA);switch(this.sequencer_index){case 1:return this.clocking_mode;case 2:return this.plane_write_bm;case 4:return this.sequencer_memory_mode;case 6:return 18}return 0};VGAScreen.prototype.port3C7_write=function(a){dbg_log(\"3C7 write: \"+h(a),LOG_VGA);this.dac_color_index_read=3*a;this.dac_state&=0};VGAScreen.prototype.port3C7_read=function(){return this.dac_state};\nVGAScreen.prototype.port3C8_write=function(a){this.dac_color_index_write=3*a;this.dac_state|=3};VGAScreen.prototype.port3C8_read=function(){return this.dac_color_index_write/3|0};\nVGAScreen.prototype.port3C9_write=function(a){var b=this.dac_color_index_write/3|0,c=this.dac_color_index_write%3,d=this.vga256_palette[b];a=255*(a&63)/63|0;0===c?d=d&-16711681|a<<16:1===c?d=d&-65281|a<<8:(d=d&-256|a,dbg_log(\"dac set color, index=\"+h(b)+\" value=\"+h(d),LOG_VGA));this.vga256_palette[b]!==d&&(this.vga256_palette[b]=d,this.complete_redraw());this.dac_color_index_write++};\nVGAScreen.prototype.port3C9_read=function(){dbg_log(\"3C9 read\",LOG_VGA);var a=this.dac_color_index_read%3,b=this.vga256_palette[this.dac_color_index_read/3|0];this.dac_color_index_read++;return(b>>8*(2-a)&255)/255*63|0};VGAScreen.prototype.port3CC_read=function(){dbg_log(\"3CC read\",LOG_VGA);return this.miscellaneous_output_register};VGAScreen.prototype.port3CE_write=function(a){this.graphics_index=a};VGAScreen.prototype.port3CE_read=function(){return this.graphics_index};\nVGAScreen.prototype.port3CF_write=function(a){switch(this.graphics_index){case 0:this.planar_setreset=a;dbg_log(\"plane set/reset: \"+h(a),LOG_VGA);break;case 1:this.planar_setreset_enable=a;dbg_log(\"plane set/reset enable: \"+h(a),LOG_VGA);break;case 2:this.color_compare=a;dbg_log(\"color compare: \"+h(a),LOG_VGA);break;case 3:this.planar_rotate_reg=a;dbg_log(\"plane rotate: \"+h(a),LOG_VGA);break;case 4:this.plane_read=a;dbg_log(\"plane read: \"+h(a),LOG_VGA);break;case 5:var b=this.planar_mode;this.planar_mode=\na;dbg_log(\"planar mode: \"+h(a),LOG_VGA);(b^a)&96&&this.complete_replot();break;case 6:dbg_log(\"miscellaneous graphics register: \"+h(a),LOG_VGA);this.miscellaneous_graphics_register!==a&&(this.miscellaneous_graphics_register=a,this.update_vga_size());break;case 7:this.color_dont_care=a;dbg_log(\"color don't care: \"+h(a),LOG_VGA);break;case 8:this.planar_bitmap=a;dbg_log(\"planar bitmap: \"+h(a),LOG_VGA);break;default:dbg_log(\"3CF / graphics write \"+h(this.graphics_index)+\": \"+h(a),LOG_VGA)}};\nVGAScreen.prototype.port3CF_read=function(){dbg_log(\"3CF / graphics read \"+h(this.graphics_index),LOG_VGA);switch(this.graphics_index){case 0:return this.planar_setreset;case 1:return this.planar_setreset_enable;case 2:return this.color_compare;case 3:return this.planar_rotate_reg;case 4:return this.plane_read;case 5:return this.planar_mode;case 6:return this.miscellaneous_graphics_register;case 7:return this.color_dont_care;case 8:return this.planar_bitmap}return 0};\nVGAScreen.prototype.port3D4_write=function(a){dbg_log(\"3D4 / crtc index: \"+a,LOG_VGA);this.index_crtc=a};VGAScreen.prototype.port3D4_read=function(){dbg_log(\"3D4 read / crtc index: \"+this.index_crtc,LOG_VGA);return this.index_crtc};\nVGAScreen.prototype.port3D5_write=function(a){switch(this.index_crtc){case 1:dbg_log(\"3D5 / hdisp enable end write: \"+h(a),LOG_VGA);this.horizontal_display_enable_end!==a&&(this.horizontal_display_enable_end=a,this.update_vga_size());break;case 2:this.horizontal_blank_start!==a&&(this.horizontal_blank_start=a,this.update_vga_size());break;case 7:dbg_log(\"3D5 / overflow register write: \"+h(a),LOG_VGA);var b=this.vertical_display_enable_end;this.vertical_display_enable_end&=255;this.vertical_display_enable_end=\nthis.vertical_display_enable_end|a<<3&512|a<<7&256;b!=this.vertical_display_enable_end&&this.update_vga_size();this.line_compare=this.line_compare&767|a<<4&256;b=this.vertical_blank_start;this.vertical_blank_start=this.vertical_blank_start&767|a<<5&256;b!==this.vertical_blank_start&&this.update_vga_size();this.update_layers();break;case 8:dbg_log(\"3D5 / preset row scan write: \"+h(a),LOG_VGA);this.preset_row_scan=a;this.update_layers();break;case 9:dbg_log(\"3D5 / max scan line write: \"+h(a),LOG_VGA);\nthis.max_scan_line=a;this.line_compare=this.line_compare&511|a<<3&512;b=this.vertical_blank_start;this.vertical_blank_start=this.vertical_blank_start&511|a<<4&512;b!==this.vertical_blank_start&&this.update_vga_size();this.update_layers();break;case 10:dbg_log(\"3D5 / cursor scanline start write: \"+h(a),LOG_VGA);this.cursor_scanline_start=a;this.update_cursor_scanline();break;case 11:dbg_log(\"3D5 / cursor scanline end write: \"+h(a),LOG_VGA);this.cursor_scanline_end=a;this.update_cursor_scanline();break;\ncase 12:(this.start_address>>8&255)!==a&&(this.start_address=this.start_address&255|a<<8,this.update_layers(),~this.crtc_mode&3&&this.complete_replot());dbg_log(\"3D5 / start addr hi write: \"+h(a)+\" -> \"+h(this.start_address,4),LOG_VGA);break;case 13:(this.start_address&255)!==a&&(this.start_address=this.start_address&65280|a,this.update_layers(),~this.crtc_mode&3&&this.complete_replot());dbg_log(\"3D5 / start addr lo write: \"+h(a)+\" -> \"+h(this.start_address,4),LOG_VGA);break;case 14:dbg_log(\"3D5 / cursor address hi write: \"+\nh(a),LOG_VGA);this.cursor_address=this.cursor_address&255|a<<8;this.update_cursor();break;case 15:dbg_log(\"3D5 / cursor address lo write: \"+h(a),LOG_VGA);this.cursor_address=this.cursor_address&65280|a;this.update_cursor();break;case 18:dbg_log(\"3D5 / vdisp enable end write: \"+h(a),LOG_VGA);(this.vertical_display_enable_end&255)!==a&&(this.vertical_display_enable_end=this.vertical_display_enable_end&768|a,this.update_vga_size());break;case 19:dbg_log(\"3D5 / offset register write: \"+h(a),LOG_VGA);\nthis.offset_register!==a&&(this.offset_register=a,this.update_vga_size(),~this.crtc_mode&3&&this.complete_replot());break;case 20:dbg_log(\"3D5 / underline location write: \"+h(a),LOG_VGA);this.underline_location_register!==a&&(b=this.underline_location_register,this.underline_location_register=a,this.update_vga_size(),(b^a)&64&&this.complete_replot());break;case 21:dbg_log(\"3D5 / vertical blank start write: \"+h(a),LOG_VGA);(this.vertical_blank_start&255)!==a&&(this.vertical_blank_start=this.vertical_blank_start&\n768|a,this.update_vga_size());break;case 23:dbg_log(\"3D5 / crtc mode write: \"+h(a),LOG_VGA);this.crtc_mode!==a&&(b=this.crtc_mode,this.crtc_mode=a,this.update_vga_size(),(b^a)&67&&this.complete_replot());break;case 24:dbg_log(\"3D5 / line compare write: \"+h(a),LOG_VGA);this.line_compare=this.line_compare&768|a;this.update_layers();break;default:this.index_crtc<this.crtc.length&&(this.crtc[this.index_crtc]=a),dbg_log(\"3D5 / CRTC write \"+h(this.index_crtc)+\": \"+h(a),LOG_VGA)}};\nVGAScreen.prototype.port3D5_read=function(){dbg_log(\"3D5 read \"+h(this.index_crtc),LOG_VGA);switch(this.index_crtc){case 1:return this.horizontal_display_enable_end;case 2:return this.horizontal_blank_start;case 7:return this.vertical_display_enable_end>>7&2|this.vertical_blank_start>>5&8|this.line_compare>>4&16|this.vertical_display_enable_end>>3&64;case 8:return this.preset_row_scan;case 9:return this.max_scan_line;case 10:return this.cursor_scanline_start;case 11:return this.cursor_scanline_end;\ncase 12:return this.start_address&255;case 13:return this.start_address>>8;case 14:return this.cursor_address>>8;case 15:return this.cursor_address&255;case 18:return this.vertical_display_enable_end&255;case 19:return this.offset_register;case 20:return this.underline_location_register;case 21:return this.vertical_blank_start&255;case 23:return this.crtc_mode;case 24:return this.line_compare&255}return this.index_crtc<this.crtc.length?this.crtc[this.index_crtc]:0};\nVGAScreen.prototype.port3DA_read=function(){dbg_log(\"3DA read - status 1 and clear attr index\",LOG_VGA);var a=this.port_3DA_value;this.graphical_mode?(this.port_3DA_value^=1,this.port_3DA_value&=1):(this.port_3DA_value&1&&(this.port_3DA_value^=8),this.port_3DA_value^=1);this.attribute_controller_index=-1;return a};VGAScreen.prototype.svga_bytes_per_line=function(){return this.svga_width*(15===this.svga_bpp?16:this.svga_bpp)/8};VGAScreen.prototype.port1CE_write=function(a){this.dispi_index=a};\nVGAScreen.prototype.port1CF_write=function(a){dbg_log(\"1CF / dispi write \"+h(this.dispi_index)+\": \"+h(a),LOG_VGA);switch(this.dispi_index){case 1:this.svga_width=a;this.svga_width>MAX_XRES&&(dbg_log(\"svga_width reduced from \"+this.svga_width+\" to \"+MAX_XRES,LOG_VGA),this.svga_width=MAX_XRES);break;case 2:this.svga_height=a;this.svga_height>MAX_YRES&&(dbg_log(\"svga_height reduced from \"+this.svga_height+\" to \"+MAX_YRES,LOG_VGA),this.svga_height=MAX_YRES);break;case 3:this.svga_bpp=a;break;case 4:this.svga_enabled=\n1===(a&1);this.dispi_enable_value=a;break;case 5:this.svga_bank_offset=a<<16;break;case 9:this.svga_offset=a*this.svga_bytes_per_line(),dbg_log(\"SVGA offset: \"+h(this.svga_offset)+\" y=\"+h(a),LOG_VGA),this.complete_redraw()}!this.svga_enabled||this.svga_width&&this.svga_height||(dbg_log(\"SVGA: disabled because of invalid width/height: \"+this.svga_width+\"x\"+this.svga_height,LOG_VGA),this.svga_enabled=!1);dbg_assert(4!==this.svga_bpp,\"unimplemented svga bpp: 4\");dbg_assert(15!==this.svga_bpp,\"unimplemented svga bpp: 15\");\ndbg_assert(4===this.svga_bpp||8===this.svga_bpp||15===this.svga_bpp||16===this.svga_bpp||24===this.svga_bpp||32===this.svga_bpp,\"unexpected svga bpp: \"+this.svga_bpp);dbg_log(\"SVGA: enabled=\"+this.svga_enabled+\", \"+this.svga_width+\"x\"+this.svga_height+\"x\"+this.svga_bpp,LOG_VGA);this.svga_enabled&&4===this.dispi_index&&(this.set_size_graphical(this.svga_width,this.svga_height,this.svga_bpp,this.svga_width,this.svga_height),this.bus.send(\"screen-set-mode\",!0),this.graphical_mode_is_linear=this.graphical_mode=\n!0);this.svga_enabled||(this.svga_bank_offset=0);this.update_layers()};VGAScreen.prototype.port1CF_read=function(){dbg_log(\"1CF / dispi read \"+h(this.dispi_index),LOG_VGA);return this.svga_register_read(this.dispi_index)};\nVGAScreen.prototype.svga_register_read=function(a){switch(a){case 0:return 45248;case 1:return this.dispi_enable_value&2?MAX_XRES:this.svga_width;case 2:return this.dispi_enable_value&2?MAX_YRES:this.svga_height;case 3:return this.dispi_enable_value&2?MAX_BPP:this.svga_bpp;case 4:return this.dispi_enable_value;case 5:return this.svga_bank_offset>>>16;case 6:return this.screen_width?this.screen_width:1;case 8:return 0;case 10:return this.vga_memory_size/VGA_BANK_SIZE|0}return 255};\nVGAScreen.prototype.vga_replot=function(){for(var a=this.diff_plot_min&-16,b=Math.min(this.diff_plot_max|15,VGA_PIXEL_BUFFER_SIZE-1),c=this.vga_addr_shift_count(),d=~this.crtc_mode&3,e=this.planar_mode&96,f=this.attribute_mode&64;a<=b;){var g=a>>>c;if(d){var k=a/this.virtual_width|0,l=a-this.virtual_width*k;switch(d){case 1:g=(k&1)<<13;k>>>=1;break;case 2:g=(k&1)<<14;k>>>=1;break;case 3:g=(k&3)<<13,k>>>=2}g|=(k*this.virtual_width+l>>>c)+this.start_address}k=this.plane0[g];l=this.plane1[g];var m=this.plane2[g],\np=this.plane3[g];g=new Uint8Array(8);switch(e){case 0:k<<=0;l<<=1;m<<=2;p<<=3;for(var n=7;0<=n;n--)g[7-n]=k>>n&1|l>>n&2|m>>n&4|p>>n&8;break;case 32:g[0]=k>>6&3|m>>4&12;g[1]=k>>4&3|m>>2&12;g[2]=k>>2&3|m>>0&12;g[3]=k>>0&3|m<<2&12;g[4]=l>>6&3|p>>4&12;g[5]=l>>4&3|p>>2&12;g[6]=l>>2&3|p>>0&12;g[7]=l>>0&3|p<<2&12;break;case 64:case 96:g[0]=k>>4&15,g[1]=k>>0&15,g[2]=l>>4&15,g[3]=l>>0&15,g[4]=m>>4&15,g[5]=m>>0&15,g[6]=p>>4&15,g[7]=p>>0&15}if(f)for(k=n=0;4>n;n++,a++,k+=2)this.pixel_buffer[a]=g[k]<<4|g[k+1];\nelse for(n=0;8>n;n++,a++)this.pixel_buffer[a]=g[n]}};\nVGAScreen.prototype.vga_redraw=function(){var a=this.diff_addr_min,b=Math.min(this.diff_addr_max,VGA_PIXEL_BUFFER_SIZE-1),c=this.dest_buffer;if(c){var d=255,e=0;this.attribute_mode&128&&(d&=207,e|=this.color_select<<4&48);if(this.attribute_mode&64)for(;a<=b;a++){var f=this.pixel_buffer[a]&d|e;f=this.vga256_palette[f];c[a]=f&65280|f<<16|f>>16|4278190080}else for(d&=63,e|=this.color_select<<4&192;a<=b;a++)f=this.dac_map[this.pixel_buffer[a]&this.color_plane_enable]&d|e,f=this.vga256_palette[f],c[a]=\nf&65280|f<<16|f>>16|4278190080}};\nVGAScreen.prototype.screen_fill_buffer=function(){if(this.graphical_mode)if(this.dest_buffer)if(this.diff_addr_max<this.diff_addr_min&&this.diff_plot_max<this.diff_plot_min)this.bus.send(\"screen-fill-buffer-end\",this.layers);else{if(this.svga_enabled){var a=this.svga_bpp,b=this.dest_buffer,c=this.diff_addr_min,d=this.diff_addr_max;switch(a){case 32:var e=c>>2,f=(d>>2)+1;for(a=e;a<f;a++)d=this.svga_memory32[a],b[a]=d<<16|d>>16&255|d&65280|4278190080;break;case 24:e=c/3|0;f=(d/3|0)+1;var g=3*e;for(a=\ne;g<d;a++){var k=this.svga_memory[g++];c=this.svga_memory[g++];var l=this.svga_memory[g++];b[a]=k<<16|c<<8|l|4278190080}break;case 16:e=c>>1;f=(d>>1)+1;for(a=e;a<f;a++)d=this.svga_memory16[a],l=255*(d>>11)/31|0,c=255*(d>>5&63)/63|0,k=255*(d&31)/31|0,b[a]=k<<16|c<<8|l|4278190080;break;case 8:e=c;f=d+1;for(a=c;a<=d;a++)c=this.vga256_palette[this.svga_memory[a]],b[a]=c&65280|c<<16|c>>16|4278190080;break;default:dbg_assert(!1,\"Unsupported BPP: \"+a)}b=e/this.svga_width|0;this.bus.send(\"screen-fill-buffer-end\",\n[{screen_x:0,screen_y:b,buffer_x:0,buffer_y:b,buffer_width:this.svga_width,buffer_height:(f/this.svga_width|0)-b+1}])}else this.vga_replot(),this.vga_redraw(),this.bus.send(\"screen-fill-buffer-end\",this.layers);this.reset_diffs()}else dbg_log(\"Cannot fill buffer: No destination buffer\",LOG_VGA);this.update_vertical_retrace()};function PS2(a,b){this.cpu=a;this.bus=b;this.use_mouse=this.enable_mouse_stream=!1;this.have_mouse=!0;this.mouse_clicks=this.mouse_delta_y=this.mouse_delta_x=0;this.have_keyboard=!0;this.next_read_resolution=this.next_read_rate=this.next_handle_scan_code_set=this.next_read_led=this.next_read_sample=this.next_is_mouse_command=this.enable_keyboard_stream=!1;this.kbd_buffer=new ByteQueue(1024);this.last_port60_byte=0;this.sample_rate=100;this.resolution=4;this.scaling2=!1;this.last_mouse_packet=-1;this.mouse_buffer=\nnew ByteQueue(1024);this.next_byte_is_aux=this.next_byte_is_ready=!1;this.bus.register(\"keyboard-code\",function(a){this.kbd_send_code(a)},this);this.bus.register(\"mouse-click\",function(a){this.mouse_send_click(a[0],a[1],a[2])},this);this.bus.register(\"mouse-delta\",function(a){this.mouse_send_delta(a[0],a[1])},this);this.bus.register(\"mouse-wheel\",function(a){},this);this.command_register=5;this.read_command_register=this.read_output_register=!1;a.io.register_read(96,this,this.port60_read);a.io.register_read(100,\nthis,this.port64_read);a.io.register_write(96,this,this.port60_write);a.io.register_write(100,this,this.port64_write)}\nPS2.prototype.get_state=function(){var a=[];a[0]=this.enable_mouse_stream;a[1]=this.use_mouse;a[2]=this.have_mouse;a[3]=this.mouse_delta_x;a[4]=this.mouse_delta_y;a[5]=this.mouse_clicks;a[6]=this.have_keyboard;a[7]=this.enable_keyboard_stream;a[8]=this.next_is_mouse_command;a[9]=this.next_read_sample;a[10]=this.next_read_led;a[11]=this.next_handle_scan_code_set;a[12]=this.next_read_rate;a[13]=this.next_read_resolution;a[15]=this.last_port60_byte;a[16]=this.sample_rate;a[17]=this.resolution;a[18]=\nthis.scaling2;a[20]=this.command_register;a[21]=this.read_output_register;a[22]=this.read_command_register;return a};\nPS2.prototype.set_state=function(a){this.enable_mouse_stream=a[0];this.use_mouse=a[1];this.have_mouse=a[2];this.mouse_delta_x=a[3];this.mouse_delta_y=a[4];this.mouse_clicks=a[5];this.have_keyboard=a[6];this.enable_keyboard_stream=a[7];this.next_is_mouse_command=a[8];this.next_read_sample=a[9];this.next_read_led=a[10];this.next_handle_scan_code_set=a[11];this.next_read_rate=a[12];this.next_read_resolution=a[13];this.last_port60_byte=a[15];this.sample_rate=a[16];this.resolution=a[17];this.scaling2=\na[18];this.command_register=a[20];this.read_output_register=a[21];this.read_command_register=a[22];this.next_byte_is_aux=this.next_byte_is_ready=!1;this.kbd_buffer.clear();this.mouse_buffer.clear();this.bus.send(\"mouse-enable\",this.use_mouse)};PS2.prototype.raise_irq=function(){this.next_byte_is_ready||(this.kbd_buffer.length?this.kbd_irq():this.mouse_buffer.length&&this.mouse_irq())};\nPS2.prototype.mouse_irq=function(){this.next_byte_is_aux=this.next_byte_is_ready=!0;this.command_register&2&&(dbg_log(\"Mouse irq\",LOG_PS2),this.cpu.device_lower_irq(12),this.cpu.device_raise_irq(12))};PS2.prototype.kbd_irq=function(){this.next_byte_is_ready=!0;this.next_byte_is_aux=!1;this.command_register&1&&(dbg_log(\"Keyboard irq\",LOG_PS2),this.cpu.device_lower_irq(1),this.cpu.device_raise_irq(1))};\nPS2.prototype.kbd_send_code=function(a){this.enable_keyboard_stream&&(dbg_log(\"adding kbd code: \"+h(a),LOG_PS2),this.kbd_buffer.push(a),this.raise_irq())};PS2.prototype.mouse_send_delta=function(a,b){if(this.have_mouse&&this.use_mouse){var c=this.resolution*this.sample_rate/80;this.mouse_delta_x+=a*c;this.mouse_delta_y+=b*c;this.enable_mouse_stream&&(a=this.mouse_delta_x|0,b=this.mouse_delta_y|0,a||b)&&(Date.now(),this.mouse_delta_x-=a,this.mouse_delta_y-=b,this.send_mouse_packet(a,b))}};\nPS2.prototype.mouse_send_click=function(a,b,c){this.have_mouse&&this.use_mouse&&(this.mouse_clicks=a|c<<1|b<<2,this.enable_mouse_stream&&this.send_mouse_packet(0,0))};PS2.prototype.send_mouse_packet=function(a,b){var c=(0>b)<<5|(0>a)<<4|8|this.mouse_clicks;this.last_mouse_packet=Date.now();this.mouse_buffer.push(c);this.mouse_buffer.push(a);this.mouse_buffer.push(b);dbg_log(\"adding mouse packets: \"+[c,a,b],LOG_PS2);this.raise_irq()};\nPS2.prototype.apply_scaling2=function(a){var b=a>>31;switch(Math.abs(a)){case 0:case 1:case 3:return a;case 2:return b;case 4:return 6*b;case 5:return 9*b;default:return a<<1}};\nPS2.prototype.port60_read=function(){this.next_byte_is_ready=!1;if(!this.kbd_buffer.length&&!this.mouse_buffer.length)return dbg_log(\"Port 60 read: Empty\",LOG_PS2),this.last_port60_byte;this.next_byte_is_aux?(this.cpu.device_lower_irq(12),this.last_port60_byte=this.mouse_buffer.shift(),dbg_log(\"Port 60 read (mouse): \"+h(this.last_port60_byte),LOG_PS2)):(this.cpu.device_lower_irq(1),this.last_port60_byte=this.kbd_buffer.shift(),dbg_log(\"Port 60 read (kbd)  : \"+h(this.last_port60_byte),LOG_PS2));(this.kbd_buffer.length||\nthis.mouse_buffer.length)&&this.raise_irq();return this.last_port60_byte};PS2.prototype.port64_read=function(){var a=16;this.next_byte_is_ready&&(a|=1);this.next_byte_is_aux&&(a|=32);dbg_log(\"port 64 read: \"+h(a),LOG_PS2);return a};\nPS2.prototype.port60_write=function(a){dbg_log(\"port 60 write: \"+h(a),LOG_PS2);if(this.read_command_register)this.command_register=a,this.read_command_register=!1,dbg_log(\"Keyboard command register = \"+h(this.command_register),LOG_PS2);else if(this.read_output_register)this.read_output_register=!1,this.mouse_buffer.clear(),this.mouse_buffer.push(a),this.mouse_irq();else if(this.next_read_sample)this.next_read_sample=!1,this.mouse_buffer.clear(),this.mouse_buffer.push(250),this.sample_rate=a,dbg_log(\"mouse sample rate: \"+\nh(a),LOG_PS2),this.sample_rate||(dbg_log(\"invalid sample rate, reset to 100\",LOG_PS2),this.sample_rate=100),this.mouse_irq();else if(this.next_read_resolution)this.next_read_resolution=!1,this.mouse_buffer.clear(),this.mouse_buffer.push(250),3<a?(this.resolution=4,dbg_log(\"invalid resolution, resetting to 4\",LOG_PS2)):(this.resolution=1<<a,dbg_log(\"resolution: \"+this.resolution,LOG_PS2)),this.mouse_irq();else if(this.next_read_led)this.next_read_led=!1,this.kbd_buffer.push(250),this.kbd_irq();else if(this.next_handle_scan_code_set)this.next_handle_scan_code_set=\n!1,this.kbd_buffer.push(250),this.kbd_irq(),a||this.kbd_buffer.push(2);else if(this.next_read_rate)this.next_read_rate=!1,this.kbd_buffer.push(250),this.kbd_irq();else if(this.next_is_mouse_command){if(this.next_is_mouse_command=!1,dbg_log(\"Port 60 data register write: \"+h(a),LOG_PS2),this.have_mouse){this.kbd_buffer.clear();this.mouse_buffer.clear();this.mouse_buffer.push(250);switch(a){case 230:dbg_log(\"Scaling 1:1\",LOG_PS2);this.scaling2=!1;break;case 231:dbg_log(\"Scaling 2:1\",LOG_PS2);this.scaling2=\n!0;break;case 232:this.next_read_resolution=!0;break;case 233:this.send_mouse_packet(0,0);break;case 235:dbg_log(\"unimplemented request single packet\",LOG_PS2);this.send_mouse_packet(0,0);break;case 242:this.mouse_buffer.push(0);this.mouse_buffer.push(0);this.mouse_clicks=this.mouse_delta_x=this.mouse_delta_y=0;break;case 243:this.next_read_sample=!0;break;case 244:this.use_mouse=this.enable_mouse_stream=!0;this.bus.send(\"mouse-enable\",!0);this.mouse_clicks=this.mouse_delta_x=this.mouse_delta_y=0;\nbreak;case 245:this.enable_mouse_stream=!1;break;case 246:this.enable_mouse_stream=!1;this.sample_rate=100;this.scaling2=!1;this.resolution=4;break;case 255:dbg_log(\"Mouse reset\",LOG_PS2);this.mouse_buffer.push(170);this.mouse_buffer.push(0);this.use_mouse=!0;this.bus.send(\"mouse-enable\",!0);this.enable_mouse_stream=!1;this.sample_rate=100;this.scaling2=!1;this.resolution=4;this.mouse_clicks=this.mouse_delta_x=this.mouse_delta_y=0;break;default:dbg_log(\"Unimplemented mouse command: \"+h(a),LOG_PS2)}this.mouse_irq()}}else{dbg_log(\"Port 60 data register write: \"+\nh(a),LOG_PS2);this.mouse_buffer.clear();this.kbd_buffer.clear();this.kbd_buffer.push(250);switch(a){case 237:this.next_read_led=!0;break;case 240:this.next_handle_scan_code_set=!0;break;case 242:this.kbd_buffer.push(171);this.kbd_buffer.push(83);break;case 243:this.next_read_rate=!0;break;case 244:dbg_log(\"kbd enable scanning\",LOG_PS2);this.enable_keyboard_stream=!0;break;case 245:dbg_log(\"kbd disable scanning\",LOG_PS2);this.enable_keyboard_stream=!1;break;case 246:break;case 255:this.kbd_buffer.clear();\nthis.kbd_buffer.push(250);this.kbd_buffer.push(170);this.kbd_buffer.push(0);break;default:dbg_log(\"Unimplemented keyboard command: \"+h(a),LOG_PS2)}this.kbd_irq()}};\nPS2.prototype.port64_write=function(a){dbg_log(\"port 64 write: \"+h(a),LOG_PS2);switch(a){case 32:this.kbd_buffer.clear();this.mouse_buffer.clear();this.kbd_buffer.push(this.command_register);this.kbd_irq();break;case 96:this.read_command_register=!0;break;case 211:this.read_output_register=!0;break;case 212:this.next_is_mouse_command=!0;break;case 167:dbg_log(\"Disable second port\",LOG_PS2);this.command_register|=32;break;case 168:dbg_log(\"Enable second port\",LOG_PS2);this.command_register&=-33;break;\ncase 169:this.kbd_buffer.clear();this.mouse_buffer.clear();this.kbd_buffer.push(0);this.kbd_irq();break;case 170:this.kbd_buffer.clear();this.mouse_buffer.clear();this.kbd_buffer.push(85);this.kbd_irq();break;case 171:this.kbd_buffer.clear();this.mouse_buffer.clear();this.kbd_buffer.push(0);this.kbd_irq();break;case 173:dbg_log(\"Disable Keyboard\",LOG_PS2);this.command_register|=16;break;case 174:dbg_log(\"Enable Keyboard\",LOG_PS2);this.command_register&=-17;break;case 254:dbg_log(\"CPU reboot via PS2\");\nthis.cpu.reboot_internal();break;default:dbg_log(\"port 64: Unimplemented command byte: \"+h(a),LOG_PS2)}};var PIC_LOG_VERBOSE=!1;\nfunction PIC(a,b){this.irq_value=this.irr=this.isr=this.irq_map=this.irq_mask=0;this.requested_irq=-1;this.master=b;this.is_master=void 0===this.master;this.slave=void 0;this.name=this.is_master?\"master\":\"slave \";this.expect_icw4=!1;this.read_isr=this.state=0;this.auto_eoi=1;this.elcr=this.special_mask_mode=0;this.cpu=a;this.is_master?(this.slave=new PIC(this.cpu,this),this.check_irqs=function(){if(0<=this.requested_irq)PIC_LOG_VERBOSE&&dbg_log(\"master> Already requested irq: \"+this.requested_irq,\nLOG_PIC),this.cpu.handle_irqs();else{var a=this.irr&this.irq_mask;if(a){a&=-a;var b=this.special_mask_mode?this.irq_mask:-1;this.isr&&(this.isr&-this.isr&b)<=a?dbg_log(\"master> higher prio: isr=\"+h(this.isr,2)+\" mask=\"+h(this.irq_mask&255,2)+\" irq=\"+h(a,2),LOG_PIC):(dbg_assert(0!==a),b=v86util.int_log2_byte(a),dbg_assert(a===1<<b),PIC_LOG_VERBOSE&&dbg_log(\"master> request irq \"+b,LOG_PIC),this.requested_irq=b,this.cpu.handle_irqs())}else PIC_LOG_VERBOSE&&dbg_log(\"master> no unmasked irrs. irr=\"+h(this.irr,\n2)+\" mask=\"+h(this.irq_mask&255,2)+\" isr=\"+h(this.isr,2),LOG_PIC)}},this.acknowledge_irq=function(){if(-1!==this.requested_irq)if(0===this.irr)PIC_LOG_VERBOSE&&dbg_log(\"master> spurious requested=\"+this.requested_irq,LOG_PIC),this.requested_irq=-1,this.cpu.pic_call_irq(this.irq_map|7);else{dbg_assert(this.irr);dbg_assert(0<=this.requested_irq);var a=1<<this.requested_irq;0===(this.elcr&a)&&(this.irr&=~a);this.auto_eoi||(this.isr|=a);PIC_LOG_VERBOSE&&dbg_log(\"master> acknowledge \"+this.requested_irq,\nLOG_PIC);2===this.requested_irq?this.slave.acknowledge_irq():this.cpu.pic_call_irq(this.irq_map|this.requested_irq);this.requested_irq=-1;this.check_irqs()}}):(this.check_irqs=function(){if(0<=this.requested_irq)PIC_LOG_VERBOSE&&dbg_log(\"slave > Already requested irq: \"+this.requested_irq,LOG_PIC),this.cpu.handle_irqs();else{var a=this.irr&this.irq_mask;if(a){a&=-a;var b=this.special_mask_mode?this.irq_mask:-1;this.isr&&(this.isr&-this.isr&b)<=a?PIC_LOG_VERBOSE&&dbg_log(\"slave > higher prio: isr=\"+\nh(this.isr,2)+\" irq=\"+h(a,2),LOG_PIC):(dbg_assert(0!==a),b=v86util.int_log2_byte(a),dbg_assert(a===1<<b),PIC_LOG_VERBOSE&&dbg_log(\"slave > request irq \"+b,LOG_PIC),this.requested_irq=b,this.master.set_irq(2))}else PIC_LOG_VERBOSE&&dbg_log(\"slave > no unmasked irrs. irr=\"+h(this.irr,2)+\" mask=\"+h(this.irq_mask&255,2)+\" isr=\"+h(this.isr,2),LOG_PIC)}},this.acknowledge_irq=function(){if(-1!==this.requested_irq)if(0===this.irr)PIC_LOG_VERBOSE&&dbg_log(\"slave > spurious requested=\"+this.requested_irq,LOG_PIC),\nthis.requested_irq=-1,this.master.irq_value&=-5,this.cpu.pic_call_irq(this.irq_map|7);else{dbg_assert(this.irr);dbg_assert(0<=this.requested_irq);var a=1<<this.requested_irq;0===(this.elcr&a)&&(this.irr&=~a);this.auto_eoi||(this.isr|=a);this.master.irq_value&=-5;PIC_LOG_VERBOSE&&dbg_log(\"slave > acknowledge \"+this.requested_irq,LOG_PIC);this.cpu.pic_call_irq(this.irq_map|this.requested_irq);this.requested_irq=-1;this.check_irqs()}});this.dump=function(){dbg_log(\"mask: \"+h(this.irq_mask&255),LOG_PIC);\ndbg_log(\"base: \"+h(this.irq_map),LOG_PIC);dbg_log(\"requested: \"+h(this.irr),LOG_PIC);dbg_log(\"serviced: \"+h(this.isr),LOG_PIC);this.is_master&&this.slave.dump()};this.is_master?(a=32,b=1232):(a=160,b=1233);this.cpu.io.register_write(a,this,this.port20_write);this.cpu.io.register_read(a,this,this.port20_read);this.cpu.io.register_write(a|1,this,this.port21_write);this.cpu.io.register_read(a|1,this,this.port21_read);this.cpu.io.register_write(b,this,this.port4D0_write);this.cpu.io.register_read(b,this,\nthis.port4D0_read);this.is_master?(this.set_irq=function(a){dbg_assert(0<=a&&16>a);8<=a?this.slave.set_irq(a-8):(PIC_LOG_VERBOSE&&dbg_log(\"master> set irq \"+a,LOG_PIC),a=1<<a,0===(this.irq_value&a)&&(this.irr|=a,this.irq_value|=a,this.check_irqs()))},this.clear_irq=function(a){dbg_assert(0<=a&&16>a);PIC_LOG_VERBOSE&&dbg_log(\"master> clear irq \"+a,LOG_PIC);8<=a?this.slave.clear_irq(a-8):(a=1<<a,this.irq_value&a&&(this.irq_value&=~a,this.irr&=~a,this.check_irqs()))}):(this.set_irq=function(a){dbg_assert(0<=\na&&8>a);PIC_LOG_VERBOSE&&dbg_log(\"slave > set irq \"+a,LOG_PIC);a=1<<a;0===(this.irq_value&a)&&(this.irr|=a,this.irq_value|=a,this.check_irqs())},this.clear_irq=function(a){dbg_assert(0<=a&&8>a);PIC_LOG_VERBOSE&&dbg_log(\"slave > clear irq \"+a,LOG_PIC);a=1<<a;this.irq_value&a&&(this.irq_value&=~a,this.irr&=~a,this.check_irqs())});this.get_isr=function(){return this.isr}}\nPIC.prototype.get_state=function(){var a=[];a[0]=this.irq_mask;a[1]=this.irq_map;a[2]=this.isr;a[3]=this.irr;a[4]=this.is_master;a[5]=this.slave;a[6]=this.expect_icw4;a[7]=this.state;a[8]=this.read_isr;a[9]=this.auto_eoi;a[10]=this.elcr;return a};PIC.prototype.set_state=function(a){this.irq_mask=a[0];this.irq_map=a[1];this.isr=a[2];this.irr=a[3];this.is_master=a[4];this.slave=a[5];this.expect_icw4=a[6];this.state=a[7];this.read_isr=a[8];this.auto_eoi=a[9];this.elcr=a[10]};\nPIC.prototype.port20_write=function(a){if(a&16)dbg_log(\"icw1 = \"+h(a),LOG_PIC),this.irq_value=this.irq_mask=this.irr=this.isr=0,this.auto_eoi=1,this.requested_irq=-1,this.expect_icw4=a&1,this.state=1;else if(a&8)dbg_log(\"ocw3: \"+h(a),LOG_PIC),a&2&&(this.read_isr=a&1),a&4&&dbg_assert(!1,\"unimplemented: polling\",LOG_PIC),a&64&&(this.special_mask_mode=32===(a&32),dbg_log(\"special mask mode: \"+this.special_mask_mode,LOG_PIC));else{dbg_log(\"eoi: \"+h(a)+\" (\"+this.name+\")\",LOG_PIC);var b=a>>5;1===b?(this.isr&=\nthis.isr-1,dbg_log(\"new isr: \"+h(this.isr,2),LOG_PIC)):3===b?this.isr&=~(1<<(a&7)):192===(a&200)?dbg_log(\"lowest priority: \"+h(a&7),LOG_PIC):(dbg_log(\"Unknown eoi: \"+h(a),LOG_PIC),dbg_assert(!1),this.isr&=this.isr-1);this.check_irqs()}};PIC.prototype.port20_read=function(){if(this.read_isr)return dbg_log(\"read port 20h (isr): \"+h(this.isr),LOG_PIC),this.isr;dbg_log(\"read port 20h (irr): \"+h(this.irr),LOG_PIC);return this.irr};\nPIC.prototype.port21_write=function(a){0===this.state?this.expect_icw4?(this.expect_icw4=!1,this.auto_eoi=a&2,dbg_log(\"icw4: \"+h(a)+\" autoeoi=\"+this.auto_eoi,LOG_PIC),0===(a&1)&&dbg_assert(!1,\"unimplemented: not 8086 mode\",LOG_PIC)):(this.irq_mask=~a,PIC_LOG_VERBOSE&&dbg_log(\"interrupt mask: \"+(this.irq_mask&255).toString(2)+\" (\"+this.name+\")\",LOG_PIC),this.check_irqs()):1===this.state?(this.irq_map=a,dbg_log(\"interrupts are mapped to \"+h(this.irq_map)+\" (\"+this.name+\")\",LOG_PIC),this.state++):2===\nthis.state&&(this.state=0,dbg_log(\"icw3: \"+h(a),LOG_PIC))};PIC.prototype.port21_read=function(){dbg_log(\"21h read \"+h(~this.irq_mask&255),LOG_PIC);return~this.irq_mask&255};PIC.prototype.port4D0_read=function(){dbg_log(\"elcr read: \"+h(this.elcr,2),LOG_PIC);return this.elcr};PIC.prototype.port4D0_write=function(a){dbg_log(\"elcr write: \"+h(a,2),LOG_PIC);this.elcr=a};var CMOS_RTC_SECONDS=0,CMOS_RTC_SECONDS_ALARM=1,CMOS_RTC_MINUTES=2,CMOS_RTC_MINUTES_ALARM=3,CMOS_RTC_HOURS=4,CMOS_RTC_HOURS_ALARM=5,CMOS_RTC_DAY_WEEK=6,CMOS_RTC_DAY_MONTH=7,CMOS_RTC_MONTH=8,CMOS_RTC_YEAR=9,CMOS_STATUS_A=10,CMOS_STATUS_B=11,CMOS_STATUS_C=12,CMOS_STATUS_D=13,CMOS_RESET_CODE=15,CMOS_FLOPPY_DRIVE_TYPE=16,CMOS_DISK_DATA=18,CMOS_EQUIPMENT_INFO=20,CMOS_MEM_BASE_LOW=21,CMOS_MEM_BASE_HIGH=22,CMOS_MEM_OLD_EXT_LOW=23,CMOS_MEM_OLD_EXT_HIGH=24,CMOS_DISK_DRIVE1_TYPE=25,CMOS_DISK_DRIVE2_TYPE=26,\nCMOS_DISK_DRIVE1_CYL=27,CMOS_DISK_DRIVE2_CYL=36,CMOS_MEM_EXTMEM_LOW=48,CMOS_MEM_EXTMEM_HIGH=49,CMOS_CENTURY=50,CMOS_MEM_EXTMEM2_LOW=52,CMOS_MEM_EXTMEM2_HIGH=53,CMOS_BIOS_BOOTFLAG1=56,CMOS_BIOS_DISKTRANSFLAG=57,CMOS_BIOS_BOOTFLAG2=61,CMOS_MEM_HIGHMEM_LOW=91,CMOS_MEM_HIGHMEM_MID=92,CMOS_MEM_HIGHMEM_HIGH=93,CMOS_BIOS_SMP_COUNT=95;\nfunction RTC(a){this.cpu=a;this.cmos_index=0;this.cmos_data=new Uint8Array(128);this.last_update=this.rtc_time=Date.now();this.next_interrupt=0;this.periodic_interrupt=!1;this.periodic_interrupt_time=.9765625;this.cmos_a=38;this.cmos_b=2;this.nmi_disabled=this.cmos_c=0;a.io.register_write(112,this,function(a){this.cmos_index=a&127;this.nmi_disabled=a>>7});a.io.register_write(113,this,this.cmos_port_write);a.io.register_read(113,this,this.cmos_port_read)}\nRTC.prototype.get_state=function(){var a=[];a[0]=this.cmos_index;a[1]=this.cmos_data;a[2]=this.rtc_time;a[3]=this.last_update;a[4]=this.next_interrupt;a[6]=this.periodic_interrupt;a[7]=this.periodic_interrupt_time;a[8]=this.cmos_a;a[9]=this.cmos_b;a[10]=this.cmos_c;a[11]=this.nmi_disabled;return a};\nRTC.prototype.set_state=function(a){this.cmos_index=a[0];this.cmos_data=a[1];this.rtc_time=a[2];this.last_update=a[3];this.next_interrupt=a[4];this.periodic_interrupt=a[6];this.periodic_interrupt_time=a[7];this.cmos_a=a[8];this.cmos_b=a[9];this.cmos_c=a[10];this.nmi_disabled=a[11]};\nRTC.prototype.timer=function(a,b){a=Date.now();this.rtc_time+=a-this.last_update;this.last_update=a;return this.periodic_interrupt&&this.next_interrupt<a?(this.cpu.device_raise_irq(8),this.cmos_c|=192,this.next_interrupt+=this.periodic_interrupt_time*Math.ceil((a-this.next_interrupt)/this.periodic_interrupt_time),Math.max(0,a-this.next_interrupt)):100};RTC.prototype.bcd_pack=function(a){for(var b=0,c=0,d;a;)d=a%10,c|=d<<4*b,b++,a=(a-d)/10;return c};\nRTC.prototype.encode_time=function(a){return this.cmos_b&4?a:this.bcd_pack(a)};\nRTC.prototype.cmos_port_read=function(){var a=this.cmos_index;switch(a){case CMOS_RTC_SECONDS:return this.encode_time((new Date(this.rtc_time)).getUTCSeconds());case CMOS_RTC_MINUTES:return this.encode_time((new Date(this.rtc_time)).getUTCMinutes());case CMOS_RTC_HOURS:return this.encode_time((new Date(this.rtc_time)).getUTCHours());case CMOS_RTC_DAY_MONTH:return this.encode_time((new Date(this.rtc_time)).getUTCDate());case CMOS_RTC_MONTH:return this.encode_time((new Date(this.rtc_time)).getUTCMonth()+\n1);case CMOS_RTC_YEAR:return this.encode_time((new Date(this.rtc_time)).getUTCFullYear()%100);case CMOS_STATUS_A:return this.cmos_a;case CMOS_STATUS_B:return this.cmos_b;case CMOS_STATUS_C:return this.cpu.device_lower_irq(8),dbg_log(\"cmos reg C read\",LOG_RTC),a=this.cmos_c,this.cmos_c&=-241,a;case CMOS_STATUS_D:return 255;case CMOS_CENTURY:return this.encode_time((new Date(this.rtc_time)).getUTCFullYear()/100|0);default:return dbg_log(\"cmos read from index \"+h(a),LOG_RTC),this.cmos_data[this.cmos_index]}};\nRTC.prototype.cmos_port_write=function(a){switch(this.cmos_index){case 10:this.cmos_a=a&127;this.periodic_interrupt_time=1E3/(32768>>(this.cmos_a&15)-1);dbg_log(\"Periodic interrupt, a=\"+h(this.cmos_a,2)+\" t=\"+this.periodic_interrupt_time,LOG_RTC);break;case 11:this.cmos_b=a;this.cmos_b&64&&(this.next_interrupt=Date.now());this.cmos_b&32&&dbg_log(\"Unimplemented: alarm interrupt\",LOG_RTC);this.cmos_b&16&&dbg_log(\"Unimplemented: updated interrupt\",LOG_RTC);dbg_log(\"cmos b=\"+h(this.cmos_b,2),LOG_RTC);\nbreak;default:dbg_log(\"cmos write index \"+h(this.cmos_index)+\": \"+h(a),LOG_RTC)}this.periodic_interrupt=64===(this.cmos_b&64)&&0<(this.cmos_a&15)};RTC.prototype.cmos_read=function(a){dbg_assert(128>a);return this.cmos_data[a]};RTC.prototype.cmos_write=function(a,b){dbg_log(\"cmos \"+h(a)+\" <- \"+h(b),LOG_RTC);dbg_assert(128>a);this.cmos_data[a]=b};var DLAB=128,UART_IER_MSI=8,UART_IER_THRI=2,UART_IER_RDI=1,UART_IIR_MSI=0,UART_IIR_NO_INT=1,UART_IIR_THRI=2,UART_IIR_RDI=4,UART_IIR_RLSI=6,UART_IIR_CTI=12,UART_LSR_DATA_READY=1,UART_LSR_TX_EMPTY=32,UART_LSR_TRANSMITTER_EMPTY=64;\nfunction UART(a,b,c){this.bus=c;this.cpu=a;this.ints=1<<UART_IIR_THRI;this.line_control=this.baud_rate=0;this.lsr=UART_LSR_TRANSMITTER_EMPTY|UART_LSR_TX_EMPTY;this.ier=this.fifo_control=0;this.iir=UART_IIR_NO_INT;this.irq=this.scratch_register=this.modem_status=this.modem_control=0;this.input=new ByteQueue(4096);this.current_line=[];if(1E3===b||1016===b)this.irq=4;else if(1E3===b||1E3===b)this.irq=3;else{dbg_log(\"Invalid port: \"+h(b),LOG_SERIAL);return}this.bus.register(\"serial0-input\",function(a){this.data_received(a)},\nthis);a=a.io;a.register_write(b,this,function(a){this.write_data(a)},function(a){this.write_data(a&255);this.write_data(a>>8)});a.register_write(b|1,this,function(a){this.line_control&DLAB?(this.baud_rate=this.baud_rate&255|a<<8,dbg_log(\"baud rate: \"+h(this.baud_rate),LOG_SERIAL)):(this.ier=a&15,dbg_log(\"interrupt enable: \"+h(a),LOG_SERIAL),this.CheckInterrupt())});a.register_read(b,this,function(){if(this.line_control&DLAB)return this.baud_rate&255;var a=this.input.shift();-1===a?dbg_log(\"Read input empty\",\nLOG_SERIAL):dbg_log(\"Read input: \"+h(a),LOG_SERIAL);0===this.input.length&&(this.lsr&=~UART_LSR_DATA_READY,this.ClearInterrupt(UART_IIR_CTI));return a});a.register_read(b|1,this,function(){return this.line_control&DLAB?this.baud_rate>>8:this.ier&15});a.register_read(b|2,this,function(){var a=this.iir&15|192;dbg_log(\"read interrupt identification: \"+h(this.iir),LOG_SERIAL);this.iir==UART_IIR_THRI&&this.ClearInterrupt(UART_IIR_THRI);return a});a.register_write(b|2,this,function(a){dbg_log(\"fifo control: \"+\nh(a),LOG_SERIAL);this.fifo_control=a});a.register_read(b|3,this,function(){dbg_log(\"read line control: \"+h(this.line_control),LOG_SERIAL);return this.line_control});a.register_write(b|3,this,function(a){dbg_log(\"line control: \"+h(a),LOG_SERIAL);this.line_control=a});a.register_read(b|4,this,function(){return this.modem_control});a.register_write(b|4,this,function(a){dbg_log(\"modem control: \"+h(a),LOG_SERIAL);this.modem_control=a});a.register_read(b|5,this,function(){dbg_log(\"read line status: \"+h(this.lsr),\nLOG_SERIAL);return this.lsr});a.register_write(b|5,this,function(a){dbg_log(\"Factory test write\",LOG_SERIAL)});a.register_read(b|6,this,function(){dbg_log(\"read modem status: \"+h(this.modem_status),LOG_SERIAL);return this.modem_status});a.register_write(b|6,this,function(a){dbg_log(\"Unkown register write (base+6)\",LOG_SERIAL)});a.register_read(b|7,this,function(){return this.scratch_register});a.register_write(b|7,this,function(a){this.scratch_register=a})}\nUART.prototype.get_state=function(){var a=[];a[0]=this.ints;a[1]=this.baud_rate;a[2]=this.line_control;a[3]=this.lsr;a[4]=this.fifo_control;a[5]=this.ier;a[6]=this.iir;a[7]=this.modem_control;a[8]=this.modem_status;a[9]=this.scratch_register;a[10]=this.irq;return a};\nUART.prototype.set_state=function(a){this.ints=a[0];this.baud_rate=a[1];this.line_control=a[2];this.lsr=a[3];this.fifo_control=a[4];this.ier=a[5];this.iir=a[6];this.modem_control=a[7];this.modem_status=a[8];this.scratch_register=a[9];this.irq=a[10]};\nUART.prototype.CheckInterrupt=function(){this.ints&1<<UART_IIR_CTI&&this.ier&UART_IER_RDI?(this.iir=UART_IIR_CTI,this.cpu.device_raise_irq(this.irq)):this.ints&1<<UART_IIR_THRI&&this.ier&UART_IER_THRI?(this.iir=UART_IIR_THRI,this.cpu.device_raise_irq(this.irq)):this.ints&1<<UART_IIR_MSI&&this.ier&UART_IER_MSI?(this.iir=UART_IIR_MSI,this.cpu.device_raise_irq(this.irq)):(this.iir=UART_IIR_NO_INT,this.cpu.device_lower_irq(this.irq))};UART.prototype.ThrowInterrupt=function(a){this.ints|=1<<a;this.CheckInterrupt()};\nUART.prototype.ClearInterrupt=function(a){this.ints&=~(1<<a);this.CheckInterrupt()};UART.prototype.data_received=function(a){dbg_log(\"input: \"+h(a),LOG_SERIAL);this.input.push(a);this.lsr|=UART_LSR_DATA_READY;this.ThrowInterrupt(UART_IIR_CTI)};\nUART.prototype.write_data=function(a){if(this.line_control&DLAB)this.baud_rate=this.baud_rate&-256|a;else if(dbg_log(\"data: \"+h(a),LOG_SERIAL),this.ThrowInterrupt(UART_IIR_THRI),255!==a){var b=String.fromCharCode(a);this.bus.send(\"serial0-output-char\",b);this.current_line.push(a);\"\\n\"===b&&(dbg_log(\"SERIAL: \"+String.fromCharCode.apply(\"\",this.current_line).trimRight()),this.bus.send(\"serial0-output-line\",String.fromCharCode.apply(\"\",this.current_line)),this.current_line=[])}};var HPET_ADDR=4275044352,HPET_PERIOD=1E8,HPET_FREQ_MS=1E12/HPET_PERIOD,HPET_SUPPORT_64=0,HPET_COUNTER_CONFIG=16|HPET_SUPPORT_64<<5,HPET_COUNTER_CONFIG_MASK=32816,HPET_NUM_COUNTERS=4;\nfunction HPET(a){function b(){return e?(Date.now()-f)*HPET_FREQ_MS+g|0:g}function c(){return HPET_SUPPORT_64?e?(Date.now()-f)*(HPET_FREQ_MS/4294967296)+k|0:k:0}var d=this,e=!1,f=Date.now(),g=0,k=0,l=!1,m=0,p=new Int32Array(HPET_NUM_COUNTERS<<1),n=new Int32Array(HPET_NUM_COUNTERS<<1),r=new Int32Array(HPET_NUM_COUNTERS<<1),q=0;this.legacy_mode=!1;this.timer=function(c){if(e){c=b()>>>0;for(var d,f,g=0;g<HPET_NUM_COUNTERS;g++)if(d=p[g<<1],f=n[g<<1]>>>0,q<=c?f>q&&f<=c:f>q||f<=c)f=d&4,d&2?(f=f&&!(m&1<<\ng),m|=1<<g):m&=~(1<<g),d&8&&(n[g<<1]+=r[g<<1]),f&&a.device_raise_irq(0);q=c}};a.io.mmap_register(HPET_ADDR,16384,function(a){dbg_log(\"Read \"+h(a,4)+\" (ctr=\"+h(b()>>>0)+\")\",LOG_HPET);switch(a){case 0:return HPET_NUM_COUNTERS-1<<8|98305|HPET_SUPPORT_64<<13;case 4:return HPET_PERIOD;case 16:return d.legacy_mode<<1|e;case 240:return b();case 244:return c()}var f=a>>2&7,g=a-256>>5;if(256>a||g>=HPET_NUM_COUNTERS||5<f)return dbg_log(\"Read reserved address: \"+h(a),LOG_HPET),0;dbg_log(\"Read counter: addr=\"+\nh(a)+\" counter=\"+h(g,2)+\" reg=\"+h(f),LOG_HPET);switch(f){case 0:return p[g<<1]&~HPET_COUNTER_CONFIG_MASK|HPET_COUNTER_CONFIG;case 1:return p[g<<1|1];case 2:return n[g<<1];case 3:return n[g<<1|1];case 4:case 5:return 0}},function(a,q){dbg_log(\"Write \"+h(a,4)+\": \"+h(q,2),LOG_HPET);switch(a){case 16:dbg_log(\"conf: enabled=\"+(q&1)+\" legacy=\"+(q>>1&1),LOG_HPET);(e^q)&1&&(q&1?f=Date.now():(g=b(),k=c()));e=1===(q&1);d.legacy_mode=2===(q&2);return;case 32:m&=~q;return;case 240:g=q;return;case 244:k=q;return}var x=\na>>2&7,u=a-256>>5;if(256>a||u>=HPET_NUM_COUNTERS||2<x)dbg_log(\"Write reserved address: \"+h(a)+\" data=\"+h(q),LOG_HPET);else switch(dbg_log(\"Write counter: addr=\"+h(a)+\" counter=\"+h(u,2)+\" reg=\"+h(x)+\" data=\"+h(q,2),LOG_HPET),x){case 0:p[u<<1]=q;break;case 2:l?(r[u<<1]=q,l=!1,dbg_log(\"Accumulator acc=\"+h(q>>>0,8)+\" ctr=\"+h(u,2),LOG_HPET)):(n[u<<1]=q,p[u<<1]&64&&(l=!0,p[u<<1]&=-65));break;case 3:n[u<<1|1]=q}})};var PMTIMER_FREQ=3579545;\nfunction ACPI(a){this.cpu=a;var b=a.io;a.devices.pci.register_device({pci_id:56,pci_space:[134,128,19,113,7,0,128,2,8,0,128,6,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,0],pci_bars:[],name:\"acpi\"});this.status=1;this.pm1_enable=this.pm1_status=0;this.last_timer=this.get_timer(v86.microtick());this.gpe=new Uint8Array(4);b.register_read(45056,this,void 0,function(){dbg_log(\"ACPI pm1_status read\",LOG_ACPI);return this.pm1_status});b.register_write(45056,\nthis,void 0,function(a){dbg_log(\"ACPI pm1_status write: \"+h(a,4),LOG_ACPI);this.pm1_status&=~a});b.register_read(45058,this,void 0,function(){dbg_log(\"ACPI pm1_enable read\",LOG_ACPI);return this.pm1_enable});b.register_write(45058,this,void 0,function(a){dbg_log(\"ACPI pm1_enable write: \"+h(a),LOG_ACPI);this.pm1_enable=a});b.register_read(45060,this,void 0,function(){dbg_log(\"ACPI status read\",LOG_ACPI);return this.status});b.register_write(45060,this,void 0,function(a){dbg_log(\"ACPI status write: \"+\nh(a),LOG_ACPI);this.status=a});b.register_read(45064,this,void 0,void 0,function(){return this.get_timer(v86.microtick())&16777215});b.register_read(45024,this,function(){dbg_log(\"Read gpe#0\",LOG_ACPI);return this.gpe[0]});b.register_read(45025,this,function(){dbg_log(\"Read gpe#1\",LOG_ACPI);return this.gpe[1]});b.register_read(45026,this,function(){dbg_log(\"Read gpe#2\",LOG_ACPI);return this.gpe[2]});b.register_read(45027,this,function(){dbg_log(\"Read gpe#3\",LOG_ACPI);return this.gpe[3]});b.register_write(45024,\nthis,function(a){dbg_log(\"Write gpe#0: \"+h(a),LOG_ACPI);this.gpe[0]=a});b.register_write(45025,this,function(a){dbg_log(\"Write gpe#1: \"+h(a),LOG_ACPI);this.gpe[1]=a});b.register_write(45026,this,function(a){dbg_log(\"Write gpe#2: \"+h(a),LOG_ACPI);this.gpe[2]=a});b.register_write(45027,this,function(a){dbg_log(\"Write gpe#3: \"+h(a),LOG_ACPI);this.gpe[3]=a})}\nACPI.prototype.timer=function(a){a=this.get_timer(a);var b=0!==((a^this.last_timer)&8388608);this.pm1_enable&1&&b?(dbg_log(\"ACPI raise irq\",LOG_ACPI),this.pm1_status|=1,this.cpu.device_raise_irq(9)):this.cpu.device_lower_irq(9);this.last_timer=a};ACPI.prototype.get_timer=function(a){return PMTIMER_FREQ/1E3*a|0};ACPI.prototype.get_state=function(){var a=[];a[0]=this.status;a[1]=this.pm1_status;a[2]=this.pm1_enable;return a};\nACPI.prototype.set_state=function(a){this.status=a[0];this.pm1_status=a[1];this.pm1_enable=a[2]};var APIC_LOG_VERBOSE=!1,APIC_ADDRESS=4276092928,APIC_TIMER_MODE_MASK=393216,APIC_TIMER_MODE_ONE_SHOT=0,APIC_TIMER_MODE_PERIODIC=131072,APIC_TIMER_MODE_TSC=262144,DELIVERY_MODES=\"Fixed (0);Lowest Prio (1);SMI (2);Reserved (3);NMI (4);INIT (5);Reserved (6);ExtINT (7)\".split(\";\"),DESTINATION_MODES=[\"physical\",\"logical\"];\nfunction APIC(a){var b=this;this.cpu=a;this.timer_divider=this.apic_id=0;this.timer_divider_shift=1;this.timer_current_count=this.timer_initial_count=0;this.next_tick=v86.microtick();this.lvt_error=this.lvt_int1=this.lvt_int0=this.lvt_perf_counter=this.lvt_timer=IOAPIC_CONFIG_MASKED;this.icr1=this.icr0=this.tpr=0;this.irr=new Int32Array(8);this.isr=new Int32Array(8);this.tmr=new Int32Array(8);this.spurious_vector=254;this.destination_format=-1;this.read_error=this.error=this.local_destination=0;a.io.mmap_register(APIC_ADDRESS,\n1048576,function(a){dbg_log(\"Unsupported read8 from apic: \"+h(a>>>0),LOG_APIC);var c=a&3;return b.read32(a&-4)>>8*c&255},function(a,b){dbg_log(\"Unsupported write8 from apic: \"+h(a)+\" <- \"+h(b),LOG_APIC);dbg_trace();dbg_assert(!1)},function(a){return b.read32(a)},function(a,d){return b.write32(a,d)})}\nAPIC.prototype.read32=function(a){a=a-APIC_ADDRESS|0;switch(a){case 32:return dbg_log(\"APIC read id\",LOG_APIC),this.apic_id;case 48:return dbg_log(\"APIC read version\",LOG_APIC),327700;case 128:return APIC_LOG_VERBOSE&&dbg_log(\"APIC read tpr\",LOG_APIC),this.tpr;case 208:return dbg_log(\"Read local destination\",LOG_APIC),this.local_destination;case 224:return dbg_log(\"Read destination format\",LOG_APIC),this.destination_format;case 240:return this.spurious_vector;case 256:case 272:case 288:case 304:case 320:case 336:case 352:case 368:return a=\na-256>>4,dbg_log(\"Read isr \"+a+\": \"+h(this.isr[a]>>>0,8),LOG_APIC),this.isr[a];case 384:case 400:case 416:case 432:case 448:case 464:case 480:case 496:return a=a-384>>4,dbg_log(\"Read tmr \"+a+\": \"+h(this.tmr[a]>>>0,8),LOG_APIC),this.tmr[a];case 512:case 528:case 544:case 560:case 576:case 592:case 608:case 624:return a=a-512>>4,dbg_log(\"Read irr \"+a+\": \"+h(this.irr[a]>>>0,8),LOG_APIC),this.irr[a];case 640:return dbg_log(\"Read error: \"+h(this.read_error>>>0,8),LOG_APIC),this.read_error;case 768:return APIC_LOG_VERBOSE&&\ndbg_log(\"APIC read icr0\",LOG_APIC),this.icr0;case 784:return dbg_log(\"APIC read icr1\",LOG_APIC),this.icr1;case 800:return dbg_log(\"read timer lvt\",LOG_APIC),this.lvt_timer;case 832:return dbg_log(\"read lvt perf counter\",LOG_APIC),this.lvt_perf_counter;case 848:return dbg_log(\"read lvt int0\",LOG_APIC),this.lvt_int0;case 864:return dbg_log(\"read lvt int1\",LOG_APIC),this.lvt_int1;case 880:return dbg_log(\"read lvt error\",LOG_APIC),this.lvt_error;case 992:return dbg_log(\"read timer divider\",LOG_APIC),\nthis.timer_divider;case 896:return dbg_log(\"read timer initial count\",LOG_APIC),this.timer_initial_count;case 912:return dbg_log(\"read timer current count: \"+h(this.timer_current_count>>>0,8),LOG_APIC),this.timer_current_count;default:return dbg_log(\"APIC read \"+h(a),LOG_APIC),dbg_assert(!1),0}};\nAPIC.prototype.write32=function(a,b){a=a-APIC_ADDRESS|0;switch(a){case 48:dbg_log(\"APIC write version: \"+h(b>>>0,8)+\", ignored\",LOG_APIC);break;case 128:APIC_LOG_VERBOSE&&dbg_log(\"Set tpr: \"+h(b&255,2),LOG_APIC);this.tpr=b&255;this.check_vector();break;case 176:a=this.highest_isr();-1!==a?(APIC_LOG_VERBOSE&&dbg_log(\"eoi: \"+h(b>>>0,8)+\" for vector \"+h(a),LOG_APIC),this.register_clear_bit(this.isr,a),this.register_get_bit(this.tmr,a)&&this.cpu.devices.ioapic.remote_eoi(a),this.check_vector()):dbg_log(\"Bad eoi: No isr set\",\nLOG_APIC);break;case 208:dbg_log(\"Set local destination: \"+h(b>>>0,8),LOG_APIC);this.local_destination=b&4278190080;break;case 224:dbg_log(\"Set destination format: \"+h(b>>>0,8),LOG_APIC);this.destination_format=b|16777215;break;case 240:dbg_log(\"Set spurious vector: \"+h(b>>>0,8),LOG_APIC);this.spurious_vector=b;break;case 640:dbg_log(\"Write error: \"+h(b>>>0,8),LOG_APIC);this.read_error=this.error;this.error=0;break;case 768:a=b&255;var c=b>>8&7,d=b>>11&1,e=b>>15&1,f=b>>18&3,g=this.icr1>>>24;dbg_log(\"APIC write icr0: \"+\nh(b,8)+\" vector=\"+h(a,2)+\" destination_mode=\"+DESTINATION_MODES[d]+\" delivery_mode=\"+DELIVERY_MODES[c]+\" destination_shorthand=\"+[\"no\",\"self\",\"all with self\",\"all without self\"][f],LOG_APIC);this.icr0=b&-4097;0===f?this.route(a,c,e,g,d):1===f?this.deliver(a,IOAPIC_DELIVERY_FIXED,e):2===f?this.deliver(a,c,e):3!==f&&dbg_assert(!1);break;case 784:dbg_log(\"APIC write icr1: \"+h(b>>>0,8),LOG_APIC);this.icr1=b;break;case 800:dbg_log(\"timer lvt: \"+h(b>>>0,8),LOG_APIC);this.lvt_timer=b;break;case 832:dbg_log(\"lvt perf counter: \"+\nh(b>>>0,8),LOG_APIC);this.lvt_perf_counter=b;break;case 848:dbg_log(\"lvt int0: \"+h(b>>>0,8),LOG_APIC);this.lvt_int0=b;break;case 864:dbg_log(\"lvt int1: \"+h(b>>>0,8),LOG_APIC);this.lvt_int1=b;break;case 880:dbg_log(\"lvt error: \"+h(b>>>0,8),LOG_APIC);this.lvt_error=b;break;case 992:dbg_log(\"timer divider: \"+h(b>>>0,8),LOG_APIC);this.timer_divider=b;b=b&3|(b&8)>>1;this.timer_divider_shift=7===b?0:b+1;break;case 896:dbg_log(\"timer initial: \"+h(b>>>0,8),LOG_APIC);this.timer_initial_count=b>>>0;this.timer_current_count=\nb>>>0;this.next_tick=v86.microtick();this.timer_active=!0;break;case 912:dbg_log(\"timer current: \"+h(b>>>0,8),LOG_APIC);dbg_assert(!1,\"read-only register\");break;default:dbg_log(\"APIC write32 \"+h(a)+\" <- \"+h(b>>>0,8),LOG_APIC),dbg_assert(!1)}};\nAPIC.prototype.timer=function(a){0!==this.timer_current_count&&(a=(a-this.next_tick)*TSC_RATE/(1<<this.timer_divider_shift)>>>0,0!==a&&(this.next_tick+=a/TSC_RATE*(1<<this.timer_divider_shift),this.timer_current_count-=a,0>=this.timer_current_count&&(a=this.lvt_timer&APIC_TIMER_MODE_MASK,a===APIC_TIMER_MODE_PERIODIC?(this.timer_current_count=this.timer_initial_count,0===(this.lvt_timer&IOAPIC_CONFIG_MASKED)&&this.deliver(this.lvt_timer&255,IOAPIC_DELIVERY_FIXED,!1)):a===APIC_TIMER_MODE_ONE_SHOT&&\n(this.timer_current_count=0,dbg_log(\"APIC timer one shot end\",LOG_APIC),0===(this.lvt_timer&IOAPIC_CONFIG_MASKED)&&this.deliver(this.lvt_timer&255,IOAPIC_DELIVERY_FIXED,!1)))))};APIC.prototype.route=function(a,b,c,d,e){this.deliver(a,b,c)};\nAPIC.prototype.deliver=function(a,b,c){APIC_LOG_VERBOSE&&dbg_log(\"Deliver \"+h(a,2)+\" mode=\"+b+\" level=\"+c,LOG_APIC);b!==IOAPIC_DELIVERY_INIT&&b!==IOAPIC_DELIVERY_NMI&&((16>a||255===a)&&dbg_assert(!1,\"TODO: Invalid vector\"),this.register_get_bit(this.irr,a)?dbg_log(\"Not delivered: irr already set, vector=\"+h(a,2),LOG_APIC):(this.register_set_bit(this.irr,a),c?this.register_set_bit(this.tmr,a):this.register_clear_bit(this.tmr,a),this.check_vector()))};\nAPIC.prototype.highest_irr=function(){var a=this.register_get_highest_bit(this.irr);dbg_assert(255!==a);dbg_assert(16<=a||-1===a);return a};APIC.prototype.highest_isr=function(){var a=this.register_get_highest_bit(this.isr);dbg_assert(255!==a);dbg_assert(16<=a||-1===a);return a};\nAPIC.prototype.check_vector=function(){var a=this.highest_irr();if(-1!==a){var b=this.highest_isr();b>=a?APIC_LOG_VERBOSE&&dbg_log(\"Higher isr, isr=\"+h(b)+\" irr=\"+h(a),LOG_APIC):(a&240)<=(this.tpr&240)?APIC_LOG_VERBOSE&&dbg_log(\"Higher tpr, tpr=\"+h(this.tpr&240)+\" irr=\"+h(a),LOG_APIC):this.cpu.handle_irqs()}};\nAPIC.prototype.acknowledge_irq=function(){var a=this.highest_irr();if(-1!==a){var b=this.highest_isr();b>=a?APIC_LOG_VERBOSE&&dbg_log(\"Higher isr, isr=\"+h(b)+\" irr=\"+h(a),LOG_APIC):(a&240)<=(this.tpr&240)?APIC_LOG_VERBOSE&&dbg_log(\"Higher tpr, tpr=\"+h(this.tpr&240)+\" irr=\"+h(a),LOG_APIC):(this.register_clear_bit(this.irr,a),this.register_set_bit(this.isr,a),APIC_LOG_VERBOSE&&dbg_log(\"Calling vector \"+h(a),LOG_APIC),this.cpu.pic_call_irq(a),this.check_vector())}};\nAPIC.prototype.get_state=function(){var a=[];a[0]=this.apic_id;a[1]=this.timer_divider;a[2]=this.timer_divider_shift;a[3]=this.timer_initial_count;a[4]=this.timer_current_count;a[5]=this.next_tick;a[6]=this.lvt_timer;a[7]=this.lvt_perf_counter;a[8]=this.lvt_int0;a[9]=this.lvt_int1;a[10]=this.lvt_error;a[11]=this.tpr;a[12]=this.icr0;a[13]=this.icr1;a[14]=this.irr;a[15]=this.isr;a[16]=this.tmr;a[17]=this.spurious_vector;a[18]=this.destination_format;a[19]=this.local_destination;a[20]=this.error;a[21]=\nthis.read_error;return a};\nAPIC.prototype.set_state=function(a){this.apic_id=a[0];this.timer_divider=a[1];this.timer_divider_shift=a[2];this.timer_initial_count=a[3];this.timer_current_count=a[4];this.next_tick=a[5];this.lvt_timer=a[6];this.lvt_perf_counter=a[7];this.lvt_int0=a[8];this.lvt_int1=a[9];this.lvt_error=a[10];this.tpr=a[11];this.icr0=a[12];this.icr1=a[13];this.irr=a[14];this.isr=a[15];this.tmr=a[16];this.spurious_vector=a[17];this.destination_format=a[18];this.local_destination=a[19];this.error=a[20];this.read_error=\na[21]};APIC.prototype.register_get_bit=function(a,b){dbg_assert(0<=b&&256>b);return a[b>>5]>>(b&31)&1};APIC.prototype.register_set_bit=function(a,b){dbg_assert(0<=b&&256>b);a[b>>5]|=1<<(b&31)};APIC.prototype.register_clear_bit=function(a,b){dbg_assert(0<=b&&256>b);a[b>>5]&=~(1<<(b&31))};APIC.prototype.register_get_highest_bit=function(a){for(var b=7;0<=b;b--){var c=a[b];if(c)return v86util.int_log2(c>>>0)|b<<5}return-1};var IOAPIC_ADDRESS=4273995776,IOREGSEL=0,IOWIN=16,IOAPIC_IRQ_COUNT=24,IOAPIC_ID=0,IOAPIC_CONFIG_TRIGGER_MODE_LEVEL=32768,IOAPIC_CONFIG_MASKED=65536,IOAPIC_CONFIG_DELIVS=4096,IOAPIC_CONFIG_REMOTE_IRR=16384,IOAPIC_CONFIG_READONLY_MASK=IOAPIC_CONFIG_REMOTE_IRR|IOAPIC_CONFIG_DELIVS|4294836224,IOAPIC_DELIVERY_FIXED=0,IOAPIC_DELIVERY_LOWEST_PRIORITY=1,IOAPIC_DELIVERY_NMI=4,IOAPIC_DELIVERY_INIT=5;\nfunction IOAPIC(a){var b=this;this.cpu=a;this.ioredtbl_config=new Int32Array(IOAPIC_IRQ_COUNT);this.ioredtbl_destination=new Int32Array(IOAPIC_IRQ_COUNT);for(var c=0;c<this.ioredtbl_config.length;c++)this.ioredtbl_config[c]=IOAPIC_CONFIG_MASKED;this.ioregsel=0;this.ioapic_id=IOAPIC_ID;this.irq_value=this.irr=0;dbg_assert(32<=MMAP_BLOCK_SIZE);a.io.mmap_register(IOAPIC_ADDRESS,MMAP_BLOCK_SIZE,function(a){dbg_assert(!1,\"unsupported read8 from ioapic: \"+h(a));return 0},function(a,b){dbg_assert(!1,\"unsupported write8 from ioapic: \"+\nh(a))},function(a){a=a-IOAPIC_ADDRESS|0;if(a===IOREGSEL)return b.ioregsel;if(a===IOWIN)return b.read(b.ioregsel);dbg_log(\"Unexpected IOAPIC register read: \"+h(a),LOG_APIC);dbg_assert(!1);return 0},function(a,e){a=a-IOAPIC_ADDRESS|0;a===IOREGSEL?b.ioregsel=e:a===IOWIN?b.write(b.ioregsel,e):(dbg_log(\"Unexpected IOAPIC register write: \"+h(a)+\" <- \"+h(e>>>0,8),LOG_APIC),dbg_assert(!1))})}\nIOAPIC.prototype.remote_eoi=function(a){for(var b=0;b<IOAPIC_IRQ_COUNT;b++){var c=this.ioredtbl_config[b];(c&255)===a&&c&IOAPIC_CONFIG_REMOTE_IRR&&(dbg_log(\"Clear remote IRR for irq=\"+h(b),LOG_APIC),this.ioredtbl_config[b]&=~IOAPIC_CONFIG_REMOTE_IRR,this.check_irq(b))}};\nIOAPIC.prototype.check_irq=function(a){var b=1<<a;if(0!==(this.irr&b)){var c=this.ioredtbl_config[a];if(0===(c&IOAPIC_CONFIG_MASKED)){var d=c>>8&7,e=c>>11&1,f=c&255,g=this.ioredtbl_destination[a]>>>24,k=(c&IOAPIC_CONFIG_TRIGGER_MODE_LEVEL)===IOAPIC_CONFIG_TRIGGER_MODE_LEVEL;if(0===(c&IOAPIC_CONFIG_TRIGGER_MODE_LEVEL))this.irr&=~b;else if(this.ioredtbl_config[a]|=IOAPIC_CONFIG_REMOTE_IRR,c&IOAPIC_CONFIG_REMOTE_IRR){dbg_log(\"No route: level interrupt and remote IRR still set\",LOG_APIC);return}d===IOAPIC_DELIVERY_FIXED||\nd===IOAPIC_DELIVERY_LOWEST_PRIORITY?this.cpu.devices.apic.route(f,d,k,g,e):dbg_assert(!1,\"TODO\");this.ioredtbl_config[a]&=~IOAPIC_CONFIG_DELIVS}}};IOAPIC.prototype.set_irq=function(a){if(a>=IOAPIC_IRQ_COUNT)dbg_assert(!1,\"Bad irq: \"+a,LOG_APIC);else{var b=1<<a;0===(this.irq_value&b)&&(APIC_LOG_VERBOSE&&dbg_log(\"apic set irq \"+a,LOG_APIC),this.irq_value|=b,(this.ioredtbl_config[a]&(IOAPIC_CONFIG_TRIGGER_MODE_LEVEL|IOAPIC_CONFIG_MASKED))!==IOAPIC_CONFIG_MASKED&&(this.irr|=b,this.check_irq(a)))}};\nIOAPIC.prototype.clear_irq=function(a){if(a>=IOAPIC_IRQ_COUNT)dbg_assert(!1,\"Bad irq: \"+a,LOG_APIC);else{var b=1<<a;(this.irq_value&b)===b&&(this.irq_value&=~b,this.ioredtbl_config[a]&IOAPIC_CONFIG_TRIGGER_MODE_LEVEL&&(this.irr&=~b))}};\nIOAPIC.prototype.read=function(a){if(0===a)return dbg_log(\"IOAPIC Read id\",LOG_APIC),this.ioapic_id<<24;if(1===a)return dbg_log(\"IOAPIC Read version\",LOG_APIC),17|IOAPIC_IRQ_COUNT-1<<16;if(2===a)return dbg_log(\"IOAPIC Read arbitration id\",LOG_APIC),this.ioapic_id<<24;if(16<=a&&a<16+2*IOAPIC_IRQ_COUNT){var b=a-16>>1;a&1?(a=this.ioredtbl_destination[b],dbg_log(\"IOAPIC Read destination irq=\"+h(b)+\" -> \"+h(a,8),LOG_APIC)):(a=this.ioredtbl_config[b],dbg_log(\"IOAPIC Read config irq=\"+h(b)+\" -> \"+h(a,8),\nLOG_APIC));return a}dbg_log(\"IOAPIC register read outside of range \"+h(a),LOG_APIC);dbg_assert(!1);return 0};\nIOAPIC.prototype.write=function(a,b){if(0===a)this.ioapic_id=b>>>24&15;else if(1===a||2===a)dbg_log(\"Invalid write: \"+a,LOG_APIC);else if(16<=a&&a<16+2*IOAPIC_IRQ_COUNT){var c=a-16>>1;if(a&1)this.ioredtbl_destination[c]=b&4278190080,dbg_log(\"Write destination \"+h(b>>>0,8)+\" irq=\"+h(c)+\" dest=\"+h(b>>>24,2),LOG_APIC);else{this.ioredtbl_config[c]=b&~IOAPIC_CONFIG_READONLY_MASK|this.ioredtbl_config[c]&IOAPIC_CONFIG_READONLY_MASK;a=b&255;var d=b>>8&7,e=b>>11&1,f=b>>15&1,g=b>>16&1;dbg_log(\"Write config \"+\nh(b>>>0,8)+\" irq=\"+h(c)+\" vector=\"+h(a,2)+\" deliverymode=\"+DELIVERY_MODES[d]+\" destmode=\"+DESTINATION_MODES[e]+\" is_level=\"+f+\" disabled=\"+g,LOG_APIC);this.check_irq(c)}}else dbg_log(\"IOAPIC register write outside of range \"+h(a)+\": \"+h(b>>>0,8),LOG_APIC),dbg_assert(!1)};IOAPIC.prototype.get_state=function(){var a=[];a[0]=this.ioredtbl_config;a[1]=this.ioredtbl_destination;a[2]=this.ioregsel;a[3]=this.ioapic_id;a[4]=this.irr;a[5]=this.irq_value;return a};\nIOAPIC.prototype.set_state=function(a){this.ioredtbl_config=a[0];this.ioredtbl_destination=a[1];this.ioregsel=a[2];this.ioapic_id=a[3];this.irr=a[4];this.irq_value=a[5]};var STATE_VERSION=5,STATE_MAGIC=-2039052682,STATE_INDEX_MAGIC=0,STATE_INDEX_VERSION=1,STATE_INDEX_TOTAL_LEN=2,STATE_INDEX_INFO_LEN=3,STATE_INFO_BLOCK_START=16;function StateLoadError(a){this.message=a}StateLoadError.prototype=Error();\nfunction save_object(a,b){if(\"object\"!==typeof a||null===a||a instanceof Array)return a;dbg_assert(a.constructor!==Object);if(a.BYTES_PER_ELEMENT){var c=new Uint8Array(a.buffer,a.byteOffset,a.length*a.BYTES_PER_ELEMENT);return{__state_type__:a.constructor.name,buffer_id:b.push(c)-1}}DEBUG&&!a.get_state&&console.log(\"Object without get_state: \",a);a=a.get_state();c=[];for(var d=0;d<a.length;d++){var e=a[d];dbg_assert(\"function\"!==typeof e);c[d]=save_object(e,b)}return c}\nfunction restore_object(a,b,c){if(\"object\"!==typeof b||null===b)return b;if(a instanceof Array)return b;var d=b.__state_type__;if(void 0===d){DEBUG&&void 0===a&&(console.log(\"Cannot restore (base doesn't exist)\",b),dbg_assert(!1));DEBUG&&!a.get_state&&console.log(\"No get_state:\",a);var e=a.get_state();dbg_assert(e.length===b.length,\"Cannot restore: Different number of properties\");for(d=0;d<b.length;d++)b[d]=restore_object(e[d],b[d],c);a.set_state(b);return a}e={Uint8Array:Uint8Array,Int8Array:Int8Array,\nUint16Array:Uint16Array,Int16Array:Int16Array,Uint32Array:Uint32Array,Int32Array:Int32Array,Float32Array:Float32Array,Float64Array:Float64Array}[d];dbg_assert(e,\"Unkown type: \"+d);b=c.infos[b.buffer_id];dbg_assert(a);dbg_assert(a.constructor===e);if(1048576<=b.length&&e===Uint8Array)return new Uint8Array(c.full,b.offset,b.length);a=c.full.slice(b.offset,b.offset+b.length);return new e(a)}\nCPU.prototype.save_state=function(){for(var a=[],b=save_object(this,a),c=[],d=0,e=0;e<a.length;e++){var f=a[e].byteLength;c[e]={offset:d,length:f};d+=f;d=d+3&-4}b=JSON.stringify({buffer_infos:c,state:b});e=STATE_INFO_BLOCK_START+2*b.length;e=e+3&-4;var g=e+d;d=new ArrayBuffer(g);var k=new Int32Array(d,0,STATE_INFO_BLOCK_START/4);f=new Uint16Array(d,STATE_INFO_BLOCK_START,b.length);var l=new Uint8Array(d,e);k[STATE_INDEX_MAGIC]=STATE_MAGIC;k[STATE_INDEX_VERSION]=STATE_VERSION;k[STATE_INDEX_TOTAL_LEN]=\ng;k[STATE_INDEX_INFO_LEN]=2*b.length;for(e=0;e<b.length;e++)f[e]=b.charCodeAt(e);for(e=0;e<a.length;e++)b=a[e],dbg_assert(b.constructor===Uint8Array),l.set(b,c[e].offset);return d};\nCPU.prototype.restore_state=function(a){var b=a.byteLength;if(b<STATE_INFO_BLOCK_START)throw new StateLoadError(\"Invalid length: \"+b);var c=new Int32Array(a,0,4);if(c[STATE_INDEX_MAGIC]!==STATE_MAGIC)throw new StateLoadError(\"Invalid header: \"+h(c[STATE_INDEX_MAGIC]>>>0));if(c[STATE_INDEX_VERSION]!==STATE_VERSION)throw new StateLoadError(\"Version mismatch: dump=\"+c[STATE_INDEX_VERSION]+\" we=\"+STATE_VERSION);if(c[STATE_INDEX_TOTAL_LEN]!==b)throw new StateLoadError(\"Length doesn't match header: real=\"+\nb+\" header=\"+c[STATE_INDEX_TOTAL_LEN]);c=c[STATE_INDEX_INFO_LEN];if(0>c||c+12>=b||c%2)throw new StateLoadError(\"Invalid info block length: \"+c);var d=c/2,e=new Uint16Array(a,STATE_INFO_BLOCK_START,d),f=\"\";for(b=0;b<d-8;)f+=String.fromCharCode(e[b++],e[b++],e[b++],e[b++],e[b++],e[b++],e[b++],e[b++]);for(;b<d;)f+=String.fromCharCode(e[b++]);b=JSON.parse(f);d=b.state;e=b.buffer_infos;c=STATE_INFO_BLOCK_START+c;c=c+3&-4;for(b=0;b<e.length;b++)e[b].offset+=c;restore_object(this,d,{full:a,infos:e})};var E8390_CMD=0,EN0_CLDALO=1,EN0_STARTPG=1,EN0_CLDAHI=2,EN0_STOPPG=2,EN0_BOUNDARY=3,EN0_TSR=4,EN0_TPSR=4,EN0_NCR=5,EN0_TCNTLO=5,EN0_FIFO=6,EN0_TCNTHI=6,EN0_ISR=7,EN0_CRDALO=8,EN0_RSARLO=8,EN0_CRDAHI=9,EN0_RSARHI=9,EN0_RCNTLO=10,EN0_RCNTHI=11,EN0_RSR=12,EN0_RXCR=12,EN0_TXCR=13,EN0_COUNTER0=13,EN0_DCFG=14,EN0_COUNTER1=14,EN0_IMR=15,EN0_COUNTER2=15,NE_DATAPORT=16,NE_RESET=31,ENISR_RX=1,ENISR_TX=2,ENISR_RX_ERR=4,ENISR_TX_ERR=8,ENISR_OVER=16,ENISR_COUNTERS=32,ENISR_RDC=64,ENISR_RESET=128,ENISR_ALL=63,\nENRSR_RXOK=1,START_PAGE=64,START_RX_PAGE=76,STOP_PAGE=128;\nfunction Ne2k(a,b){this.cpu=a;this.pci=a.devices.pci;this.bus=b;this.bus.register(\"net0-receive\",function(a){this.receive(a)},this);this.port=768;this.name=\"ne2k\";this.pci_space=[236,16,41,128,3,1,0,0,0,0,0,2,0,0,0,0,this.port&255|1,this.port>>8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,26,0,17,0,0,184,254,0,0,0,0,0,0,0,0,0,1,0,0];this.pci_id=40;this.pci_bars=[{size:32}];this.imr=this.isr=0;this.cr=1;this.tpsr=this.tcnt=this.rcnt=this.dcfg=0;this.memory=new Uint8Array(32768);this.txcr=\nthis.rxcr=0;this.tsr=1;b=[0,34,21,255*Math.random()|0,255*Math.random()|0,255*Math.random()|0];for(var c=0;6>c;c++)this.memory[c<<1]=this.memory[c<<1|1]=b[c];this.memory[14]=this.memory[15]=87;dbg_log(\"Mac: \"+h(b[0],2)+\":\"+h(b[1],2)+\":\"+h(b[2],2)+\":\"+h(b[3],2)+\":\"+h(b[4],2)+\":\"+h(b[5],2),LOG_NET);this.rsar=0;this.pstart=START_PAGE;this.pstop=STOP_PAGE;this.boundary=this.curpg=START_RX_PAGE;b=a.io;b.register_read(this.port|E8390_CMD,this,function(){dbg_log(\"Read cmd\",LOG_NET);return this.cr});b.register_write(this.port|\nE8390_CMD,this,function(a){this.cr=a&-5;dbg_log(\"Write command: \"+h(a,2)+\" newpg=\"+(this.cr>>6)+\" txcr=\"+h(this.txcr,2),LOG_NET);this.cr&1||(a|24&&0===this.rcnt&&this.do_interrupt(ENISR_RDC),a&4&&(a=this.tpsr<<8,a=this.memory.subarray(a,a+this.tcnt),this.bus.send(\"net0-send\",a),this.bus.send(\"eth-transmit-end\",[a.length]),this.do_interrupt(ENISR_TX),dbg_log(\"Command: Transfer. length=\"+h(a.byteLength),LOG_NET)))});b.register_read(this.port|EN0_COUNTER0,this,function(){dbg_log(\"Read counter0\",LOG_NET);\nreturn 0});b.register_read(this.port|EN0_COUNTER1,this,function(){dbg_log(\"Read counter1\",LOG_NET);return 0});b.register_read(this.port|EN0_COUNTER2,this,function(){dbg_log(\"Read counter2\",LOG_NET);return 0});b.register_read(this.port|NE_RESET,this,function(){0===this.get_page()?(dbg_log(\"Read reset\",LOG_NET),this.do_interrupt(ENISR_RESET)):dbg_log(\"Read pg1/1f\",LOG_NET);return 0});b.register_write(this.port|NE_RESET,this,function(a){0===this.get_page()?dbg_log(\"Write reset: \"+h(a,2),LOG_NET):dbg_log(\"Write pg1/1f: \"+\nh(a),LOG_NET)});b.register_write(this.port|EN0_STARTPG,this,function(a){0===this.get_page()?(dbg_log(\"start page: \"+h(a,2),LOG_NET),this.pstart=a):dbg_log(\"pg1/1: \"+h(a,2),LOG_NET)});b.register_write(this.port|EN0_STOPPG,this,function(a){0===this.get_page()?(dbg_log(\"stop page: \"+h(a,2),LOG_NET),this.pstop=a):dbg_log(\"pg1/2: \"+h(a,2),LOG_NET)});b.register_read(this.port|EN0_ISR,this,function(){if(0===this.get_page())return dbg_log(\"Read isr: \"+h(this.isr,2),LOG_NET),this.isr;dbg_log(\"Read curpg: \"+\nh(this.curpg,2),LOG_NET);return this.curpg});b.register_write(this.port|EN0_ISR,this,function(a){0===this.get_page()?(dbg_log(\"Write isr: \"+h(a,2),LOG_NET),this.isr&=~a,this.update_irq()):(dbg_log(\"Write curpg: \"+h(a,2),LOG_NET),this.curpg=a)});b.register_write(this.port|EN0_TXCR,this,function(a){0===this.get_page()?(this.txcr=a,dbg_log(\"Write tx config: \"+h(a,2),LOG_NET)):dbg_log(\"Write pg1/0x0d \"+h(a,2),LOG_NET)});b.register_write(this.port|EN0_DCFG,this,function(a){0===this.get_page()?(dbg_log(\"Write data configuration: \"+\nh(a,2),LOG_NET),this.dcfg=a):dbg_log(\"Write pg1/0x0e \"+h(a,2),LOG_NET)});b.register_write(this.port|EN0_RCNTLO,this,function(a){0===this.get_page()?(dbg_log(\"Write remote byte count low: \"+h(a,2),LOG_NET),this.rcnt=this.rcnt&65280|a&255):dbg_log(\"Write pg1/0x0a \"+h(a,2),LOG_NET)});b.register_write(this.port|EN0_RCNTHI,this,function(a){0===this.get_page()?(dbg_log(\"Write remote byte count high: \"+h(a,2),LOG_NET),this.rcnt=this.rcnt&255|a<<8&65280):dbg_log(\"Write pg1/0x0b \"+h(a,2),LOG_NET)});b.register_write(this.port|\nEN0_RSARLO,this,function(a){0===this.get_page()?(dbg_log(\"Write remote start address low: \"+h(a,2),LOG_NET),this.rsar=this.rsar&65280|a&255):dbg_log(\"Write pg1/0x08 \"+h(a,2),LOG_NET)});b.register_write(this.port|EN0_RSARHI,this,function(a){0===this.get_page()?(dbg_log(\"Write start addresse count high: \"+h(a,2),LOG_NET),this.rsar=this.rsar&255|a<<8&65280):dbg_log(\"Write pg1/0x09 \"+h(a,2),LOG_NET)});b.register_write(this.port|EN0_IMR,this,function(a){0===this.get_page()?(dbg_log(\"Write interrupt mask register: \"+\nh(a,2)+\" isr=\"+h(this.isr,2),LOG_NET),this.imr=a,this.update_irq()):dbg_log(\"Write pg1/0x0f \"+h(a,2),LOG_NET)});b.register_read(this.port|EN0_BOUNDARY,this,function(){if(0===this.get_page())return dbg_log(\"Read boundary: \"+h(this.boundary,2),LOG_NET),this.boundary;dbg_log(\"Read pg1/0x03\",LOG_NET);return 0});b.register_write(this.port|EN0_BOUNDARY,this,function(a){0===this.get_page()?(dbg_log(\"Write boundary: \"+h(a,2),LOG_NET),this.boundary=a):dbg_log(\"Write pg1/0x03 \"+h(a,2),LOG_NET)});b.register_read(this.port|\nEN0_TSR,this,function(){if(0===this.get_page())return this.tsr;dbg_log(\"Read pg1/0x04\",LOG_NET);return 0});b.register_write(this.port|EN0_TPSR,this,function(a){0===this.get_page()?(dbg_log(\"Write tpsr: \"+h(a,2),LOG_NET),this.tpsr=a):dbg_log(\"Write pg1/0x04 \"+h(a,2),LOG_NET)});b.register_write(this.port|EN0_TCNTLO,this,function(a){0===this.get_page()?(dbg_log(\"Write tcnt low: \"+h(a,2),LOG_NET),this.tcnt=this.tcnt&-256|a):dbg_log(\"Write pg1/0x05 \"+h(a,2),LOG_NET)});b.register_write(this.port|EN0_TCNTHI,\nthis,function(a){0===this.get_page()?(dbg_log(\"Write tcnt high: \"+h(a,2),LOG_NET),this.tcnt=this.tcnt&255|a<<8):dbg_log(\"Write pg1/0x06 \"+h(a,2),LOG_NET)});b.register_read(this.port|EN0_RSR,this,function(){if(0===this.get_page())return 9;dbg_log(\"Read pg1/0x0c\",LOG_NET);return 0});b.register_write(this.port|EN0_RXCR,this,function(a){dbg_log(\"RX configuration reg write: \"+h(a,2),LOG_NET);this.rxcr=a});b.register_read(this.port|NE_DATAPORT|0,this,this.data_port_read8,this.data_port_read16,this.data_port_read32);\nb.register_write(this.port|NE_DATAPORT|0,this,this.data_port_write16,this.data_port_write16,this.data_port_write32);a.devices.pci.register_device(this)}Ne2k.prototype.get_state=function(){var a=[];a[0]=this.isr;a[1]=this.imr;a[2]=this.cr;a[3]=this.dcfg;a[4]=this.rcnt;a[5]=this.tcnt;a[6]=this.tpsr;a[7]=this.rsar;a[8]=this.pstart;a[9]=this.curpg;a[10]=this.boundary;return a};\nNe2k.prototype.set_state=function(a){this.isr=a[0];this.imr=a[1];this.cr=a[2];this.dcfg=a[3];this.rcnt=a[4];this.tcnt=a[5];this.tpsr=a[6];this.rsar=a[7];this.pstart=a[8];this.curpg=a[9];this.boundary=a[10]};Ne2k.prototype.do_interrupt=function(a){dbg_log(\"Do interrupt \"+h(a,2),LOG_NET);this.isr|=a;this.update_irq()};Ne2k.prototype.update_irq=function(){this.imr&this.isr?this.pci.raise_irq(this.pci_id):this.pci.lower_irq(this.pci_id)};\nNe2k.prototype.data_port_write=function(a){dbg_log(\"Write data port: data=\"+h(a&255,2)+\" rsar=\"+h(this.rsar,4)+\" rcnt=\"+h(this.rcnt,4),LOG_NET);16<this.rsar&&this.rsar<START_PAGE<<8||(this.rcnt--,this.memory[this.rsar++]=a,this.rsar>=this.pstop<<8&&(this.rsar+=this.pstart-this.pstop<<8),0===this.rcnt&&this.do_interrupt(ENISR_RDC))};Ne2k.prototype.data_port_write16=function(a){this.data_port_write(a);this.dcfg&1&&this.data_port_write(a>>8)};\nNe2k.prototype.data_port_write32=function(a){this.data_port_write(a);this.data_port_write(a>>8);this.data_port_write(a>>16);this.data_port_write(a>>24)};Ne2k.prototype.data_port_read=function(){var a=this.memory[this.rsar++];dbg_log(\"Read data port: data=\"+h(a,2)+\" rsar=\"+h(this.rsar-1,4)+\" rcnt=\"+h(this.rcnt,4),LOG_NET);this.rcnt--;this.rsar>=this.pstop<<8&&(this.rsar+=this.pstart-this.pstop<<8);0===this.rcnt&&this.do_interrupt(ENISR_RDC);return a};\nNe2k.prototype.data_port_read8=function(){return this.data_port_read16()&255};Ne2k.prototype.data_port_read16=function(){return this.dcfg&1?this.data_port_read()|this.data_port_read()<<8:this.data_port_read()};Ne2k.prototype.data_port_read32=function(){return this.data_port_read()|this.data_port_read()<<8|this.data_port_read()<<16|this.data_port_read()<<24};\nNe2k.prototype.receive=function(a){if(!(this.cr&1)&&(this.bus.send(\"eth-receive-end\",[a.length]),this.rxcr&16||this.rxcr&4&&255===a[0]&&255===a[1]&&255===a[2]&&255===a[3]&&255===a[4]&&255===a[5]||!(this.rxcr&8&&1===(a[0]&1)||a[0]!==this.memory[0]||a[1]!==this.memory[2]||a[2]!==this.memory[4]||a[3]!==this.memory[6]||a[4]!==this.memory[8]||a[5]!==this.memory[10]))){var b=this.curpg<<8,c=Math.max(60,a.length)+4,d=b+4,e=this.curpg+1+(c>>8);if(b+c>this.memory.length){dbg_assert(60<=a.length);var f=this.memory.length-\nd;this.memory.set(a.subarray(0,f),d);this.memory.set(a.subarray(f),START_RX_PAGE);dbg_log(\"rcv cut=\"+h(f),LOG_NET)}else if(this.memory.set(a,d),60>a.length)for(a=a.length;60>a;a++)this.memory[d+a]=0;e>=this.pstop&&(e+=this.pstart-this.pstop);this.memory[b]=ENRSR_RXOK;this.memory[b+1]=e;this.memory[b+2]=c;this.memory[b+3]=c>>8;this.curpg=e;dbg_log(\"rcv offset=\"+h(b)+\" len=\"+h(c)+\" next=\"+h(e),LOG_NET);this.do_interrupt(ENISR_RX)}};Ne2k.prototype.get_page=function(){return this.cr&192};var DSP_COPYRIGHT=\"COPYRIGHT (C) CREATIVE TECHNOLOGY LTD, 1992.\",DSP_NO_COMMAND=0,DSP_BUFSIZE=64,DSP_DACSIZE=65536,SB_DMA_BUFSIZE=65536,SB_DMA_BLOCK_SAMPLES=1024,SB_DMA0=0,SB_DMA1=1,SB_DMA3=3,SB_DMA5=5,SB_DMA6=6,SB_DMA7=7,SB_DMA_CHANNEL_8BIT=SB_DMA1,SB_DMA_CHANNEL_16BIT=SB_DMA5,SB_IRQ2=2,SB_IRQ5=5,SB_IRQ7=7,SB_IRQ10=10,SB_IRQ=SB_IRQ5,SB_IRQ_8BIT=1,SB_IRQ_16BIT=2,SB_IRQ_MIDI=1,SB_IRQ_MPU=4,DSP_COMMAND_SIZES=new Uint8Array(256),DSP_COMMAND_HANDLERS=[],MIXER_READ_HANDLERS=[],MIXER_WRITE_HANDLERS=[],\nFM_HANDLERS=[];\nfunction SB16(a,b){this.cpu=a;this.bus=b;this.write_buffer=new ByteQueue(DSP_BUFSIZE);this.read_buffer=new ByteQueue(DSP_BUFSIZE);this.read_buffer_lastvalue=0;this.command=DSP_NO_COMMAND;this.mixer_current_address=this.command_size=0;this.mixer_registers=new Uint8Array(256);this.mixer_reset();this.dummy_speaker_enabled=!1;this.test_register=0;this.dsp_signed=this.dsp_16bit=this.dsp_stereo=this.dsp_highspeed=!1;this.dac_buffers=[new FloatQueue(DSP_DACSIZE),new FloatQueue(DSP_DACSIZE)];this.dma=a.devices.dma;\nthis.dma_channel=this.dma_irq=this.dma_bytes_block=this.dma_bytes_left=this.dma_bytes_count=this.dma_sample_count=0;this.dma_channel_8bit=SB_DMA_CHANNEL_8BIT;this.dma_channel_16bit=SB_DMA_CHANNEL_16BIT;this.dma_autoinit=!1;this.dma_buffer=new ArrayBuffer(SB_DMA_BUFSIZE);this.dma_buffer_int8=new Int8Array(this.dma_buffer);this.dma_buffer_uint8=new Uint8Array(this.dma_buffer);this.dma_buffer_int16=new Int16Array(this.dma_buffer);this.dma_buffer_uint16=new Uint16Array(this.dma_buffer);this.dma_syncbuffer=\nnew SyncBuffer(this.dma_buffer);this.dma_paused=this.dma_waiting_transfer=!1;this.sampling_rate=22050;b.send(\"dac-tell-sampling-rate\",this.sampling_rate);this.bytes_per_sample=1;this.e2_value=170;this.e2_count=0;this.asp_registers=new Uint8Array(256);this.mpu_read_buffer=new ByteQueue(DSP_BUFSIZE);this.fm_current_address1=this.fm_current_address0=this.mpu_read_buffer_lastvalue=0;this.fm_waveform_select_enable=!1;this.irq=SB_IRQ;this.irq_triggered=new Uint8Array(16);a.io.register_read_consecutive(544,\nthis,this.port2x0_read,this.port2x1_read,this.port2x2_read,this.port2x3_read);a.io.register_read_consecutive(904,this,this.port2x0_read,this.port2x1_read);a.io.register_read_consecutive(548,this,this.port2x4_read,this.port2x5_read);a.io.register_read(550,this,this.port2x6_read);a.io.register_read(551,this,this.port2x7_read);a.io.register_read(552,this,this.port2x8_read);a.io.register_read(553,this,this.port2x9_read);a.io.register_read(554,this,this.port2xA_read);a.io.register_read(555,this,this.port2xB_read);\na.io.register_read(556,this,this.port2xC_read);a.io.register_read(557,this,this.port2xD_read);a.io.register_read_consecutive(558,this,this.port2xE_read,this.port2xF_read);a.io.register_write_consecutive(544,this,this.port2x0_write,this.port2x1_write,this.port2x2_write,this.port2x3_write);a.io.register_write_consecutive(904,this,this.port2x0_write,this.port2x1_write);a.io.register_write_consecutive(548,this,this.port2x4_write,this.port2x5_write);a.io.register_write(550,this,this.port2x6_write);a.io.register_write(551,\nthis,this.port2x7_write);a.io.register_write_consecutive(552,this,this.port2x8_write,this.port2x9_write);a.io.register_write(554,this,this.port2xA_write);a.io.register_write(555,this,this.port2xB_write);a.io.register_write(556,this,this.port2xC_write);a.io.register_write(557,this,this.port2xD_write);a.io.register_write(558,this,this.port2xE_write);a.io.register_write(559,this,this.port2xF_write);a.io.register_read_consecutive(816,this,this.port3x0_read,this.port3x1_read);a.io.register_write_consecutive(816,\nthis,this.port3x0_write,this.port3x1_write);this.dma.on_unmask(this.dma_on_unmask,this);b.register(\"dac-request-data\",function(){this.dac_handle_request()},this);b.register(\"speaker-has-initialized\",function(){this.mixer_reset()},this);b.send(\"speaker-confirm-initialized\");this.dsp_reset()}\nSB16.prototype.dsp_reset=function(){this.write_buffer.clear();this.read_buffer.clear();this.command=DSP_NO_COMMAND;this.command_size=0;this.dummy_speaker_enabled=!1;this.test_register=0;this.dsp_signed=this.dsp_16bit=this.dsp_stereo=this.dsp_highspeed=!1;this.dac_buffers[0].clear();this.dac_buffers[1].clear();this.dma_channel=this.dma_irq=this.dma_bytes_block=this.dma_bytes_left=this.dma_bytes_count=this.dma_sample_count=0;this.dma_autoinit=!1;this.dma_buffer_uint8.fill(0);this.dma_paused=this.dma_waiting_transfer=\n!1;this.e2_value=170;this.e2_count=0;this.sampling_rate=22050;this.bytes_per_sample=1;this.lower_irq(SB_IRQ_8BIT);this.irq_triggered.fill(0);this.asp_registers.fill(0);this.asp_registers[5]=1;this.asp_registers[9]=248};\nSB16.prototype.get_state=function(){var a=[];a[2]=this.read_buffer_lastvalue;a[3]=this.command;a[4]=this.command_size;a[5]=this.mixer_current_address;a[6]=this.mixer_registers;a[7]=this.dummy_speaker_enabled;a[8]=this.test_register;a[9]=this.dsp_highspeed;a[10]=this.dsp_stereo;a[11]=this.dsp_16bit;a[12]=this.dsp_signed;a[15]=this.dma_sample_count;a[16]=this.dma_bytes_count;a[17]=this.dma_bytes_left;a[18]=this.dma_bytes_block;a[19]=this.dma_irq;a[20]=this.dma_channel;a[21]=this.dma_channel_8bit;a[22]=\nthis.dma_channel_16bit;a[23]=this.dma_autoinit;a[24]=this.dma_buffer_uint8;a[25]=this.dma_waiting_transfer;a[26]=this.dma_paused;a[27]=this.sampling_rate;a[28]=this.bytes_per_sample;a[29]=this.e2_value;a[30]=this.e2_count;a[31]=this.asp_registers;a[33]=this.mpu_read_buffer_last_value;a[34]=this.irq;a[35]=this.irq_triggered;return a};\nSB16.prototype.set_state=function(a){this.read_buffer_lastvalue=a[2];this.command=a[3];this.command_size=a[4];this.mixer_current_address=a[5];this.mixer_registers=a[6];this.mixer_full_update();this.dummy_speaker_enabled=a[7];this.test_register=a[8];this.dsp_highspeed=a[9];this.dsp_stereo=a[10];this.dsp_16bit=a[11];this.dsp_signed=a[12];this.dma_sample_count=a[15];this.dma_bytes_count=a[16];this.dma_bytes_left=a[17];this.dma_bytes_block=a[18];this.dma_irq=a[19];this.dma_channel=a[20];this.dma_channel_8bit=\na[21];this.dma_channel_16bit=a[22];this.dma_autoinit=a[23];this.dma_buffer_uint8=a[24];this.dma_waiting_transfer=a[25];this.dma_paused=a[26];this.sampling_rate=a[27];this.bytes_per_sample=a[28];this.e2_value=a[29];this.e2_count=a[30];this.asp_registers=a[31];this.mpu_read_buffer_last_value=a[33];this.irq=a[34];this.irq_triggered=a[35];this.dma_buffer=this.dma_buffer_uint8.buffer;this.dma_buffer_int8=new Int8Array(this.dma_buffer);this.dma_buffer_int16=new Int16Array(this.dma_buffer);this.dma_buffer_uint16=\nnew Uint16Array(this.dma_buffer);this.dma_syncbuffer=new SyncBuffer(this.dma_buffer);this.dma_paused?this.bus.send(\"dac-disable\"):this.bus.send(\"dac-enable\")};SB16.prototype.port2x0_read=function(){dbg_log(\"220 read: fm music status port (unimplemented)\",LOG_SB16);return 255};SB16.prototype.port2x1_read=function(){dbg_log(\"221 read: fm music data port (write only)\",LOG_SB16);return 255};\nSB16.prototype.port2x2_read=function(){dbg_log(\"222 read: advanced fm music status port (unimplemented)\",LOG_SB16);return 255};SB16.prototype.port2x3_read=function(){dbg_log(\"223 read: advanced music data port (write only)\",LOG_SB16);return 255};SB16.prototype.port2x4_read=function(){dbg_log(\"224 read: mixer address port\",LOG_SB16);return this.mixer_current_address};SB16.prototype.port2x5_read=function(){dbg_log(\"225 read: mixer data port\",LOG_SB16);return this.mixer_read(this.mixer_current_address)};\nSB16.prototype.port2x6_read=function(){dbg_log(\"226 read: (write only)\",LOG_SB16);return 255};SB16.prototype.port2x7_read=function(){dbg_log(\"227 read: undocumented\",LOG_SB16);return 255};SB16.prototype.port2x8_read=function(){dbg_log(\"228 read: fm music status port (unimplemented)\",LOG_SB16);return 255};SB16.prototype.port2x9_read=function(){dbg_log(\"229 read: fm music data port (write only)\",LOG_SB16);return 255};\nSB16.prototype.port2xA_read=function(){dbg_log(\"22A read: read data\",LOG_SB16);this.read_buffer.length&&(this.read_buffer_lastvalue=this.read_buffer.shift());dbg_log(\" <- \"+this.read_buffer_lastvalue+\" \"+h(this.read_buffer_lastvalue)+\" '\"+String.fromCharCode(this.read_buffer_lastvalue)+\"'\",LOG_SB16);return this.read_buffer_lastvalue};SB16.prototype.port2xB_read=function(){dbg_log(\"22B read: undocumented\",LOG_SB16);return 255};\nSB16.prototype.port2xC_read=function(){dbg_log(\"22C read: write-buffer status\",LOG_SB16);return 127};SB16.prototype.port2xD_read=function(){dbg_log(\"22D read: undocumented\",LOG_SB16);return 255};SB16.prototype.port2xE_read=function(){dbg_log(\"22E read: read-buffer status / irq 8bit ack.\",LOG_SB16);this.irq_triggered[SB_IRQ_8BIT]&&this.lower_irq(SB_IRQ_8BIT);return(this.read_buffer.length&&!this.dsp_highspeed)<<7|127};\nSB16.prototype.port2xF_read=function(){dbg_log(\"22F read: irq 16bit ack\",LOG_SB16);this.lower_irq(SB_IRQ_16BIT);return 0};SB16.prototype.port2x0_write=function(a){dbg_log(\"220 write: (unimplemented) fm register 0 address = \"+h(a),LOG_SB16);this.fm_current_address0=0};SB16.prototype.port2x1_write=function(a){dbg_log(\"221 write: (unimplemented) fm register 0 data = \"+h(a),LOG_SB16);var b=FM_HANDLERS[this.fm_current_address0];b||(b=this.fm_default_write);b.call(this,a,0,this.fm_current_address0)};\nSB16.prototype.port2x2_write=function(a){dbg_log(\"222 write: (unimplemented) fm register 1 address = \"+h(a),LOG_SB16);this.fm_current_address1=0};SB16.prototype.port2x3_write=function(a){dbg_log(\"223 write: (unimplemented) fm register 1 data =\"+h(a),LOG_SB16);var b=FM_HANDLERS[this.fm_current_address1];b||(b=this.fm_default_write);b.call(this,a,1,this.fm_current_address1)};SB16.prototype.port2x4_write=function(a){dbg_log(\"224 write: mixer address = \"+h(a),LOG_SB16);this.mixer_current_address=a};\nSB16.prototype.port2x5_write=function(a){dbg_log(\"225 write: mixer data = \"+h(a),LOG_SB16);this.mixer_write(this.mixer_current_address,a)};SB16.prototype.port2x6_write=function(a){dbg_log(\"226 write: reset = \"+h(a),LOG_SB16);this.dsp_highspeed?(dbg_log(\" -> exit highspeed\",LOG_SB16),this.dsp_highspeed=!1):a&&(dbg_log(\" -> reset\",LOG_SB16),this.dsp_reset());this.read_buffer.clear();this.read_buffer.push(170)};SB16.prototype.port2x7_write=function(a){dbg_log(\"227 write: undocumented\",LOG_SB16)};\nSB16.prototype.port2x8_write=function(a){dbg_log(\"228 write: fm music register port (unimplemented)\",LOG_SB16)};SB16.prototype.port2x9_write=function(a){dbg_log(\"229 write: fm music data port (unimplemented)\",LOG_SB16)};SB16.prototype.port2xA_write=function(a){dbg_log(\"22A write: dsp read data port (read only)\",LOG_SB16)};SB16.prototype.port2xB_write=function(a){dbg_log(\"22B write: undocumented\",LOG_SB16)};\nSB16.prototype.port2xC_write=function(a){dbg_log(\"22C write: write command/data\",LOG_SB16);this.command===DSP_NO_COMMAND?(dbg_log(\"22C write: command = \"+h(a),LOG_SB16),this.command=a,this.write_buffer.clear(),this.command_size=DSP_COMMAND_SIZES[a]):(dbg_log(\"22C write: data: \"+h(a),LOG_SB16),this.write_buffer.push(a));this.write_buffer.length>=this.command_size&&this.command_do()};SB16.prototype.port2xD_write=function(a){dbg_log(\"22D write: undocumented\",LOG_SB16)};\nSB16.prototype.port2xE_write=function(a){dbg_log(\"22E write: dsp read buffer status (read only)\",LOG_SB16)};SB16.prototype.port2xF_write=function(a){dbg_log(\"22F write: undocumented\",LOG_SB16)};SB16.prototype.port3x0_read=function(){dbg_log(\"330 read: mpu data\",LOG_SB16);this.mpu_read_buffer.length&&(this.mpu_read_buffer_lastvalue=this.mpu_read_buffer.shift());dbg_log(\" <- \"+h(this.mpu_read_buffer_lastvalue),LOG_SB16);return this.mpu_read_buffer_lastvalue};\nSB16.prototype.port3x0_write=function(a){dbg_log(\"330 write: mpu data (unimplemented) : \"+h(a),LOG_SB16)};SB16.prototype.port3x1_read=function(){dbg_log(\"331 read: mpu status\",LOG_SB16);return 0|128*!this.mpu_read_buffer.length};SB16.prototype.port3x1_write=function(a){dbg_log(\"331 write: mpu command: \"+h(a),LOG_SB16);255==a&&(this.mpu_read_buffer.clear(),this.mpu_read_buffer.push(254))};\nSB16.prototype.command_do=function(){var a=DSP_COMMAND_HANDLERS[this.command];a||(a=this.dsp_default_handler);a.call(this);this.command=DSP_NO_COMMAND;this.command_size=0;this.write_buffer.clear()};SB16.prototype.dsp_default_handler=function(){dbg_log(\"Unhandled command: \"+h(this.command),LOG_SB16)};function register_dsp_command(a,b,c){c||(c=SB16.prototype.dsp_default_handler);for(var d=0;d<a.length;d++)DSP_COMMAND_SIZES[a[d]]=b,DSP_COMMAND_HANDLERS[a[d]]=c}\nfunction any_first_digit(a){for(var b=[],c=0;16>c;c++)b.push(a+c);return b}register_dsp_command([14],2,function(){this.asp_registers[this.write_buffer.shift()]=this.write_buffer.shift()});register_dsp_command([15],1,function(){this.read_buffer.clear();this.read_buffer.push(this.asp_registers[this.write_buffer.shift()])});register_dsp_command([16],1,function(){var a=audio_normalize(this.write_buffer.shift(),127.5,-1);this.dac_buffers[0].push(a);this.dac_buffers[1].push(a);this.bus.send(\"dac-enable\")});\nregister_dsp_command([20,21],2,function(){this.dma_irq=SB_IRQ_8BIT;this.dma_channel=this.dma_channel_8bit;this.dsp_highspeed=this.dsp_16bit=this.dsp_signed=this.dma_autoinit=!1;this.dma_transfer_size_set();this.dma_transfer_start()});register_dsp_command([22],2);register_dsp_command([23],2);register_dsp_command([28],0,function(){this.dma_irq=SB_IRQ_8BIT;this.dma_channel=this.dma_channel_8bit;this.dma_autoinit=!0;this.dsp_highspeed=this.dsp_16bit=this.dsp_signed=!1;this.dma_transfer_start()});\nregister_dsp_command([31],0);register_dsp_command([32],0,function(){this.read_buffer.clear();this.read_buffer.push(127)});register_dsp_command([36],2);register_dsp_command([44],0);register_dsp_command([48],0);register_dsp_command([49],0);register_dsp_command([52],0);register_dsp_command([53],0);register_dsp_command([54],0);register_dsp_command([55],0);register_dsp_command([56],0);register_dsp_command([64],1,function(){this.sampling_rate_change(1E6/(256-this.write_buffer.shift())/this.get_channel_count())});\nregister_dsp_command([65,66],2,function(){this.sampling_rate_change(this.write_buffer.shift()<<8|this.write_buffer.shift())});register_dsp_command([72],2,function(){this.dma_transfer_size_set()});register_dsp_command([116],2);register_dsp_command([117],2);register_dsp_command([118],2);register_dsp_command([119],2);register_dsp_command([125],0);register_dsp_command([127],0);register_dsp_command([128],2);\nregister_dsp_command([144],0,function(){this.dma_irq=SB_IRQ_8BIT;this.dma_channel=this.dma_channel_8bit;this.dma_autoinit=!0;this.dsp_signed=!1;this.dsp_highspeed=!0;this.dsp_16bit=!1;this.dma_transfer_start()});register_dsp_command([145],0);register_dsp_command([152],0);register_dsp_command([153],0);register_dsp_command([160],0);register_dsp_command([168],0);\nregister_dsp_command(any_first_digit(176),3,function(){if(this.command&8)this.dsp_default_handler();else{var a=this.write_buffer.shift();this.dma_irq=SB_IRQ_16BIT;this.dma_channel=this.dma_channel_16bit;this.dma_autoinit=!!(this.command&4);this.dsp_signed=!!(a&16);this.dsp_stereo=!!(a&32);this.dsp_16bit=!0;this.dma_transfer_size_set();this.dma_transfer_start()}});\nregister_dsp_command(any_first_digit(192),3,function(){if(this.command&8)this.dsp_default_handler();else{var a=this.write_buffer.shift();this.dma_irq=SB_IRQ_8BIT;this.dma_channel=this.dma_channel_8bit;this.dma_autoinit=!!(this.command&4);this.dsp_signed=!!(a&16);this.dsp_stereo=!!(a&32);this.dsp_16bit=!1;this.dma_transfer_size_set();this.dma_transfer_start()}});register_dsp_command([208],0,function(){this.dma_paused=!0;this.bus.send(\"dac-disable\")});\nregister_dsp_command([209],0,function(){this.dummy_speaker_enabled=!0});register_dsp_command([211],0,function(){this.dummy_speaker_enabled=!1});register_dsp_command([212],0,function(){this.dma_paused=!1;this.bus.send(\"dac-enable\")});register_dsp_command([213],0,function(){this.dma_paused=!0;this.bus.send(\"dac-disable\")});register_dsp_command([214],0,function(){this.dma_paused=!1;this.bus.send(\"dac-enable\")});\nregister_dsp_command([216],0,function(){this.read_buffer.clear();this.read_buffer.push(255*this.dummy_speaker_enabled)});register_dsp_command([217,218],0,function(){this.dma_autoinit=!1});register_dsp_command([224],1,function(){this.read_buffer.clear();this.read_buffer.push(~this.write_buffer.shift())});register_dsp_command([225],0,function(){this.read_buffer.clear();this.read_buffer.push(4);this.read_buffer.push(5)});register_dsp_command([226],1);\nregister_dsp_command([227],0,function(){this.read_buffer.clear();for(var a=0;a<DSP_COPYRIGHT.length;a++)this.read_buffer.push(DSP_COPYRIGHT.charCodeAt(a));this.read_buffer.push(0)});register_dsp_command([228],1,function(){this.test_register=this.write_buffer.shift()});register_dsp_command([232],0,function(){this.read_buffer.clear();this.read_buffer.push(this.test_register)});register_dsp_command([242,243],0,function(){this.raise_irq()});var SB_F9=new Uint8Array(256);SB_F9[14]=255;SB_F9[15]=7;\nSB_F9[55]=56;register_dsp_command([249],1,function(){var a=this.write_buffer.shift();dbg_log(\"dsp 0xf9: unknown function. input: \"+a,LOG_SB16);this.read_buffer.clear();this.read_buffer.push(SB_F9[a])});SB16.prototype.mixer_read=function(a){var b=MIXER_READ_HANDLERS[a];b?b=b.call(this):(b=this.mixer_registers[a],dbg_log(\"unhandled mixer register read. addr:\"+h(a)+\" data:\"+h(b),LOG_SB16));return b};\nSB16.prototype.mixer_write=function(a,b){var c=MIXER_WRITE_HANDLERS[a];c?c.call(this,b):dbg_log(\"unhandled mixer register write. addr:\"+h(a)+\" data:\"+h(b),LOG_SB16)};SB16.prototype.mixer_default_read=function(){dbg_log(\"mixer register read. addr:\"+h(this.mixer_current_address),LOG_SB16);return this.mixer_registers[this.mixer_current_address]};\nSB16.prototype.mixer_default_write=function(a){dbg_log(\"mixer register write. addr:\"+h(this.mixer_current_address)+\" data:\"+h(a),LOG_SB16);this.mixer_registers[this.mixer_current_address]=a};\nSB16.prototype.mixer_reset=function(){this.mixer_registers[4]=204;this.mixer_registers[34]=204;this.mixer_registers[38]=204;this.mixer_registers[40]=0;this.mixer_registers[46]=0;this.mixer_registers[10]=0;this.mixer_registers[48]=192;this.mixer_registers[49]=192;this.mixer_registers[50]=192;this.mixer_registers[51]=192;this.mixer_registers[52]=192;this.mixer_registers[53]=192;this.mixer_registers[54]=0;this.mixer_registers[55]=0;this.mixer_registers[56]=0;this.mixer_registers[57]=0;this.mixer_registers[59]=\n0;this.mixer_registers[60]=31;this.mixer_registers[61]=21;this.mixer_registers[62]=11;this.mixer_registers[63]=0;this.mixer_registers[64]=0;this.mixer_registers[65]=0;this.mixer_registers[66]=0;this.mixer_registers[67]=0;this.mixer_registers[68]=128;this.mixer_registers[69]=128;this.mixer_registers[70]=128;this.mixer_registers[71]=128;this.mixer_full_update()};SB16.prototype.mixer_full_update=function(){for(var a=1;a<this.mixer_registers.length;a++)this.mixer_write(a,this.mixer_registers[a])};\nfunction register_mixer_read(a,b){b||(b=SB16.prototype.mixer_default_read);MIXER_READ_HANDLERS[a]=b}function register_mixer_write(a,b){b||(b=SB16.prototype.mixer_default_write);MIXER_WRITE_HANDLERS[a]=b}\nfunction register_mixer_legacy(a,b,c){MIXER_READ_HANDLERS[a]=function(){return this.mixer_registers[b]&240|this.mixer_registers[c]>>>4};MIXER_WRITE_HANDLERS[a]=function(d){this.mixer_registers[a]=d;var e=d<<4&240|this.mixer_registers[c]&15;this.mixer_write(b,d&240|this.mixer_registers[b]&15);this.mixer_write(c,e)}}\nfunction register_mixer_volume(a,b,c){MIXER_READ_HANDLERS[a]=SB16.prototype.mixer_default_read;MIXER_WRITE_HANDLERS[a]=function(d){this.mixer_registers[a]=d;this.bus.send(\"mixer-volume\",[b,c,(d>>>2)-62])}}register_mixer_read(0,function(){this.mixer_reset();return 0});register_mixer_write(0);register_mixer_legacy(4,50,51);register_mixer_legacy(34,48,49);register_mixer_legacy(38,52,53);register_mixer_legacy(40,54,55);register_mixer_legacy(46,56,57);register_mixer_volume(48,MIXER_SRC_MASTER,MIXER_CHANNEL_LEFT);\nregister_mixer_volume(49,MIXER_SRC_MASTER,MIXER_CHANNEL_RIGHT);register_mixer_volume(50,MIXER_SRC_DAC,MIXER_CHANNEL_LEFT);register_mixer_volume(51,MIXER_SRC_DAC,MIXER_CHANNEL_RIGHT);register_mixer_read(59);register_mixer_write(59,function(a){this.mixer_registers[59]=a;this.bus.send(\"mixer-volume\",[MIXER_SRC_PCSPEAKER,MIXER_CHANNEL_BOTH,6*(a>>>6)-18])});register_mixer_read(65);register_mixer_write(65,function(a){this.mixer_registers[65]=a;this.bus.send(\"mixer-gain-left\",6*(a>>>6))});register_mixer_read(66);\nregister_mixer_write(66,function(a){this.mixer_registers[66]=a;this.bus.send(\"mixer-gain-right\",6*(a>>>6))});register_mixer_read(68);register_mixer_write(68,function(a){this.mixer_registers[68]=a;a>>>=3;this.bus.send(\"mixer-treble-left\",a-(16>a?14:16))});register_mixer_read(69);register_mixer_write(69,function(a){this.mixer_registers[69]=a;a>>>=3;this.bus.send(\"mixer-treble-right\",a-(16>a?14:16))});register_mixer_read(70);\nregister_mixer_write(70,function(a){this.mixer_registers[70]=a;a>>>=3;this.bus.send(\"mixer-bass-right\",a-(16>a?14:16))});register_mixer_read(71);register_mixer_write(71,function(a){this.mixer_registers[71]=a;a>>>=3;this.bus.send(\"mixer-bass-right\",a-(16>a?14:16))});register_mixer_read(128,function(){switch(this.irq){case SB_IRQ2:return 1;case SB_IRQ5:return 2;case SB_IRQ7:return 4;case SB_IRQ10:return 8;default:return 0}});\nregister_mixer_write(128,function(a){a&1&&(this.irq=SB_IRQ2);a&2&&(this.irq=SB_IRQ5);a&4&&(this.irq=SB_IRQ7);a&8&&(this.irq=SB_IRQ10)});register_mixer_read(129,function(){var a=0;switch(this.dma_channel_8bit){case SB_DMA0:a|=1;break;case SB_DMA1:a|=2;break;case SB_DMA3:a|=8}switch(this.dma_channel_16bit){case SB_DMA5:a|=32;break;case SB_DMA6:a|=64;break;case SB_DMA7:a|=128}return a});\nregister_mixer_write(129,function(a){a&1&&(this.dma_channel_8bit=SB_DMA0);a&2&&(this.dma_channel_8bit=SB_DMA1);a&8&&(this.dma_channel_8bit=SB_DMA3);a&32&&(this.dma_channel_16bit=SB_DMA5);a&64&&(this.dma_channel_16bit=SB_DMA6);a&128&&(this.dma_channel_16bit=SB_DMA7)});register_mixer_read(130,function(){for(var a=32,b=0;16>b;b++)a|=b*this.irq_triggered[b];return a});SB16.prototype.fm_default_write=function(a,b,c){dbg_log(\"unhandled fm register write. addr:\"+b+\"|\"+h(c)+\" data:\"+h(a),LOG_SB16)};\nfunction register_fm_write(a,b){b||(b=SB16.prototype.fm_default_write);for(var c=0;c<a.length;c++)FM_HANDLERS[a[c]]=b}function between(a,b){for(var c=[];a<=b;a++)c.push(a);return c}var SB_FM_OPERATORS_BY_OFFSET=new Uint8Array(32);SB_FM_OPERATORS_BY_OFFSET[0]=0;SB_FM_OPERATORS_BY_OFFSET[1]=1;SB_FM_OPERATORS_BY_OFFSET[2]=2;SB_FM_OPERATORS_BY_OFFSET[3]=3;SB_FM_OPERATORS_BY_OFFSET[4]=4;SB_FM_OPERATORS_BY_OFFSET[5]=5;SB_FM_OPERATORS_BY_OFFSET[8]=6;SB_FM_OPERATORS_BY_OFFSET[9]=7;\nSB_FM_OPERATORS_BY_OFFSET[10]=8;SB_FM_OPERATORS_BY_OFFSET[11]=9;SB_FM_OPERATORS_BY_OFFSET[12]=10;SB_FM_OPERATORS_BY_OFFSET[13]=11;SB_FM_OPERATORS_BY_OFFSET[16]=12;SB_FM_OPERATORS_BY_OFFSET[17]=13;SB_FM_OPERATORS_BY_OFFSET[18]=14;SB_FM_OPERATORS_BY_OFFSET[19]=15;SB_FM_OPERATORS_BY_OFFSET[20]=16;SB_FM_OPERATORS_BY_OFFSET[21]=17;function get_fm_operator(a,b){return 18*a+SB_FM_OPERATORS_BY_OFFSET[b]}register_fm_write([1],function(a,b,c){this.fm_waveform_select_enable[b]=a&1;this.fm_update_waveforms()});\nregister_fm_write([2]);register_fm_write([3]);register_fm_write([4],function(a,b,c){});register_fm_write([5],function(a,b,c){0===b&&this.fm_default_write(a,b,c)});register_fm_write([8],function(a,b,c){});register_fm_write(between(32,53),function(a,b,c){get_fm_operator(b,c-32)});register_fm_write(between(64,85),function(a,b,c){get_fm_operator(b,c-64)});register_fm_write(between(96,117),function(a,b,c){get_fm_operator(b,c-96)});\nregister_fm_write(between(128,149),function(a,b,c){get_fm_operator(b,c-128)});register_fm_write(between(160,168),function(a,b,c){});register_fm_write(between(176,184),function(a,b,c){});register_fm_write([189],function(a,b,c){});register_fm_write(between(192,200),function(a,b,c){});register_fm_write(between(224,245),function(a,b,c){get_fm_operator(b,c-224)});SB16.prototype.fm_update_waveforms=function(){};\nSB16.prototype.sampling_rate_change=function(a){this.sampling_rate=a;this.bus.send(\"dac-tell-sampling-rate\",a)};SB16.prototype.get_channel_count=function(){return this.dsp_stereo?2:1};SB16.prototype.dma_transfer_size_set=function(){this.dma_sample_count=1+(this.write_buffer.shift()<<0)+(this.write_buffer.shift()<<8)};\nSB16.prototype.dma_transfer_start=function(){dbg_log(\"begin dma transfer\",LOG_SB16);this.bytes_per_sample=1;this.dsp_16bit&&(this.bytes_per_sample*=2);this.dma_bytes_count=this.dma_sample_count*this.bytes_per_sample;this.dma_bytes_block=SB_DMA_BLOCK_SAMPLES*this.bytes_per_sample;this.dma_bytes_block=Math.min(Math.max(this.dma_bytes_count>>2&-4,32),this.dma_bytes_block);this.dma_waiting_transfer=!0;this.dma.channel_mask[this.dma_channel]||this.dma_on_unmask(this.dma_channel)};\nSB16.prototype.dma_on_unmask=function(a){a===this.dma_channel&&this.dma_waiting_transfer&&(this.dma_waiting_transfer=!1,this.dma_bytes_left=this.dma_bytes_count,this.dma_paused=!1,this.bus.send(\"dac-enable\"))};\nSB16.prototype.dma_transfer_next=function(){var a=this;dbg_log(\"dma transfering next block\",LOG_SB16);var b=Math.min(this.dma_bytes_left,this.dma_bytes_block),c=Math.floor(b/this.bytes_per_sample);this.dma.do_write(this.dma_syncbuffer,0,b,this.dma_channel,function(d){dbg_log(\"dma block transfer \"+(d?\"unsuccessful\":\"successful\"),LOG_SB16);d||(a.dma_to_dac(c),a.dma_bytes_left-=b,a.dma_bytes_left||(a.raise_irq(a.dma_irq),a.dma_autoinit&&(a.dma_bytes_left=a.dma_bytes_count)))})};\nSB16.prototype.dma_to_dac=function(a){var b=this.dsp_16bit?32767.5:127.5,c=this.dsp_signed?0:-1,d=this.dsp_stereo?1:2;var e=this.dsp_16bit?this.dsp_signed?this.dma_buffer_int16:this.dma_buffer_uint16:this.dsp_signed?this.dma_buffer_int8:this.dma_buffer_uint8;for(var f=0,g=0;g<a;g++)for(var k=audio_normalize(e[g],b,c),l=0;l<d;l++)this.dac_buffers[f].push(k),f^=1;this.dac_send()};SB16.prototype.dac_handle_request=function(){!this.dma_bytes_left||this.dma_paused?this.dac_send():this.dma_transfer_next()};\nSB16.prototype.dac_send=function(){if(this.dac_buffers[0].length){var a=this.dac_buffers[0].shift_block(this.dac_buffers[0].length),b=this.dac_buffers[1].shift_block(this.dac_buffers[1].length);this.bus.send(\"dac-send-data\",[a,b],[a.buffer,b.buffer])}};SB16.prototype.raise_irq=function(a){dbg_log(\"raise irq\",LOG_SB16);this.irq_triggered[a]=1;this.cpu.device_raise_irq(this.irq)};SB16.prototype.lower_irq=function(a){dbg_log(\"lower irq\",LOG_SB16);this.irq_triggered[a]=0;this.cpu.device_lower_irq(this.irq)};\nfunction audio_normalize(a,b,c){return audio_clip(a/b+c,-1,1)}function audio_clip(a,b,c){return(a<b)*b+(a>c)*c+(b<=a&&a<=c)*a};function VirtIO(a,b,c){this.pci_space=[244,26,9,16,7,5,16,0,0,0,2,0,0,0,0,0,1,168,0,0,0,16,191,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,26,9,0,0,0,0,0,64,0,0,0,0,0,0,0,0,1,0,0];this.pci_id=48;this.pci_bars=[{size:256}];this.name=\"virtio\";var d=a.io;d.register_read(43008,this,function(){dbg_log(\"Read device features\",LOG_VIRTIO);return 1},void 0,function(){dbg_log(\"Read device features\",LOG_VIRTIO);return 1});d.register_write(43012,this,void 0,void 0,function(a){dbg_log(\"Guest feature selection: \"+\nh(a,8),LOG_VIRTIO)});d.register_write(43022,this,void 0,function(a){dbg_log(\"Queue select: \"+h(a,4),LOG_VIRTIO);this.queue_select=a},void 0);d.register_read(43020,this,void 0,function(){dbg_log(\"Read queue size\",LOG_VIRTIO);return this.queue_size},void 0);d.register_read(43016,this,void 0,void 0,function(){dbg_log(\"Read queue address\",LOG_VIRTIO);return 0===this.queue_select?this.queue_address:0});d.register_write(43016,this,void 0,void 0,function(a){dbg_log(\"Write queue address: \"+h(a,8),LOG_VIRTIO);\nthis.queue_address=a});d.register_write(43026,this,function(a){dbg_log(\"Write device status: \"+h(a,2),LOG_VIRTIO);0===a?(dbg_log(\"Reset\",LOG_VIRTIO),this.reset()):a&128?dbg_log(\"Warning: Device status failed\",LOG_VIRTIO):dbg_log((a&1?\"ACKNOWLEDGE \":\"\")+(a&2?\"DRIVER \":\"\")+(a&4?\"DRIVER_OK\":\"\"),LOG_VIRTIO);this.device_status=a});d.register_read(43026,this,function(){dbg_log(\"Read device status: \"+h(this.device_status),LOG_VIRTIO);return this.device_status});d.register_read(43027,this,function(){dbg_log(\"Read isr\",\nLOG_VIRTIO);var a=this.isr;this.isr=0;this.pci.lower_irq(this.pci_id);return a});d.register_write(43024,this,void 0,function(a){dbg_log(\"Write queue notify: \"+h(a,4),LOG_VIRTIO);dbg_assert(0===a);var b=(this.queue_address<<12)+16*this.queue_size;a=b+4;b=this.cpu.read16(b+2);dbg_log(\"idx=\"+h(b,4),LOG_VIRTIO);var e=this.queue_size-1;for(b&=e;this.last_idx!==b;){var c=this.cpu.read16(a+2*this.last_idx);this.handle_descriptor(c);this.last_idx=this.last_idx+1&e}});this.cpu=a;this.pci=a.devices.pci;this.bus=\nb;this.last_idx=this.isr=this.device_status=this.queue_select=0;this.queue_size=32;for(var e=this.queue_address=0;128>e;e++)d.register_read(43028+e,this,function(a){dbg_log(\"Read device \"+h(a),LOG_VIRTIO);return a<this.device.configspace.length?this.device.configspace[a]:0}.bind(this,e),void 0,void 0),d.register_write(43028+e,this,function(a,b){dbg_log(\"Write device \"+h(a)+\": \"+h(b,2),LOG_VIRTIO)}.bind(this,e),void 0,void 0);this.device=new Virtio9p(c,b);this.device.SendReply=this.device_reply.bind(this);\na.devices.pci.register_device(this)}VirtIO.prototype.get_state=function(){var a=[0];a[1]=this.queue_select;a[2]=this.device_status;a[3]=this.isr;a[4]=this.last_idx;a[5]=this.queue_size;a[6]=this.queue_address;a[7]=this.device;return a};VirtIO.prototype.set_state=function(a){this.queue_select=a[1];this.device_status=a[2];this.isr=a[3];this.last_idx=a[4];this.queue_size=a[5];this.queue_address=a[6];this.device=a[7];this.device.SendReply=this.device_reply.bind(this)};\nVirtIO.prototype.reset=function(){this.last_idx=this.isr=this.device_status=this.queue_select=0;this.queue_size=32;this.queue_address=0};\nVirtIO.prototype.handle_descriptor=function(a){var b=a,c=this.queue_address<<12,d=0,e=[];do{var f=c+16*b,g=this.cpu.read16(f+12);if(g&VRING_DESC_F_WRITE)break;g&VRING_DESC_F_INDIRECT&&dbg_assert(!1,\"unsupported\");var k=this.cpu.read32s(f),l=this.cpu.read32s(f+4),m=this.cpu.read32s(f+8)>>>0;e.push({addr_low:k,addr_high:l,len:m});dbg_log(\"descriptor: addr=\"+h(l,8)+\":\"+h(k,8)+\" len=\"+h(m,8)+\" flags=\"+h(g,4)+\" next=\"+h(b,4),LOG_VIRTIO);if(g&VRING_DESC_F_NEXT)b=this.cpu.read16(f+14),dbg_assert(b<this.queue_size);\nelse{b=-1;break}}while(1);var p=-1,n=0;this.device.ReceiveRequest({start:a,next:b},function(){if(n>=p){if(d===e.length)return dbg_log(\"Read more data than descriptor has\",LOG_VIRTIO),0;var a=e[d++];k=a.addr_low;p=a.len;n=0}return this.cpu.read8(k+n++)}.bind(this))};\nVirtIO.prototype.device_reply=function(a,b){if(-1===b.next)dbg_log(\"Reply to invalid index\",LOG_VIRTIO);else{var c=this.queue_size-1;a=this.device.replybuffersize;var d=b.next,e=this.queue_address<<12,f=0,g=[];do{var k=e+16*d,l=this.cpu.read16(k+12);if(0===(l&VRING_DESC_F_WRITE)){dbg_log(\"Bug: Readonly ring after writeonly ring\",LOG_VIRTIO);break}var m=this.cpu.read32s(k),p=this.cpu.read32s(k+4),n=this.cpu.read32s(k+8)>>>0;g.push({addr_low:m,addr_high:p,len:n});dbg_log(\"descriptor: addr=\"+h(p,8)+\n\":\"+h(m,8)+\" len=\"+h(n,8)+\" flags=\"+h(l,4)+\" next=\"+h(d,4),LOG_VIRTIO);if(l&VRING_DESC_F_NEXT)d=this.cpu.read16(k+14),dbg_assert(d<this.queue_size);else break}while(1);e=-1;for(l=k=0;l<a;l++){d=this.device.replybuffer[l];if(k>=e){if(f===g.length)return dbg_log(\"Write more data than descriptor has\",LOG_VIRTIO),0;e=g[f++];m=e.addr_low;e=e.len;k=0}this.cpu.write8(m+k++,d)}m=(this.queue_address<<12)+16*this.queue_size+4+2*this.queue_size;m=m+4095&-4096;l=this.cpu.read16(m);f=this.cpu.read16(m+2);this.cpu.write16(m+\n2,f+1);dbg_log(\"used descriptor: addr=\"+h(m,8)+\" flags=\"+h(l,4)+\" idx=\"+h(f,4),LOG_VIRTIO);c=m+4+8*(f&c);this.cpu.write32(c,b.start);this.cpu.write32(c+4,a);this.isr|=1;this.pci.raise_irq(this.pci_id)}};var Bus={};function BusConnector(){this.listeners={};this.pair=void 0}BusConnector.prototype.register=function(a,b,c){var d=this.listeners[a];void 0===d&&(d=this.listeners[a]=[]);d.push({fn:b,this_value:c})};BusConnector.prototype.unregister=function(a,b){var c=this.listeners[a];void 0!==c&&(this.listeners[a]=c.filter(function(a){return a.fn!==b}))};\nBusConnector.prototype.send=function(a,b,c){if(this.pair&&(a=this.pair.listeners[a],void 0!==a))for(c=0;c<a.length;c++){var d=a[c];d.fn.call(d.this_value,b)}};BusConnector.prototype.send_async=function(a,b){dbg_assert(1===arguments.length||2===arguments.length);setTimeout(this.send.bind(this,a,b),0)};Bus.create=function(){var a=new BusConnector,b=new BusConnector;a.pair=b;b.pair=a;return[a,b]};var log_data=[];function do_the_log(a){LOG_TO_FILE?log_data.push(a,\"\\n\"):console.log(a)}\nvar dbg_log=function(){if(!DEBUG)return function(){};var a=LOG_NAMES.reduce(function(a,b){a[b[0]]=b[1];return a},{}),b=\"\",c=0;return function(d,e){if(DEBUG&&(e=e||1,e&LOG_LEVEL)){d=\"[\"+v86util.pads(a[e]||\"\",4)+\"] \"+d;if(d===b&&(c++,2048>c))return;e=new Date;e=v86util.pad0(e.getHours(),2)+\":\"+v86util.pad0(e.getMinutes(),2)+\":\"+v86util.pad0(e.getSeconds(),2)+\"+\"+v86util.pad0(e.getMilliseconds(),3)+\" \";c&&(1===c?do_the_log(e+b):do_the_log(\"Previous message repeated \"+c+\" times\"),c=0);do_the_log(e+d);\nb=d}}}();function dbg_trace(a){DEBUG&&dbg_log(Error().stack.replace(/(?:(?:t|t16|t32)\\.\\(anonymous function\\)\\.)+/g,\"t.(anonymous function).\"),a)}function dbg_assert(a,b,c){DEBUG&&(a||dbg_assert_failed(b))}function dbg_assert_failed(a){debugger;console.trace();if(a)throw\"Assert failed: \"+a;throw\"Assert failed\";};var instruction_count,instruction_total,CPU_LOG_VERBOSE=!1;\nfunction CPU(a){this.memory_size=0;this.a20_enabled=!0;this.mem_page_infos=void 0;this.mem8=new Uint8Array(0);this.mem16=new Uint16Array(this.mem8.buffer);this.mem32s=new Int32Array(this.mem8.buffer);this.segment_is_null=new Uint8Array(8);this.segment_limits=new Uint32Array(8);this.segment_offsets=new Int32Array(8);this.tlb_data=new Int32Array(1048576);this.tlb_info=new Uint8Array(1048576);this.tlb_info_global=new Uint8Array(1048576);this.protected_mode=!1;this.gdtr_offset=this.gdtr_size=this.idtr_offset=\nthis.idtr_size=0;this.page_fault=this.tss_size_32=!1;this.cr=new Int32Array(8);this.cr[0]=0;this.cr[2]=0;this.cr[3]=0;this.page_size_extensions=this.cpl=this.cr[4]=0;this.in_hlt=this.stack_size_32=this.is_32=!1;this.last_result=this.last_add_result=this.last_op_size=this.last_op2=this.last_op1=this.flags_changed=this.flags=this.prefixes=this.sysenter_eip=this.sysenter_esp=this.sysenter_cs=this.esp_phys=this.last_virt_esp=this.eip_phys=this.last_virt_eip=0;this.mul32_result=new Int32Array(2);this.div32_result=\nnew Float64Array(2);this.phys_addr_high=this.phys_addr=this.modrm_byte=this.tsc_offset=0;this.devices={};this.table=[];this.paging=!1;this.previous_ip=this.instruction_pointer=0;this.apic_enabled=!0;this.timestamp_counter=0;this.reg32s=new Int32Array(8);this.reg32=new Uint32Array(this.reg32s.buffer);this.reg16s=new Int16Array(this.reg32s.buffer);this.reg16=new Uint16Array(this.reg32s.buffer);this.reg8s=new Int8Array(this.reg32s.buffer);this.reg8=new Uint8Array(this.reg32s.buffer);this.reg_mmxs=new Int32Array(16);\nthis.reg_mmx=new Uint32Array(this.reg_mmxs.buffer);this.reg_mmx8s=new Int8Array(this.reg_mmxs.buffer);this.reg_mmx8=new Uint8Array(this.reg_mmxs.buffer);this.reg_xmm32s=new Int32Array(32);this.mxcsr=8064;this.sreg=new Uint16Array(8);this.dreg=new Int32Array(8);this.memory_map_read8=[];this.memory_map_write8=[];this.memory_map_read32=[];this.memory_map_write32=[];this.bios={main:null,vga:null};this.fw_value=0;this.fpu=this.io=void 0;this.bus=a;dbg_assert(this.table16&&this.table32);dbg_assert(this.table0F_16&&\nthis.table0F_32);this.update_operand_size();this.tsc_offset=v86.microtick();this.debug_init();this.init2()}\nCPU.prototype.get_state=function(){var a=[];a[0]=this.memory_size;a[1]=this.segment_is_null;a[2]=this.segment_offsets;a[3]=this.segment_limits;a[4]=this.protected_mode;a[5]=this.idtr_offset;a[6]=this.idtr_size;a[7]=this.gdtr_offset;a[8]=this.gdtr_size;a[9]=this.page_fault;a[10]=this.cr;a[11]=this.cpl;a[12]=this.page_size_extensions;a[13]=this.is_32;a[16]=this.stack_size_32;a[17]=this.in_hlt;a[18]=this.last_virt_eip;a[19]=this.eip_phys;a[20]=this.last_virt_esp;a[21]=this.esp_phys;a[22]=this.sysenter_cs;\na[23]=this.sysenter_eip;a[24]=this.sysenter_esp;a[25]=this.prefixes;a[26]=this.flags;a[27]=this.flags_changed;a[28]=this.last_op1;a[29]=this.last_op2;a[30]=this.last_op_size;a[31]=this.last_add_result;a[32]=this.modrm_byte;a[36]=this.paging;a[37]=this.instruction_pointer;a[38]=this.previous_ip;a[39]=this.reg32s;a[40]=this.sreg;a[41]=this.dreg;a[42]=this.mem8;a[43]=this.fpu;a[45]=this.devices.virtio;a[46]=this.devices.apic;a[47]=this.devices.rtc;a[48]=this.devices.pci;a[49]=this.devices.dma;a[50]=\nthis.devices.acpi;a[51]=this.devices.hpet;a[52]=this.devices.vga;a[53]=this.devices.ps2;a[54]=this.devices.uart;a[55]=this.devices.fdc;a[56]=this.devices.cdrom;a[57]=this.devices.hda;a[58]=this.devices.pit;a[59]=this.devices.net;a[60]=this.devices.pic;a[61]=this.devices.sb16;a[62]=this.a20_enabled;a[63]=this.fw_value;a[64]=this.devices.ioapic;a[65]=this.tss_size_32;a[66]=this.reg_mmxs;return a};\nCPU.prototype.set_state=function(a){this.memory_size=a[0];this.segment_is_null=a[1];this.segment_offsets=a[2];this.segment_limits=a[3];this.protected_mode=a[4];this.idtr_offset=a[5];this.idtr_size=a[6];this.gdtr_offset=a[7];this.gdtr_size=a[8];this.page_fault=a[9];this.cr=a[10];this.cpl=a[11];this.page_size_extensions=a[12];this.is_32=a[13];this.stack_size_32=a[16];this.in_hlt=a[17];this.last_virt_eip=a[18];this.eip_phys=a[19];this.last_virt_esp=a[20];this.esp_phys=a[21];this.sysenter_cs=a[22];this.sysenter_eip=\na[23];this.sysenter_esp=a[24];this.prefixes=a[25];this.flags=a[26];this.flags_changed=a[27];this.last_op1=a[28];this.last_op2=a[29];this.last_op_size=a[30];this.last_add_result=a[31];this.modrm_byte=a[32];this.paging=a[36];this.instruction_pointer=a[37];this.previous_ip=a[38];this.reg32s=a[39];this.sreg=a[40];this.dreg=a[41];this.mem8=a[42];this.fpu=a[43];this.devices.virtio=a[45];this.devices.apic=a[46];this.devices.rtc=a[47];this.devices.pci=a[48];this.devices.dma=a[49];this.devices.acpi=a[50];\nthis.devices.hpet=a[51];this.devices.vga=a[52];this.devices.ps2=a[53];this.devices.uart=a[54];this.devices.fdc=a[55];this.devices.cdrom=a[56];this.devices.hda=a[57];this.devices.pit=a[58];this.devices.net=a[59];this.devices.pic=a[60];this.devices.sb16=a[61];this.a20_enabled=a[62];this.fw_value=a[63];this.devices.ioapic=a[64];this.tss_size_32=a[65];this.reg_mmxs=a[66];this.mem16=new Uint16Array(this.mem8.buffer,this.mem8.byteOffset,this.mem8.length>>1);this.mem32s=new Int32Array(this.mem8.buffer,this.mem8.byteOffset,\nthis.mem8.length>>2);this.full_clear_tlb();this.reg32=new Uint32Array(this.reg32s.buffer);this.reg16s=new Int16Array(this.reg32s.buffer);this.reg16=new Uint16Array(this.reg32s.buffer);this.reg8s=new Int8Array(this.reg32s.buffer);this.reg8=new Uint8Array(this.reg32s.buffer);this.reg_mmx=new Uint32Array(this.reg_mmxs.buffer);this.reg_mmx8s=new Int8Array(this.reg_mmxs.buffer);this.reg_mmx8=new Uint8Array(this.reg_mmxs.buffer);this.update_operand_size()};\nCPU.prototype.main_run=function(){if(this.in_hlt){var a=this.hlt_loop();if(this.in_hlt)return a}this.do_run();return 0};CPU.prototype.exception_cleanup=function(a){if(a===MAGIC_CPU_EXCEPTION)this.page_fault=!1,this.clear_prefixes();else throw console.log(a),console.log(a.stack),a;};CPU.prototype.reboot_internal=function(){this.reset();this.load_bios();throw MAGIC_CPU_EXCEPTION;};\nCPU.prototype.reset=function(){this.a20_enabled=!0;for(var a=0;8>a;a++)this.segment_is_null[a]=0,this.segment_limits[a]=0,this.segment_offsets[a]=0;this.full_clear_tlb();for(a=0;8>a;a++)this.reg32s[a]=0,this.sreg[a]=0,this.cr[a]=0,this.dreg[a]=0;for(a=0;a<this.reg_mmxs.length;a++)this.reg_mmxs[a]=0;for(a=0;a<this.reg_xmm32s.length;a++)this.reg_xmm32s[a]=0;this.mxcsr=8064;this.protected_mode=!1;this.gdtr_offset=this.gdtr_size=this.idtr_offset=this.idtr_size=0;this.page_fault=!1;this.cr[0]=1610612752;\nthis.cr[2]=0;this.cr[3]=0;this.cr[4]=0;this.dreg[6]=-61456;this.dreg[7]=1024;this.cpl=0;this.paging=!1;this.page_size_extensions=0;this.stack_size_32=this.is_32=!1;this.prefixes=0;this.last_virt_esp=this.last_virt_eip=-1;this.update_operand_size();this.previous_ip=this.timestamp_counter=0;this.in_hlt=!1;this.sysenter_eip=this.sysenter_esp=this.sysenter_cs=0;this.flags=flags_default;this.last_op_size=this.last_op2=this.last_op1=this.last_add_result=this.last_result=this.flags_changed=0;this.tsc_offset=\nv86.microtick();this.instruction_pointer=1048560;this.switch_cs_real_mode(61440);this.switch_seg(reg_ss,48);this.reg16[reg_sp]=256;this.devices.virtio&&this.devices.virtio.reset();this.fw_value=0};CPU.prototype.create_memory=function(a){1048576>a?a=1048576:0>(a|0)&&(a=Math.pow(2,31)-MMAP_BLOCK_SIZE);a=(a-1|MMAP_BLOCK_SIZE-1)+1|0;dbg_assert(0<(a|0));dbg_assert(0===(a&MMAP_BLOCK_SIZE-1));this.memory_size=a;a=new ArrayBuffer(a);this.mem8=new Uint8Array(a);this.mem16=new Uint16Array(a);this.mem32s=new Int32Array(a)};\ngoog.exportProperty(CPU.prototype,\"create_memory\",CPU.prototype.create_memory);\nCPU.prototype.init=function(a,b){this.create_memory(\"number\"===typeof a.memory_size?a.memory_size:67108864);this.reset();var c=new IO(this);this.io=c;this.bios.main=a.bios;this.bios.vga=a.vga_bios;this.load_bios();var d=0;c.register_read(179,this,function(){dbg_log(\"port 0xB3 read\");return 0});c.register_read(146,this,function(){return d});c.register_write(146,this,function(a){d=a});c.register_read(1297,this,function(){var a=this.fw_value&255;this.fw_value>>>=8;return a});c.register_write(1296,this,\nvoid 0,function(a){dbg_log(\"bios config port, index=\"+h(a));a===FW_CFG_SIGNATURE?this.fw_value=-89064784:a===FW_CFG_RAM_SIZE?this.fw_value=this.memory_size:a===FW_CFG_NB_CPUS?this.fw_value=1:(dbg_assert(!1,\"Unimplemented fw index: \"+h(a)),this.fw_value=0)});DEBUG&&c.register_write(128,this,function(a){});this.devices={};a.load_devices&&(this.devices.pic=new PIC(this),this.devices.pci=new PCI(this),ENABLE_ACPI&&(this.devices.ioapic=new IOAPIC(this),this.devices.apic=new APIC(this),this.devices.acpi=\nnew ACPI(this)),this.devices.rtc=new RTC(this),this.fill_cmos(this.devices.rtc,a),this.devices.dma=new DMA(this),ENABLE_HPET&&(this.devices.hpet=new HPET(this)),this.devices.vga=new VGAScreen(this,b,a.vga_memory_size||8388608),this.fpu=new FPU(this),this.devices.ps2=new PS2(this,b),this.devices.uart=new UART(this,1016,b),this.devices.fdc=new FloppyController(this,a.fda,a.fdb),c=0,a.hda&&(this.devices.hda=new IDEDevice(this,a.hda,!1,c++,b)),a.cdrom&&(this.devices.cdrom=new IDEDevice(this,a.cdrom,!0,\nc++,b)),a.hdb&&(this.devices.hdb=new IDEDevice(this,a.hdb,!1,c++,b)),this.devices.pit=new PIT(this,b),a.enable_ne2k&&(this.devices.net=new Ne2k(this,b)),a.fs9p&&(this.devices.virtio=new VirtIO(this,b,a.fs9p)),this.devices.sb16=new SB16(this,b));a.multiboot&&(dbg_assert(a.multiboot.buffer),this.load_multiboot(a.multiboot.buffer));DEBUG&&this.debug.init()};\nCPU.prototype.load_multiboot=function(a){dbg_log(\"Trying multiboot from buffer of size \"+a.byteLength,LOG_CPU);if(8192>a.byteLength){var b=new Int32Array(2048);(new Uint8Array(b.buffer)).set(new Uint8Array(a))}else b=new Int32Array(a,0,2048);for(var c=0;8192>c;c+=4)if(464367618===b[c>>2]){var d=b[c+4>>2];if(464367618+d+b[c+8>>2]|0)dbg_log(\"Multiboot checksum check failed\",LOG_CPU);else{dbg_log(\"Multiboot magic found, flags: \"+h(d>>>0,8),LOG_CPU);dbg_assert(0===(d&-65537),\"TODO\");this.reg32s[reg_eax]=\n732803074;this.reg32s[reg_ebx]=31744;this.write32(31744,0);this.cr[0]=1;this.protected_mode=!0;this.flags=flags_default;this.update_cs_size(!0);this.stack_size_32=!0;for(var e=0;6>e;e++)this.segment_is_null[e]=0,this.segment_offsets[e]=0,this.segment_limits[e]=4294967295,this.sreg[e]=45058;if(d&65536){dbg_log(\"Multiboot specifies its own address table\",LOG_CPU);var f=b[c+12>>2];d=b[c+16>>2];e=b[c+20>>2];var g=b[c+24>>2];b=b[c+28>>2];dbg_log(\"header=\"+h(f,8)+\" load=\"+h(d,8)+\" load_end=\"+h(e,8)+\" bss_end=\"+\nh(g,8)+\" entry=\"+h(b,8));dbg_assert(d<=f);c-=f-d;0===e?e=void 0:(dbg_assert(e>=d),e-=d);a=new Uint8Array(a,c,e);this.write_blob(a,d);this.instruction_pointer=this.get_seg(reg_cs)+b|0}else if(1179403647===b[0])for(dbg_log(\"Multiboot image is in elf format\",LOG_CPU),d=read_elf(a),this.instruction_pointer=this.get_seg(reg_cs)+d.header.entry|0,d=$jscomp.makeIterator(d.program_headers),c=d.next();!c.done;c=d.next())c=c.value,0!==c.type&&(1===c.type?(dbg_assert(c.paddr===c.vaddr),dbg_assert(c.filesz<=c.memsz),\nb=new Uint8Array(a,c.offset,c.filesz),this.write_blob(b,c.paddr)):4!==c.type&&1685382480!==c.type&&1685382481!==c.type&&dbg_assert(!1,\"unimplemented elf section type\"));else dbg_assert(!1,\"Not a bootable multiboot format\");this.io.register_write_consecutive(244,this,function(a){console.log(\"Test exited with code \"+h(a,2));throw\"HALT\";},function(){},function(){},function(){});for(a={i$11:14};15>=a.i$11;a={i$11:a.i$11},a.i$11++)this.io.register_write(8192+a.i$11,this,function(a){return function(b){dbg_log(\"kvm-unit-test: Set irq \"+\nh(a.i$11)+\" to \"+h(b,2));b?this.device_raise_irq(a.i$11):this.device_lower_irq(a.i$11)}}(a));dbg_log(\"Starting multiboot kernel at:\",LOG_CPU);this.debug.dump_state();this.debug.dump_regs();break}}};\nCPU.prototype.fill_cmos=function(a,b){var c=b.boot_order||531;a.cmos_write(CMOS_BIOS_BOOTFLAG1,1|c>>4&240);a.cmos_write(CMOS_BIOS_BOOTFLAG2,c&255);a.cmos_write(CMOS_MEM_BASE_LOW,128);a.cmos_write(CMOS_MEM_BASE_HIGH,2);c=0;1048576<=this.memory_size&&(c=this.memory_size-1048576>>10,c=Math.min(c,65535));a.cmos_write(CMOS_MEM_OLD_EXT_LOW,c&255);a.cmos_write(CMOS_MEM_OLD_EXT_HIGH,c>>8&255);a.cmos_write(CMOS_MEM_EXTMEM_LOW,c&255);a.cmos_write(CMOS_MEM_EXTMEM_HIGH,c>>8&255);c=0;16777216<=this.memory_size&&\n(c=this.memory_size-16777216>>16,c=Math.min(c,65535));a.cmos_write(CMOS_MEM_EXTMEM2_LOW,c&255);a.cmos_write(CMOS_MEM_EXTMEM2_HIGH,c>>8&255);a.cmos_write(CMOS_MEM_HIGHMEM_LOW,0);a.cmos_write(CMOS_MEM_HIGHMEM_MID,0);a.cmos_write(CMOS_MEM_HIGHMEM_HIGH,0);a.cmos_write(CMOS_EQUIPMENT_INFO,47);a.cmos_write(CMOS_BIOS_SMP_COUNT,0);b.fastboot&&a.cmos_write(63,1)};\nCPU.prototype.load_bios=function(){var a=this.bios.main,b=this.bios.vga;if(a){var c=new Uint8Array(a);this.write_blob(c,1048576-a.byteLength);if(b){var d=new Uint8Array(b);this.write_blob(d,786432);this.io.mmap_register(4272947200,1048576,function(a){a=a-4272947200|0;return a<d.length?d[a]:0},function(a,b){dbg_assert(!1,\"Unexpected write to VGA rom\")})}else dbg_log(\"Warning: No VGA BIOS\");this.io.mmap_register(4293918720,1048576,function(a){return this.mem8[a&1048575]}.bind(this),function(a,b){this.mem8[a&\n1048575]=b}.bind(this))}else dbg_log(\"Warning: No BIOS\")};CPU.prototype.do_run=function(){for(var a=v86.microtick(),b=a;b-a<TIME_PER_FRAME;){this.run_hardware_timers(b);this.handle_irqs();this.do_many_cycles();if(this.in_hlt)break;b=v86.microtick()}};CPU.prototype.do_many_cycles=function(){try{this.do_many_cycles_unsafe()}catch(a){this.exception_cleanup(a)}};CPU.prototype.do_many_cycles_unsafe=function(){for(var a=LOOP_COUNTER;a--;)this.cycle_internal()};\n\"undefined\"!==typeof window&&(window.__no_inline_for_closure_compiler__=[CPU.prototype.exception_cleanup,CPU.prototype.do_many_cycles_unsafe,CPU.prototype.do_many_cycles]);var PROFILING=!1;\nCPU.prototype.cycle_internal=function(){this.previous_ip=this.instruction_pointer;this.timestamp_counter++;if(PROFILING)var a=performance.now();var b=this.read_imm8();DEBUG&&this.debug.logop(this.instruction_pointer-1>>>0,b);this.table[b](this);if(PROFILING){var c=performance.now();instruction_total[b]+=c-a;instruction_count[b]++}this.flags&flag_trap&&dbg_log(\"Trap flag: Ignored\",LOG_CPU)};CPU.prototype.cycle=function(){try{this.cycle_internal()}catch(a){this.exception_cleanup(a)}};\ngoog.exportProperty(CPU.prototype,\"cycle\",CPU.prototype.cycle);CPU.prototype.segment_prefix_op=function(a){dbg_assert(5>=a);this.prefixes|=a+1;this.run_prefix_instruction();this.prefixes=0};CPU.prototype.run_prefix_instruction=function(){if(this.is_osize_32())this.table32[this.read_imm8()](this);else this.table16[this.read_imm8()](this)};CPU.prototype.hlt_loop=function(){dbg_assert(this.flags&flag_interrupt);this.run_hardware_timers(v86.microtick());this.handle_irqs();return 0};\nCPU.prototype.run_hardware_timers=function(a){ENABLE_HPET?(this.devices.pit.timer(a,this.devices.hpet.legacy_mode),this.devices.rtc.timer(a,this.devices.hpet.legacy_mode),this.devices.hpet.timer(a)):(this.devices.pit.timer(a,!1),this.devices.rtc.timer(a,!1));ENABLE_ACPI&&(this.devices.acpi.timer(a),this.devices.apic.timer(a))};CPU.prototype.clear_prefixes=function(){this.prefixes=0};\nCPU.prototype.set_cr0=function(a){if((a&(CR0_PE|CR0_PG))===CR0_PG)throw this.debug.unimpl(\"#GP handler\");this.cr[0]=a;this.fpu||(this.cr[0]|=CR0_EM);this.cr[0]|=CR0_ET;a=(this.cr[0]&CR0_PG)===CR0_PG;dbg_assert(\"boolean\"===typeof this.paging);a!==this.paging&&(this.paging=a,this.full_clear_tlb());this.protected_mode=(this.cr[0]&CR0_PE)===CR0_PE};\nCPU.prototype.set_cr4=function(a){a&-3565568&&this.trigger_gp(0);(this.cr[4]^a)&CR4_PGE&&(a&CR4_PGE?this.clear_tlb():this.full_clear_tlb());this.cr[4]=a;this.page_size_extensions=a&CR4_PSE?PSE_ENABLED:0;if(a&CR4_PAE)throw this.debug.unimpl(\"PAE\");a&4294965504&&(dbg_assert(!1,\"Unimplemented CR4 bits: \"+h(a)),this.trigger_ud());dbg_log(\"cr4=\"+h(a>>>0),LOG_CPU)};CPU.prototype.cpl_changed=function(){this.last_virt_esp=this.last_virt_eip=-1};\nCPU.prototype.read_imm8=function(){this.instruction_pointer&-4096^this.last_virt_eip&&(this.eip_phys=this.translate_address_read(this.instruction_pointer)^this.instruction_pointer,this.last_virt_eip=this.instruction_pointer&-4096);var a=this.read8(this.eip_phys^this.instruction_pointer);this.instruction_pointer=this.instruction_pointer+1|0;return a};CPU.prototype.read_imm8s=function(){return this.read_imm8()<<24>>24};\nCPU.prototype.read_imm16=function(){if(4094<(this.instruction_pointer^this.last_virt_eip)>>>0)return this.read_imm8()|this.read_imm8()<<8;var a=this.read16(this.eip_phys^this.instruction_pointer);this.instruction_pointer=this.instruction_pointer+2|0;return a};\nCPU.prototype.read_imm32s=function(){if(4092<(this.instruction_pointer^this.last_virt_eip)>>>0)return this.read_imm16()|this.read_imm16()<<16;var a=this.read32s(this.eip_phys^this.instruction_pointer);this.instruction_pointer=this.instruction_pointer+4|0;return a};CPU.prototype.create_atom64s=function(a,b){var c=new Int32Array(2);c[0]=a;c[1]=b;return c};CPU.prototype.create_atom128s=function(a,b,c,d){var e=new Int32Array(4);e[0]=a;e[1]=b;e[2]=c;e[3]=d;return e};\nCPU.prototype.read_modrm_byte=function(){this.modrm_byte=this.read_imm8()};CPU.prototype.read_op0F=CPU.prototype.read_imm8;CPU.prototype.read_sib=CPU.prototype.read_imm8;CPU.prototype.read_op8=CPU.prototype.read_imm8;CPU.prototype.read_op8s=CPU.prototype.read_imm8s;CPU.prototype.read_op16=CPU.prototype.read_imm16;CPU.prototype.read_op32s=CPU.prototype.read_imm32s;CPU.prototype.read_disp8=CPU.prototype.read_imm8;CPU.prototype.read_disp8s=CPU.prototype.read_imm8s;CPU.prototype.read_disp16=CPU.prototype.read_imm16;\nCPU.prototype.read_disp32s=CPU.prototype.read_imm32s;CPU.prototype.init2=function(){};CPU.prototype.branch_taken=function(){};CPU.prototype.branch_not_taken=function(){};CPU.prototype.diverged=function(){};CPU.prototype.modrm_resolve=function(a){dbg_assert(192>a);return(this.is_asize_32()?this.modrm_table32:this.modrm_table16)[a](this)};CPU.prototype.sib_resolve=function(a){return this.sib_table[this.read_sib()](this,a)};CPU.prototype.clear_instruction_cache=function(){};\nCPU.prototype.virt_boundary_read16=function(a,b){dbg_assert(4095===(a&4095));dbg_assert(0===(b&4095));return this.read8(a)|this.read8(b)<<8};CPU.prototype.virt_boundary_read32s=function(a,b){dbg_assert(4093<=(a&4095));dbg_assert((b-3&4095)===(a&4095));var c=a&1?a&2?this.read_aligned16(b-2>>1):this.read_aligned16(a+1>>1):this.virt_boundary_read16(a+1|0,b-1|0);return this.read8(a)|c<<8|this.read8(b)<<24};\nCPU.prototype.virt_boundary_write16=function(a,b,c){dbg_assert(4095===(a&4095));dbg_assert(0===(b&4095));this.write8(a,c);this.write8(b,c>>8)};CPU.prototype.virt_boundary_write32=function(a,b,c){dbg_assert(4093<=(a&4095));dbg_assert((b-3&4095)===(a&4095));this.write8(a,c);this.write8(b,c>>24);a&1?a&2?(this.write8(b-2,c>>8),this.write8(b-1,c>>16)):(this.write8(a+1|0,c>>8),this.write8(a+2|0,c>>16)):(this.write8(a+1|0,c>>8),this.write8(b-1,c>>16))};\nCPU.prototype.safe_read8=function(a){dbg_assert(2147483648>a);return this.read8(this.translate_address_read(a))};CPU.prototype.safe_read16=function(a){return this.paging&&4095===(a&4095)?this.safe_read8(a)|this.safe_read8(a+1|0)<<8:this.read16(this.translate_address_read(a))};CPU.prototype.safe_read32s=function(a){return this.paging&&4093<=(a&4095)?this.safe_read16(a)|this.safe_read16(a+2|0)<<16:this.read32s(this.translate_address_read(a))};\nCPU.prototype.safe_read64s=function(a){var b=this.create_atom64s(0,0);this.paging&&4089<=(a&4095)?(b[0]=this.safe_read32s(a),b[1]=this.safe_read32s(a+4|0)):(b[0]=this.read32s(this.translate_address_read(a)),b[1]=this.read32s(this.translate_address_read(a+4|0)));return b};CPU.prototype.safe_read128s_aligned=function(a){dbg_assert(0===(a&15));a=this.translate_address_read(a);return this.create_atom128s(this.read32s(a),this.read32s(a+4|0),this.read32s(a+8|0),this.read32s(a+12|0))};\nCPU.prototype.safe_read128s_unaligned=function(a){return this.create_atom128s(this.safe_read32s(a),this.safe_read32s(a+4|0),this.safe_read32s(a+8|0),this.safe_read32s(a+12|0))};CPU.prototype.safe_write8=function(a,b){dbg_assert(2147483648>a);this.write8(this.translate_address_write(a),b)};CPU.prototype.safe_write16=function(a,b){var c=this.translate_address_write(a);4095===(a&4095)?this.virt_boundary_write16(c,this.translate_address_write(a+1|0),b):this.write16(c,b)};\nCPU.prototype.safe_write32=function(a,b){var c=this.translate_address_write(a);4093<=(a&4095)?this.virt_boundary_write32(c,this.translate_address_write(a+3&-4)|a+3&3,b):this.write32(c,b)};CPU.prototype.safe_write64=function(a,b,c){this.writable_or_pagefault(a,8);this.safe_write32(a,b);this.safe_write32(a+4|0,c)};CPU.prototype.safe_write128=function(a,b,c,d,e){this.writable_or_pagefault(a,16);this.safe_write32(a,b);this.safe_write32(a+4|0,c);this.safe_write32(a+8|0,d);this.safe_write32(a+12|0,e)};\nCPU.prototype.read_moffs=function(){return this.is_asize_32()?this.get_seg_prefix(reg_ds)+this.read_op32s()|0:this.get_seg_prefix(reg_ds)+this.read_op16()|0};CPU.prototype.getiopl=function(){return this.flags>>12&3};CPU.prototype.vm86_mode=function(){return!!(this.flags&flag_vm)};CPU.prototype.get_eflags=function(){return this.flags&~flags_all|!!this.getcf()|!!this.getpf()<<2|!!this.getaf()<<4|!!this.getzf()<<6|!!this.getsf()<<7|!!this.getof()<<11};\nCPU.prototype.update_eflags=function(a){var b=flag_rf|flag_vm|flag_vip|flag_vif,c=~flag_vip&~flag_vif&flags_mask;this.flags&flag_vm?(dbg_assert(3===this.getiopl()),b|=flag_iopl,c|=flag_vip|flag_vif):(this.protected_mode||dbg_assert(0===this.cpl),this.cpl&&(b|=flag_iopl,this.cpl>this.getiopl()&&(b|=flag_interrupt)));this.flags=(a^(this.flags^a)&b)&c|flags_default;this.flags_changed=0};CPU.prototype.get_stack_reg=function(){return this.stack_size_32?this.reg32s[reg_esp]:this.reg16[reg_sp]};\nCPU.prototype.set_stack_reg=function(a){this.stack_size_32?this.reg32s[reg_esp]=a:this.reg16[reg_sp]=a};CPU.prototype.adjust_stack_reg=function(a){this.stack_size_32?this.reg32s[reg_esp]+=a:this.reg16[reg_sp]+=a};CPU.prototype.get_stack_pointer=function(a){return this.stack_size_32?this.get_seg(reg_ss)+this.reg32s[reg_esp]+a|0:this.get_seg(reg_ss)+(this.reg16[reg_sp]+a&65535)|0};CPU.prototype.get_real_eip=function(){return this.instruction_pointer-this.get_seg(reg_cs)|0};\nCPU.prototype.call_interrupt_vector=function(a,b,c){CPU_LOG_VERBOSE&&this.debug.dump_state(\"int \"+h(a)+\" start (\"+(b?\"soft\":\"hard\")+\"ware)\");CPU_LOG_VERBOSE&&this.debug.dump_regs();this.debug.debug_interrupt(a);dbg_assert(!1===c||\"number\"===typeof c);this.in_hlt=!1;if(this.protected_mode){if(this.vm86_mode()&&this.cr[4]&CR4_VME)throw this.debug.unimpl(\"VME\");this.vm86_mode()&&b&&3>this.getiopl()&&(dbg_log(\"call_interrupt_vector #GP. vm86 && software int && iopl < 3\",LOG_CPU),dbg_trace(LOG_CPU),this.trigger_gp(0));\nif((a<<3|7)>this.idtr_size)throw dbg_log(a,LOG_CPU),dbg_trace(LOG_CPU),this.debug.unimpl(\"#GP handler\");var d=this.idtr_offset+(a<<3)|0;dbg_assert(4088>(d&4095));this.paging&&(d=this.translate_address_system_read(d));var e=this.read16(d)|this.read16(d+6|0)<<16,f=this.read16(d+2|0),g=this.read8(d+5|0),k=g>>5&3,l=g&31;if(0===(g&128))throw this.debug.unimpl(\"#NP handler\");b&&k<this.cpl&&(dbg_log(\"#gp software interrupt (\"+h(a,2)+\") and dpl < cpl\",LOG_CPU),dbg_trace(LOG_CPU),this.trigger_gp(a<<3|2));\nif(5===l){dbg_log(\"interrupt to task gate: int=\"+h(a,2)+\" sel=\"+h(f,4)+\" dpl=\"+k,LOG_CPU);dbg_trace(LOG_CPU);this.do_task_switch(f,c);CPU_LOG_VERBOSE&&this.debug.dump_state(\"int end\");return}if(6!==(l&-10))throw dbg_trace(LOG_CPU),dbg_log(\"invalid type: \"+h(l)),dbg_log(h(d)+\" \"+h(e>>>0)+\" \"+h(f)),this.debug.unimpl(\"#GP handler\");b=1===(l&1);l=0===(l&8);d=this.lookup_segment_selector(f);dbg_assert(e>>>0<=d.effective_limit);dbg_assert(d.is_valid);if(d.is_null)throw dbg_log(\"is null\"),this.debug.unimpl(\"#GP handler\");\nif(!d.is_executable||d.dpl>this.cpl)throw dbg_log(\"not exec\"),this.debug.unimpl(\"#GP handler\");d.is_present||(dbg_log(\"not present\"),this.trigger_np(a<<3|2));a=this.get_eflags();if(!d.dc_bit&&d.dpl<this.cpl){k=this.get_tss_stack_addr(d.dpl);this.tss_size_32?(g=this.read32s(k),k=this.read16(k+4|0)):(g=this.read16(k),k=this.read16(k+2|0));var m=this.lookup_segment_selector(k);dbg_assert(m.is_valid&&!m.is_system&&m.is_writable);if(m.is_null)throw this.debug.unimpl(\"#TS handler\");if(m.rpl!==d.dpl)throw this.debug.unimpl(\"#TS handler\");\nif(m.dpl!==d.dpl||!m.rw_bit)throw this.debug.unimpl(\"#TS handler\");if(!m.is_present)throw this.debug.unimpl(\"#TS handler\");var p=this.reg32s[reg_esp],n=this.sreg[reg_ss];a&flag_vm&&dbg_assert(0===d.dpl,\"switch to non-0 dpl from vm86 mode\");var r=(l?2:4)*(5+(!1!==c)+4*((a&flag_vm)===flag_vm));this.translate_address_system_write(m.base+(m.size?g-r:g-r&65535));this.translate_address_system_write(m.base+g-1);this.cpl=d.dpl;this.cpl_changed();this.update_cs_size(d.size);this.flags=this.flags&~flag_vm&\n~flag_rf;this.switch_seg(reg_ss,k);this.set_stack_reg(g);a&flag_vm&&(l?dbg_assert(!1):(this.push32(this.sreg[reg_gs]),this.push32(this.sreg[reg_fs]),this.push32(this.sreg[reg_ds]),this.push32(this.sreg[reg_es])));l?(this.push16(n),this.push16(p)):(this.push32(n),this.push32(p))}else if(d.dc_bit||d.dpl===this.cpl)this.flags&flag_vm&&(dbg_assert(!1,\"check error code\"),this.trigger_gp(f&-4)),r=(l?2:4)*(3+(!1!==c)),this.writable_or_pagefault(this.get_stack_pointer(-r),r);else throw this.debug.unimpl(\"#GP handler\");\nl?(this.push16(a),this.push16(this.sreg[reg_cs]),this.push16(this.get_real_eip()),!1!==c&&this.push16(c),e&=65535):(this.push32(a),this.push32(this.sreg[reg_cs]),this.push32(this.get_real_eip()),!1!==c&&this.push32(c));a&flag_vm&&(this.switch_seg(reg_gs,0),this.switch_seg(reg_fs,0),this.switch_seg(reg_ds,0),this.switch_seg(reg_es,0));this.sreg[reg_cs]=f&-4|this.cpl;dbg_assert((this.sreg[reg_cs]&3)===this.cpl);this.update_cs_size(d.size);this.segment_limits[reg_cs]=d.effective_limit;this.segment_offsets[reg_cs]=\nd.base;this.instruction_pointer=this.get_seg(reg_cs)+e|0;this.flags=this.flags&~flag_nt&~flag_vm&~flag_rf&~flag_trap;b?this.page_fault||this.handle_irqs():this.flags&=~flag_interrupt}else e=a<<2,c=this.read16(e),e=this.read16(e+2|0),this.push16(this.get_eflags()),this.push16(this.sreg[reg_cs]),this.push16(this.get_real_eip()),this.flags&=~flag_interrupt,this.switch_cs_real_mode(e),this.instruction_pointer=this.get_seg(reg_cs)+c|0;CPU_LOG_VERBOSE&&this.debug.dump_state(\"int end\")};\nCPU.prototype.iret16=function(){this.iret(!0)};CPU.prototype.iret32=function(){this.iret(!1)};\nCPU.prototype.iret=function(a){CPU_LOG_VERBOSE&&this.debug.dump_state(\"iret\"+(a?\"16\":\"32\")+\" start\");this.vm86_mode()&&3>this.getiopl()&&(dbg_log(\"#gp iret vm86 mode, iopl != 3\",LOG_CPU),this.trigger_gp(0));if(a)var b=this.safe_read16(this.get_stack_pointer(0)),c=this.safe_read16(this.get_stack_pointer(2)),d=this.safe_read16(this.get_stack_pointer(4));else b=this.safe_read32s(this.get_stack_pointer(0)),c=this.safe_read16(this.get_stack_pointer(4)),d=this.safe_read32s(this.get_stack_pointer(8));if(!this.protected_mode||\nthis.vm86_mode()&&3===this.getiopl()){if(b&4294901760)throw this.debug.unimpl(\"#GP handler\");this.switch_cs_real_mode(c);this.instruction_pointer=b+this.get_seg(reg_cs)|0;a?(this.update_eflags(d|this.flags&-65536),this.adjust_stack_reg(6)):(this.update_eflags(d),this.adjust_stack_reg(12));CPU_LOG_VERBOSE&&this.debug.dump_state(\"iret end\")}else{dbg_assert(!this.vm86_mode());if(this.flags&flag_nt){if(DEBUG)throw this.debug.unimpl(\"nt\");this.trigger_gp(0)}if(d&flag_vm){if(0===this.cpl){dbg_assert(!a);\ndbg_assert(0===(b&-65536));var e=this.safe_read32s(this.get_stack_pointer(12)),f=this.safe_read16(this.get_stack_pointer(16));a=this.safe_read16(this.get_stack_pointer(20));var g=this.safe_read16(this.get_stack_pointer(24)),k=this.safe_read16(this.get_stack_pointer(28)),l=this.safe_read16(this.get_stack_pointer(32));this.update_eflags(d);this.flags|=flag_vm;this.switch_cs_real_mode(c);this.instruction_pointer=(b&65535)+this.get_seg(reg_cs)|0;this.switch_seg(reg_es,a);this.switch_seg(reg_ds,g);this.switch_seg(reg_fs,\nk);this.switch_seg(reg_gs,l);this.adjust_stack_reg(36);this.reg32s[reg_esp]=e;this.switch_seg(reg_ss,f);this.cpl=3;this.cpl_changed();this.update_cs_size(!1);CPU_LOG_VERBOSE&&this.debug.dump_state(\"iret end\");return}dbg_log(\"vm86 flag ignored because cpl != 0\",LOG_CPU);d&=~flag_vm}g=this.lookup_segment_selector(c);dbg_assert(g.is_valid);dbg_assert(b>>>0<=g.effective_limit);if(g.is_null)throw this.debug.unimpl(\"is null\");if(!g.is_present)throw this.debug.unimpl(\"not present\");if(!g.is_executable)throw this.debug.unimpl(\"not exec\");\nif(g.rpl<this.cpl)throw this.debug.unimpl(\"rpl < cpl\");if(g.dc_bit&&g.dpl>g.rpl)throw this.debug.unimpl(\"conforming and dpl > rpl\");g.dc_bit||g.rpl===g.dpl||(dbg_log(\"#gp iret: non-conforming cs and rpl != dpl, dpl=\"+g.dpl+\" rpl=\"+g.rpl,LOG_CPU),this.trigger_gp(c&-4));g.rpl>this.cpl?(a?(e=this.safe_read16(this.get_stack_pointer(6)),f=this.safe_read16(this.get_stack_pointer(8))):(e=this.safe_read32s(this.get_stack_pointer(12)),f=this.safe_read16(this.get_stack_pointer(16))),k=this.lookup_segment_selector(f),\nl=g.rpl,k.is_null&&(dbg_log(\"#GP for loading 0 in SS sel=\"+h(f,4),LOG_CPU),dbg_trace(LOG_CPU),this.trigger_gp(0)),k.is_valid&&!k.is_system&&k.rpl===l&&k.is_writable&&k.dpl===l||(dbg_log(\"#GP for loading invalid in SS sel=\"+h(f,4),LOG_CPU),dbg_trace(LOG_CPU),this.trigger_gp(f&-4)),k.is_present||(dbg_log(\"#SS for loading non-present in SS sel=\"+h(f,4),LOG_CPU),dbg_trace(LOG_CPU),this.trigger_ss(f&-4)),a?this.update_eflags(d|this.flags&-65536):this.update_eflags(d),this.cpl=g.rpl,this.cpl_changed(),\nthis.switch_seg(reg_ss,f),this.set_stack_reg(e),0===this.cpl&&(this.flags=this.flags&~flag_vif&~flag_vip|d&(flag_vif|flag_vip))):g.rpl===this.cpl?(a?(this.adjust_stack_reg(6),this.update_eflags(d|this.flags&-65536)):(this.adjust_stack_reg(12),this.update_eflags(d)),0===this.cpl&&(this.flags=this.flags&~flag_vif&~flag_vip|d&(flag_vif|flag_vip))):dbg_assert(!1);this.sreg[reg_cs]=c;dbg_assert((c&3)===this.cpl);this.update_cs_size(g.size);this.segment_limits[reg_cs]=g.effective_limit;this.segment_offsets[reg_cs]=\ng.base;this.instruction_pointer=b+this.get_seg(reg_cs)|0;CPU_LOG_VERBOSE&&this.debug.dump_state(\"iret\"+(a?\"16\":\"32\")+\" end\")}this.handle_irqs()};CPU.prototype.switch_cs_real_mode=function(a){dbg_assert(!this.protected_mode||this.vm86_mode());this.sreg[reg_cs]=a;this.segment_is_null[reg_cs]=0;this.segment_offsets[reg_cs]=a<<4};\nCPU.prototype.far_return=function(a,b,c){dbg_assert(\"number\"===typeof b&&65536>b&&0<=b);CPU_LOG_VERBOSE&&this.debug.dump_state(\"far ret start\");this.protected_mode||dbg_assert(!this.is_32);if(!this.protected_mode||this.vm86_mode())this.switch_cs_real_mode(b),this.instruction_pointer=this.get_seg(reg_cs)+a|0,this.adjust_stack_reg(2*(this.is_osize_32()?4:2)+c);else{var d=this.lookup_segment_selector(b);d.is_null&&(dbg_log(\"null cs\",LOG_CPU),this.trigger_gp(0));d.is_valid||(dbg_log(\"invalid cs: \"+h(b),\nLOG_CPU),this.trigger_gp(b&-4));d.is_system&&(dbg_assert(!1,\"is system in far return\"),this.trigger_gp(b&-4));d.is_executable||(dbg_log(\"non-executable cs: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));d.rpl<this.cpl&&(dbg_log(\"cs rpl < cpl: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));d.dc_bit&&d.dpl>d.rpl&&(dbg_log(\"cs conforming and dpl > rpl: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));d.dc_bit||d.dpl===d.rpl||(dbg_log(\"cs non-conforming and dpl != rpl: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));d.is_present||(dbg_log(\"#NP for loading not-present in cs sel=\"+\nh(b,4),LOG_CPU),dbg_trace(LOG_CPU),this.trigger_np(b&-4));if(d.rpl>this.cpl){dbg_log(\"far return privilege change cs: \"+h(b)+\" from=\"+this.cpl+\" to=\"+d.rpl+\" is_16=\"+this.is_osize_32(),LOG_CPU);if(this.is_osize_32())var e=this.safe_read32s(this.get_stack_pointer(c+8)),f=this.safe_read16(this.get_stack_pointer(c+12));else e=this.safe_read16(this.get_stack_pointer(c+4)),f=this.safe_read16(this.get_stack_pointer(c+6));this.cpl=d.rpl;this.cpl_changed();this.switch_seg(reg_ss,f);this.set_stack_reg(e+c)}else this.is_osize_32()?\nthis.adjust_stack_reg(8+c):this.adjust_stack_reg(4+c);this.update_cs_size(d.size);this.segment_is_null[reg_cs]=0;this.segment_limits[reg_cs]=d.effective_limit;this.segment_offsets[reg_cs]=d.base;this.sreg[reg_cs]=b;dbg_assert((b&3)===this.cpl);this.instruction_pointer=this.get_seg(reg_cs)+a|0;CPU_LOG_VERBOSE&&this.debug.dump_state(\"far ret end\")}};\nCPU.prototype.far_jump=function(a,b,c){dbg_assert(\"number\"===typeof b&&65536>b&&0<=b);CPU_LOG_VERBOSE&&this.debug.dump_state(\"far \"+[\"jump\",\"call\"][+c]);if(!this.protected_mode||this.vm86_mode())c&&(this.is_osize_32()?(this.writable_or_pagefault(this.get_stack_pointer(-8),8),this.push32(this.sreg[reg_cs]),this.push32(this.get_real_eip())):(this.writable_or_pagefault(this.get_stack_pointer(-4),4),this.push16(this.sreg[reg_cs]),this.push16(this.get_real_eip()))),this.switch_cs_real_mode(b),this.instruction_pointer=\nthis.get_seg(reg_cs)+a|0;else{var d=this.lookup_segment_selector(b);d.is_null&&(dbg_log(\"#gp null cs\",LOG_CPU),this.trigger_gp(0));d.is_valid||(dbg_log(\"#gp invalid cs: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));if(d.is_system)if(dbg_assert(c,\"TODO: Jump\"),dbg_log(\"system type cs: \"+h(b),LOG_CPU),12===d.type||4===d.type){a=4===d.type;if(d.dpl<this.cpl||d.dpl<d.rpl)dbg_log(\"#gp cs gate dpl < cpl or dpl < rpl: \"+h(b),LOG_CPU),this.trigger_gp(b&-4);d.is_present||(dbg_log(\"#NP for loading not-present in gate cs sel=\"+\nh(b,4),LOG_CPU),this.trigger_np(b&-4));b=d.raw0>>>16;var e=this.lookup_segment_selector(b);e.is_null&&(dbg_log(\"#gp null cs\",LOG_CPU),this.trigger_gp(0));e.is_valid||(dbg_log(\"#gp invalid cs: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));e.is_executable||(dbg_log(\"#gp non-executable cs: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));e.dpl>this.cpl&&(dbg_log(\"#gp dpl > cpl: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));e.is_present||(dbg_log(\"#NP for loading not-present in cs sel=\"+h(b,4),LOG_CPU),this.trigger_np(b&-4));\nif(!e.dc_bit&&e.dpl<this.cpl){dbg_log(\"more privilege call gate is_16=\"+a+\" from=\"+this.cpl+\" to=\"+e.dpl);var f=this.get_tss_stack_addr(e.dpl);if(this.tss_size_32){var g=this.read32s(f);f=this.read16(f+4|0)}else g=this.read16(f),f=this.read16(f+2|0);var k=this.lookup_segment_selector(f);dbg_assert(k.is_valid&&!k.is_system&&k.is_writable);if(k.is_null)throw this.debug.unimpl(\"#TS handler\");if(k.rpl!==e.dpl)throw this.debug.unimpl(\"#TS handler\");if(k.dpl!==e.dpl||!k.rw_bit)throw this.debug.unimpl(\"#TS handler\");\nif(!k.is_present)throw this.debug.unimpl(\"#SS handler\");var l=d.raw1&31,m=a?4:8;c&&(m+=a?4+2*l:8+4*l);k.size?this.writable_or_pagefault(k.base+g-m|0,m):this.writable_or_pagefault(k.base+(g-m&65535)|0,m);m=this.reg32s[reg_esp];var p=this.sreg[reg_ss];k=this.get_stack_pointer(0);this.cpl=e.dpl;this.cpl_changed();this.update_cs_size(e.size);this.switch_seg(reg_ss,f);this.set_stack_reg(g);a?(this.push16(p),this.push16(m)):(this.push32(p),this.push32(m));if(c)if(a){for(g=l-1;0<=g;g--)f=this.safe_read16(k+\n2*g),this.push16(f);this.push16(this.sreg[reg_cs]);this.push16(this.get_real_eip())}else{for(g=l-1;0<=g;g--)f=this.safe_read32s(k+4*g),this.push32(f);this.push32(this.sreg[reg_cs]);this.push32(this.get_real_eip())}}else dbg_log(\"same privilege call gate is_16=\"+a+\" from=\"+this.cpl+\" to=\"+e.dpl+\" conforming=\"+e.dc_bit),c&&(a?(this.writable_or_pagefault(this.get_stack_pointer(-4),4),this.push16(this.sreg[reg_cs]),this.push16(this.get_real_eip())):(this.writable_or_pagefault(this.get_stack_pointer(-8),\n8),this.push32(this.sreg[reg_cs]),this.push32(this.get_real_eip())));g=d.raw0&65535;a||(g|=d.raw1&4294901760);dbg_log(\"call gate eip=\"+h(g>>>0)+\" cs=\"+h(b)+\" conforming=\"+e.dc_bit);dbg_assert(g>>>0<=e.effective_limit,\"todo: #gp\");this.update_cs_size(e.size);this.segment_is_null[reg_cs]=0;this.segment_limits[reg_cs]=e.effective_limit;this.segment_offsets[reg_cs]=e.base;this.sreg[reg_cs]=b&-4|this.cpl;dbg_assert((this.sreg[reg_cs]&3)===this.cpl);this.instruction_pointer=this.get_seg(reg_cs)+g|0}else throw this.debug.unimpl(\"load system segment descriptor, type = \"+\n(d.access&15)+\" (\"+{9:\"Available 386 TSS\",11:\"Busy 386 TSS\",4:\"286 Call Gate\",12:\"386 Call Gate\"}[d.access&15]+\")\");else{d.is_executable||(dbg_log(\"#gp non-executable cs: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));if(d.dc_bit)d.dpl>this.cpl&&(dbg_log(\"#gp cs dpl > cpl: \"+h(b),LOG_CPU),this.trigger_gp(b&-4));else if(d.rpl>this.cpl||d.dpl!==this.cpl)dbg_log(\"#gp cs rpl > cpl or dpl != cpl: \"+h(b),LOG_CPU),this.trigger_gp(b&-4);d.is_present||(dbg_log(\"#NP for loading not-present in cs sel=\"+h(b,4),LOG_CPU),\ndbg_trace(LOG_CPU),this.trigger_np(b&-4));c&&(this.is_osize_32()?(this.writable_or_pagefault(this.get_stack_pointer(-8),8),this.push32(this.sreg[reg_cs]),this.push32(this.get_real_eip())):(this.writable_or_pagefault(this.get_stack_pointer(-4),4),this.push16(this.sreg[reg_cs]),this.push16(this.get_real_eip())));dbg_assert(a>>>0<=d.effective_limit,\"todo: #gp\");this.update_cs_size(d.size);this.segment_is_null[reg_cs]=0;this.segment_limits[reg_cs]=d.effective_limit;this.segment_offsets[reg_cs]=d.base;\nthis.sreg[reg_cs]=b&-4|this.cpl;this.instruction_pointer=this.get_seg(reg_cs)+a|0}CPU_LOG_VERBOSE&&this.debug.dump_state(\"far \"+[\"jump\",\"call\"][+c]+\" end\")}};\nCPU.prototype.get_tss_stack_addr=function(a){if(this.tss_size_32){a=(a<<3)+4|0;if((a+5|0)>this.segment_limits[reg_tr])throw this.debug.unimpl(\"#TS handler\");a=a+this.segment_offsets[reg_tr]|0;dbg_assert(4090>=(a&4095))}else{a=(a<<2)+2|0;if((a+5|0)>this.segment_limits[reg_tr])throw this.debug.unimpl(\"#TS handler\");a=a+this.segment_offsets[reg_tr]|0;dbg_assert(4092>=(a&4095))}this.paging&&(a=this.translate_address_system_read(a));return a};\nCPU.prototype.do_task_switch=function(a,b){dbg_assert(this.tss_size_32,\"TODO\");dbg_log(\"do_task_switch sel=\"+h(a),LOG_CPU);var c=this.lookup_segment_selector(a);dbg_assert(3===(c.type|2)||11===(c.type|2));var d=3>=c.type,e=2===(c.type&2);if(!c.is_valid||c.is_null||!c.from_gdt)throw this.debug.unimpl(\"#GP handler\");if(11===(c.access&31))throw this.debug.unimpl(\"#GP handler\");if(!c.is_present)throw this.debug.unimpl(\"#NP handler\");if(103>c.effective_limit)throw this.debug.unimpl(\"#NP handler\");var f=\nthis.segment_offsets[reg_tr],g=this.get_eflags();e&&(g&=~flag_nt);this.writable_or_pagefault(f,102);this.safe_write32(f+TSR_EIP,this.get_real_eip());this.safe_write32(f+TSR_EFLAGS,g);this.safe_write32(f+TSR_EAX,this.reg32s[reg_eax]);this.safe_write32(f+TSR_ECX,this.reg32s[reg_ecx]);this.safe_write32(f+TSR_EDX,this.reg32s[reg_edx]);this.safe_write32(f+TSR_EBX,this.reg32s[reg_ebx]);this.safe_write32(f+TSR_ESP,this.reg32s[reg_esp]);this.safe_write32(f+TSR_EBP,this.reg32s[reg_ebp]);this.safe_write32(f+\nTSR_ESI,this.reg32s[reg_esi]);this.safe_write32(f+TSR_EDI,this.reg32s[reg_edi]);this.safe_write32(f+TSR_ES,this.sreg[reg_es]);this.safe_write32(f+TSR_CS,this.sreg[reg_cs]);this.safe_write32(f+TSR_SS,this.sreg[reg_ss]);this.safe_write32(f+TSR_DS,this.sreg[reg_ds]);this.safe_write32(f+TSR_FS,this.sreg[reg_fs]);this.safe_write32(f+TSR_GS,this.sreg[reg_gs]);this.write8(c.table_offset+5|0,this.read8(c.table_offset+5|0)|2);e=c.base;dbg_assert(!d,\"unimplemented\");this.safe_write16(e+TSR_BACKLINK,this.sreg[reg_tr]);\ng=this.safe_read32s(e+TSR_CR3);this.flags&=~flag_vm;var k=this.safe_read32s(e+TSR_EIP),l=this.safe_read16(e+TSR_CS),m=this.lookup_segment_selector(l);if(m.is_null)throw dbg_log(\"null cs\",LOG_CPU),this.debug.unimpl(\"#TS handler\");if(!m.is_valid)throw dbg_log(\"invalid cs: \"+h(a),LOG_CPU),this.debug.unimpl(\"#TS handler\");if(m.is_system)throw this.debug.unimpl(\"#TS handler\");if(!m.is_executable)throw this.debug.unimpl(\"#TS handler\");if(m.dc_bit&&m.dpl>m.rpl)throw dbg_log(\"cs conforming and dpl > rpl: \"+\nh(a),LOG_CPU),this.debug.unimpl(\"#TS handler\");if(!m.dc_bit&&m.dpl!==m.rpl)throw dbg_log(\"cs non-conforming and dpl != rpl: \"+h(a),LOG_CPU),this.debug.unimpl(\"#TS handler\");if(!m.is_present)throw dbg_log(\"#NP for loading not-present in cs sel=\"+h(a,4),LOG_CPU),this.debug.unimpl(\"#TS handler\");this.segment_is_null[reg_cs]=0;this.segment_limits[reg_cs]=m.effective_limit;this.segment_offsets[reg_cs]=m.base;this.sreg[reg_cs]=l;this.cpl=m.dpl;this.cpl_changed();dbg_assert((this.sreg[reg_cs]&3)===this.cpl);\ndbg_assert(k>>>0<=m.effective_limit,\"todo: #gp\");this.update_cs_size(m.size);l=this.safe_read32s(e+TSR_EFLAGS);this.safe_write32(f+TSR_BACKLINK,a);l|=flag_nt;if(l&flag_vm)throw this.debug.unimpl(\"task switch to VM mode\");this.update_eflags(l);this.flags|=flag_nt;f=this.safe_read16(e+TSR_LDT);this.load_ldt(f);this.reg32s[reg_eax]=this.safe_read32s(e+TSR_EAX);this.reg32s[reg_ecx]=this.safe_read32s(e+TSR_ECX);this.reg32s[reg_edx]=this.safe_read32s(e+TSR_EDX);this.reg32s[reg_ebx]=this.safe_read32s(e+\nTSR_EBX);this.reg32s[reg_esp]=this.safe_read32s(e+TSR_ESP);this.reg32s[reg_ebp]=this.safe_read32s(e+TSR_EBP);this.reg32s[reg_esi]=this.safe_read32s(e+TSR_ESI);this.reg32s[reg_edi]=this.safe_read32s(e+TSR_EDI);this.switch_seg(reg_es,this.safe_read16(e+TSR_ES));this.switch_seg(reg_ss,this.safe_read16(e+TSR_SS));this.switch_seg(reg_ds,this.safe_read16(e+TSR_DS));this.switch_seg(reg_fs,this.safe_read16(e+TSR_FS));this.switch_seg(reg_gs,this.safe_read16(e+TSR_GS));this.instruction_pointer=this.get_seg(reg_cs)+\nk|0;this.segment_offsets[reg_tr]=c.base;this.segment_limits[reg_tr]=c.effective_limit;this.sreg[reg_tr]=a;this.cr[3]=g;dbg_assert(0===(this.cr[3]&4095));this.clear_tlb();this.cr[0]|=CR0_TS;!1!==b&&(d?this.push16(b&65535):this.push32(b))};CPU.prototype.hlt_op=function(){this.cpl&&this.trigger_gp(0);if(0===(this.flags&flag_interrupt))throw this.debug.show(\"cpu halted\"),this.bus.send(\"cpu-event-halt\"),DEBUG&&this.debug.dump_regs(),\"HALT\";this.in_hlt=!0;throw MAGIC_CPU_EXCEPTION;};\nCPU.prototype.raise_exception=function(a){this.call_interrupt_vector(a,!1,!1);throw MAGIC_CPU_EXCEPTION;};CPU.prototype.raise_exception_with_code=function(a,b){dbg_assert(\"number\"===typeof b);this.call_interrupt_vector(a,!1,b);throw MAGIC_CPU_EXCEPTION;};CPU.prototype.trigger_de=function(){this.instruction_pointer=this.previous_ip;this.raise_exception(0)};CPU.prototype.trigger_ud=function(){this.instruction_pointer=this.previous_ip;this.raise_exception(6)};\nCPU.prototype.trigger_nm=function(){this.instruction_pointer=this.previous_ip;this.raise_exception(7)};CPU.prototype.trigger_ts=function(a){this.instruction_pointer=this.previous_ip;this.raise_exception_with_code(10,a)};CPU.prototype.trigger_gp=function(a){this.instruction_pointer=this.previous_ip;this.raise_exception_with_code(13,a)};CPU.prototype.trigger_np=function(a){this.instruction_pointer=this.previous_ip;this.raise_exception_with_code(11,a)};\nCPU.prototype.trigger_ss=function(a){this.instruction_pointer=this.previous_ip;this.raise_exception_with_code(12,a)};CPU.prototype.task_switch_test=function(){this.cr[0]&(CR0_EM|CR0_TS)&&this.trigger_nm()};CPU.prototype.task_switch_test_mmx=function(){this.cr[0]&(CR0_EM|CR0_TS)&&(this.cr[0]&CR0_TS?this.trigger_nm():this.trigger_ud())};CPU.prototype.todo=function(){if(DEBUG)throw dbg_trace(),\"TODO\";this.trigger_ud()};\nCPU.prototype.undefined_instruction=function(){dbg_assert(!1,\"Possible fault: undefined instruction\");this.trigger_ud()};CPU.prototype.unimplemented_sse=function(){dbg_log(\"No SSE\",LOG_CPU);dbg_assert(!1);this.trigger_ud()};CPU.prototype.get_seg_prefix_ds=function(){return this.get_seg_prefix(reg_ds)};CPU.prototype.get_seg_prefix_ss=function(){return this.get_seg_prefix(reg_ss)};CPU.prototype.get_seg_prefix_cs=function(){return this.get_seg_prefix(reg_cs)};\nCPU.prototype.get_seg_prefix=function(a){var b=this.prefixes&PREFIX_MASK_SEGMENT;return b?b===SEG_PREFIX_ZERO?0:this.get_seg(b-1):this.get_seg(a)};CPU.prototype.get_seg=function(a){dbg_assert(0<=a&&8>a);this.protected_mode&&this.segment_is_null[a]&&(dbg_assert(a!==reg_cs&&a!==reg_ss),dbg_trace(),dbg_log(\"#gp Use null segment: \"+a+\" sel=\"+h(this.sreg[a],4),LOG_CPU),this.trigger_gp(0));return this.segment_offsets[a]};\nCPU.prototype.read_e8=function(){return 192>this.modrm_byte?this.safe_read8(this.modrm_resolve(this.modrm_byte)):this.reg8[this.modrm_byte<<2&12|this.modrm_byte>>2&1]};CPU.prototype.read_e8s=function(){return this.read_e8()<<24>>24};CPU.prototype.read_e16=function(){return 192>this.modrm_byte?this.safe_read16(this.modrm_resolve(this.modrm_byte)):this.reg16[this.modrm_byte<<1&14]};CPU.prototype.read_e16s=function(){return this.read_e16()<<16>>16};\nCPU.prototype.read_e32s=function(){return 192>this.modrm_byte?this.safe_read32s(this.modrm_resolve(this.modrm_byte)):this.reg32s[this.modrm_byte&7]};CPU.prototype.read_e32=function(){return this.read_e32s()>>>0};CPU.prototype.read_mmx_mem32s=function(){return 192>this.modrm_byte?this.safe_read32s(this.modrm_resolve(this.modrm_byte)):this.reg_mmxs[2*(this.modrm_byte&7)]};\nCPU.prototype.read_mmx_mem64s=function(){return 192>this.modrm_byte?this.safe_read64s(this.modrm_resolve(this.modrm_byte)):this.create_atom64s(this.reg_mmxs[2*(this.modrm_byte&7)],this.reg_mmxs[2*(this.modrm_byte&7)+1])};CPU.prototype.read_xmm_mem64s=function(){if(192>this.modrm_byte)return this.safe_read64s(this.modrm_resolve(this.modrm_byte));var a=(this.modrm_byte&7)<<2;return this.create_atom64s(this.reg_xmm32s[a],this.reg_xmm32s[a|1])};\nCPU.prototype.read_xmm_mem128s=function(){if(192>this.modrm_byte)return this.safe_read128s_aligned(this.modrm_resolve(this.modrm_byte));var a=(this.modrm_byte&7)<<2;return this.create_atom128s(this.reg_xmm32s[a],this.reg_xmm32s[a|1],this.reg_xmm32s[a|2],this.reg_xmm32s[a|3])};\nCPU.prototype.read_xmm_mem128s_unaligned=function(){if(192>this.modrm_byte)return this.safe_read128s_unaligned(this.modrm_resolve(this.modrm_byte));var a=(this.modrm_byte&7)<<2;return this.create_atom128s(this.reg_xmm32s[a],this.reg_xmm32s[a|1],this.reg_xmm32s[a|2],this.reg_xmm32s[a|3])};CPU.prototype.set_e8=function(a){if(192>this.modrm_byte){var b=this.modrm_resolve(this.modrm_byte);this.safe_write8(b,a)}else this.reg8[this.modrm_byte<<2&12|this.modrm_byte>>2&1]=a};\nCPU.prototype.set_e16=function(a){if(192>this.modrm_byte){var b=this.modrm_resolve(this.modrm_byte);this.safe_write16(b,a)}else this.reg16[this.modrm_byte<<1&14]=a};CPU.prototype.set_e32=function(a){if(192>this.modrm_byte){var b=this.modrm_resolve(this.modrm_byte);this.safe_write32(b,a)}else this.reg32s[this.modrm_byte&7]=a};\nCPU.prototype.set_mmx_mem64s=function(a,b){if(192>this.modrm_byte){var c=this.modrm_resolve(this.modrm_byte);this.safe_write64(c,a,b)}else this.reg_mmxs[2*(this.modrm_byte&7)]=a,this.reg_mmxs[2*(this.modrm_byte&7)+1]=b};CPU.prototype.read_write_e8=function(){if(192>this.modrm_byte){var a=this.modrm_resolve(this.modrm_byte);this.phys_addr=this.translate_address_write(a);return this.read8(this.phys_addr)}return this.reg8[this.modrm_byte<<2&12|this.modrm_byte>>2&1]};\nCPU.prototype.write_e8=function(a){192>this.modrm_byte?this.write8(this.phys_addr,a):this.reg8[this.modrm_byte<<2&12|this.modrm_byte>>2&1]=a};\nCPU.prototype.read_write_e16=function(){if(192>this.modrm_byte){var a=this.modrm_resolve(this.modrm_byte);this.phys_addr=this.translate_address_write(a);if(this.paging&&4095===(a&4095))return this.phys_addr_high=this.translate_address_write(a+1|0),dbg_assert(this.phys_addr_high),this.virt_boundary_read16(this.phys_addr,this.phys_addr_high);this.phys_addr_high=0;return this.read16(this.phys_addr)}return this.reg16[this.modrm_byte<<1&14]};\nCPU.prototype.write_e16=function(a){192>this.modrm_byte?this.phys_addr_high?this.virt_boundary_write16(this.phys_addr,this.phys_addr_high,a):this.write16(this.phys_addr,a):this.reg16[this.modrm_byte<<1&14]=a};\nCPU.prototype.read_write_e32=function(){if(192>this.modrm_byte){var a=this.modrm_resolve(this.modrm_byte);this.phys_addr=this.translate_address_write(a);if(this.paging&&4093<=(a&4095))return this.phys_addr_high=this.translate_address_write(a+3&-4)|a+3&3,dbg_assert(this.phys_addr_high),this.virt_boundary_read32s(this.phys_addr,this.phys_addr_high);this.phys_addr_high=0;return this.read32s(this.phys_addr)}return this.reg32s[this.modrm_byte&7]};\nCPU.prototype.write_e32=function(a){192>this.modrm_byte?this.phys_addr_high?this.virt_boundary_write32(this.phys_addr,this.phys_addr_high,a):this.write32(this.phys_addr,a):this.reg32s[this.modrm_byte&7]=a};CPU.prototype.read_reg_e16=function(){return this.reg16[this.modrm_byte<<1&14]};CPU.prototype.write_reg_e16=function(a){this.reg16[this.modrm_byte<<1&14]=a};CPU.prototype.read_reg_e32s=function(){return this.reg32s[this.modrm_byte&7]};\nCPU.prototype.write_reg_e32=function(a){this.reg32s[this.modrm_byte&7]=a};CPU.prototype.read_g8=function(){return this.reg8[this.modrm_byte>>1&12|this.modrm_byte>>5&1]};CPU.prototype.write_g8=function(a){this.reg8[this.modrm_byte>>1&12|this.modrm_byte>>5&1]=a};CPU.prototype.read_g16=function(){return this.reg16[this.modrm_byte>>2&14]};CPU.prototype.read_g16s=function(){return this.reg16s[this.modrm_byte>>2&14]};CPU.prototype.write_g16=function(a){this.reg16[this.modrm_byte>>2&14]=a};\nCPU.prototype.read_g32s=function(){return this.reg32s[this.modrm_byte>>3&7]};CPU.prototype.write_g32=function(a){this.reg32[this.modrm_byte>>3&7]=a};CPU.prototype.read_xmm64s=function(){return this.create_atom64s(this.reg_xmm32s[(this.modrm_byte>>3&7)<<2],this.reg_xmm32s[(this.modrm_byte>>3&7)<<2|1])};CPU.prototype.read_xmm128s=function(){var a=(this.modrm_byte>>3&7)<<2;return this.create_atom128s(this.reg_xmm32s[a|0],this.reg_xmm32s[a|1],this.reg_xmm32s[a|2],this.reg_xmm32s[a|3])};\nCPU.prototype.read_mmx64s=function(){return this.create_atom64s(this.reg_mmxs[2*(this.modrm_byte>>3&7)],this.reg_mmxs[2*(this.modrm_byte>>3&7)+1])};CPU.prototype.write_mmx64s=function(a,b){this.reg_mmxs[2*(this.modrm_byte>>3&7)]=a;this.reg_mmxs[2*(this.modrm_byte>>3&7)+1]=b};CPU.prototype.write_xmm64=function(a,b){var c=(this.modrm_byte>>3&7)<<2;this.reg_xmm32s[c]=a;this.reg_xmm32s[c+1]=b};\nCPU.prototype.write_xmm128s=function(a,b,c,d){var e=(this.modrm_byte>>3&7)<<2;this.reg_xmm32s[e]=a;this.reg_xmm32s[e+1]=b;this.reg_xmm32s[e+2]=c;this.reg_xmm32s[e+3]=d};CPU.prototype.pic_call_irq=function(a){try{this.previous_ip=this.instruction_pointer,this.call_interrupt_vector(a,!1,!1)}catch(b){this.exception_cleanup(b)}};\nCPU.prototype.handle_irqs=function(){dbg_assert(!this.page_fault);this.diverged();this.flags&flag_interrupt&&!this.page_fault&&(this.devices.pic&&this.devices.pic.acknowledge_irq(),this.devices.apic&&this.devices.apic.acknowledge_irq())};CPU.prototype.device_raise_irq=function(a){dbg_assert(1===arguments.length);this.devices.pic&&this.devices.pic.set_irq(a);this.devices.ioapic&&this.devices.ioapic.set_irq(a)};\nCPU.prototype.device_lower_irq=function(a){this.devices.pic&&this.devices.pic.clear_irq(a);this.devices.ioapic&&this.devices.ioapic.clear_irq(a)};\nCPU.prototype.test_privileges_for_io=function(a,b){if(this.protected_mode&&(this.cpl>this.getiopl()||this.flags&flag_vm)){this.tss_size_32||(dbg_log(\"#GP for port io, 16-bit TSS  port=\"+h(a)+\" size=\"+b,LOG_CPU),CPU_LOG_VERBOSE&&this.debug.dump_state(),this.trigger_gp(0));var c=this.segment_limits[reg_tr],d=this.segment_offsets[reg_tr];if(103<=c){dbg_assert(4095>(d+100+2&4095));var e=this.read16(this.translate_address_system_read(d+100+2|0));if(c>=(e+((a+b-1|0)>>3)|0)&&(c=(1<<b)-1<<(a&7),d=this.translate_address_system_read(d+\ne+(a>>3)|0),e=c&65280?this.read16(d):this.read8(d),dbg_assert(4095>(d&4095)),!(e&c)))return}dbg_log(\"#GP for port io  port=\"+h(a)+\" size=\"+b,LOG_CPU);CPU_LOG_VERBOSE&&this.debug.dump_state();this.trigger_gp(0)}};\nCPU.prototype.cpuid=function(){var a=0,b=0,c=0,d=0;switch(this.reg32s[reg_eax]){case 0:a=5;d=1970169159;c=1231384169;b=1818588270;break;case 1:a=3939;d=67584;b=1082130432;VMWARE_HYPERVISOR_PORT&&(b|=-2147483648);c=(this.fpu?1:0)|43320;ENABLE_ACPI&&this.apic_enabled&&(c|=512);break;case 2:a=1717260289;b=d=0;c=8024064;break;case 4:switch(this.reg32s[reg_ecx]){case 0:a=289;d=29360191;b=63;c=1;break;case 1:a=290;d=29360191;b=63;c=1;break;case 2:a=323,d=96469055,b=4095,c=1}break;case 5:d=a=64;b=3;c=1319200;\nbreak;case -2147483648:a=5;break;case 1073741824:VMWARE_HYPERVISOR_PORT&&(d=1635208534,b=1297507698,c=1701994871);break;default:dbg_log(\"cpuid: unimplemented eax: \"+h(this.reg32[reg_eax]),LOG_CPU)}dbg_log(\"cpuid: eax=\"+h(this.reg32[reg_eax],8)+\" cl=\"+h(this.reg8[reg_cl],2),LOG_CPU);this.reg32s[reg_eax]=a;this.reg32s[reg_ecx]=b;this.reg32s[reg_edx]=c;this.reg32s[reg_ebx]=d};\nCPU.prototype.update_cs_size=function(a){dbg_assert(\"boolean\"===typeof a);this.is_32!==a&&(this.clear_instruction_cache(),this.is_32=a,this.update_operand_size())};CPU.prototype.update_operand_size=function(){this.table=this.is_32?this.table32:this.table16};\nCPU.prototype.lookup_segment_selector=function(a){dbg_assert(\"number\"===typeof a&&0<=a&&65536>a);var b=0===(a&4),c=a&-8;var d={rpl:a&3,from_gdt:b,is_null:!1,is_valid:!0,base:0,access:0,flags:0,type:0,dpl:0,is_system:!1,is_present:!1,is_executable:!1,rw_bit:!1,dc_bit:!1,size:!1,is_conforming_executable:!1,effective_limit:0,is_writable:!1,is_readable:!1,table_offset:0,raw0:0,raw1:0};if(b){var e=this.gdtr_offset;var f=this.gdtr_size}else e=this.segment_offsets[reg_ldtr],f=this.segment_limits[reg_ldtr];\nif(b&&0===c)return d.is_null=!0,d;if((a|7)>f)return dbg_log(\"Selector \"+h(a,4)+\" is outside of the \"+(b?\"g\":\"l\")+\"dt limits\",LOG_CPU),d.is_valid=!1,d;e=e+c|0;this.paging&&(e=this.translate_address_system_read(e));d.table_offset=e;d.base=this.read16(e+2|0)|this.read8(e+4|0)<<16|this.read8(e+7|0)<<24;d.access=this.read8(e+5|0);d.flags=this.read8(e+6|0)>>4;d.raw0=this.read32s(e|0);d.raw1=this.read32s(e+4|0);d.type=d.access&15;d.dpl=d.access>>5&3;d.is_system=0===(d.access&16);d.is_present=128===(d.access&\n128);d.is_executable=8===(d.access&8);d.rw_bit=2===(d.access&2);d.dc_bit=4===(d.access&4);d.is_conforming_executable=d.dc_bit&&d.is_executable;d.size=4===(d.flags&4);a=this.read16(e)|(this.read8(e+6|0)&15)<<16;d.effective_limit=d.flags&8?(a<<12|4095)>>>0:a;d.is_writable=d.rw_bit&&!d.is_executable;d.is_readable=d.rw_bit||!d.is_executable;return d};\nCPU.prototype.switch_seg=function(a,b){dbg_assert(0<=a&&5>=a);dbg_assert(\"number\"===typeof b&&65536>b&&0<=b);if(!this.protected_mode||this.vm86_mode())this.sreg[a]=b,this.segment_is_null[a]=0,this.segment_offsets[a]=b<<4,a===reg_ss&&(this.stack_size_32=!1);else{var c=this.lookup_segment_selector(b);if(a===reg_ss)c.is_null&&(dbg_log(\"#GP for loading 0 in SS sel=\"+h(b,4),LOG_CPU),dbg_trace(LOG_CPU),this.trigger_gp(0)),c.is_valid&&!c.is_system&&c.rpl===this.cpl&&c.is_writable&&c.dpl===this.cpl||(dbg_log(\"#GP for loading invalid in SS sel=\"+\nh(b,4),LOG_CPU),dbg_trace(LOG_CPU),this.trigger_gp(b&-4)),c.is_present||(dbg_log(\"#SS for loading non-present in SS sel=\"+h(b,4),LOG_CPU),dbg_trace(LOG_CPU),this.trigger_ss(b&-4)),this.stack_size_32=c.size;else if(a===reg_cs)dbg_assert(!1);else{if(c.is_null){this.sreg[a]=b;this.segment_is_null[a]=1;return}if(!c.is_valid||c.is_system||!c.is_readable||!c.is_conforming_executable&&(c.rpl>c.dpl||this.cpl>c.dpl))dbg_log(\"#GP for loading invalid in seg \"+a+\" sel=\"+h(b,4),LOG_CPU),this.debug.dump_state(),\nthis.debug.dump_regs(),dbg_trace(LOG_CPU),this.trigger_gp(b&-4);c.is_present||(dbg_log(\"#NP for loading not-present in seg \"+a+\" sel=\"+h(b,4),LOG_CPU),dbg_trace(LOG_CPU),this.trigger_np(b&-4))}this.segment_is_null[a]=0;this.segment_limits[a]=c.effective_limit;this.segment_offsets[a]=c.base;this.sreg[a]=b}};\nCPU.prototype.load_tr=function(a){var b=this.lookup_segment_selector(a);dbg_assert(b.is_valid);if(!b.from_gdt)throw this.debug.unimpl(\"TR can only be loaded from GDT\");if(b.is_null)throw dbg_log(\"#GP(0) | tried to load null selector (ltr)\"),this.debug.unimpl(\"#GP handler\");if(!b.is_system)throw dbg_log(\"#GP | ltr: not a system entry\"),this.debug.unimpl(\"#GP handler (happens when running kvm-unit-test without ACPI)\");if(9!==b.type&&1!==b.type)throw dbg_log(\"#GP | ltr: invalid type (type = \"+h(b.type)+\n\")\"),this.debug.unimpl(\"#GP handler\");if(!b.is_present)throw dbg_log(\"#NT | present bit not set (ltr)\"),this.debug.unimpl(\"#NT handler\");this.tss_size_32=9===b.type;this.segment_offsets[reg_tr]=b.base;this.segment_limits[reg_tr]=b.effective_limit;this.sreg[reg_tr]=a;this.write8(b.table_offset+5|0,this.read8(b.table_offset+5|0)|2)};\nCPU.prototype.load_ldt=function(a){var b=this.lookup_segment_selector(a);if(b.is_null)this.segment_offsets[reg_ldtr]=0,this.segment_limits[reg_ldtr]=0;else{dbg_assert(b.is_valid);if(!b.from_gdt)throw this.debug.unimpl(\"LDTR can only be loaded from GDT\");if(!b.is_present)throw dbg_log(\"lldt: present bit not set\"),this.debug.unimpl(\"#GP handler\");if(!b.is_system)throw dbg_log(\"lldt: not a system entry\"),this.debug.unimpl(\"#GP handler\");if(2!==b.type)throw dbg_log(\"lldt: invalid type (\"+b.type+\")\"),\nthis.debug.unimpl(\"#GP handler\");this.segment_offsets[reg_ldtr]=b.base;this.segment_limits[reg_ldtr]=b.effective_limit;this.sreg[reg_ldtr]=a}};CPU.prototype.arpl=function(a,b){this.flags_changed&=~flag_zero;if((a&3)<(this.reg16[b]&3))return this.flags|=flag_zero,a&-4|this.reg16[b]&3;this.flags&=~flag_zero;return a};\nCPU.prototype.lar=function(a,b){dbg_log(\"lar sel=\"+h(a,4),LOG_CPU);var c=this.lookup_segment_selector(a);this.flags_changed&=~flag_zero;var d=c.dpl<this.cpl||c.dpl<c.rpl;if(c.is_null||!c.is_valid||(c.is_system?58817>>c.type&1||d:!c.is_conforming_executable&&d))return this.flags&=~flag_zero,dbg_log(\"lar: invalid selector=\"+h(a,4)+\" is_null=\"+c.is_null,LOG_CPU),b;this.flags|=flag_zero;return c.raw1&16776960};\nCPU.prototype.lsl=function(a,b){dbg_log(\"lsl sel=\"+h(a,4),LOG_CPU);var c=this.lookup_segment_selector(a);this.flags_changed&=~flag_zero;var d=c.dpl<this.cpl||c.dpl<c.rpl;if(c.is_null||!c.is_valid||(c.is_system?62833>>c.type&1||d:!c.is_conforming_executable&&d))return this.flags&=~flag_zero,dbg_log(\"lsl: invalid  selector=\"+h(a,4)+\" is_null=\"+c.is_null,LOG_CPU),b;this.flags|=flag_zero;return c.effective_limit|0};\nCPU.prototype.verr=function(a){var b=this.lookup_segment_selector(a);this.flags_changed&=~flag_zero;b.is_null||!b.is_valid||b.is_system||!b.is_readable||!b.is_conforming_executable&&(b.dpl<this.cpl||b.dpl<b.rpl)?(dbg_log(\"verr -> invalid. selector=\"+h(a,4),LOG_CPU),this.flags&=~flag_zero):(dbg_log(\"verr -> valid. selector=\"+h(a,4),LOG_CPU),this.flags|=flag_zero)};\nCPU.prototype.verw=function(a){var b=this.lookup_segment_selector(a);this.flags_changed&=~flag_zero;b.is_null||!b.is_valid||b.is_system||!b.is_writable||b.dpl<this.cpl||b.dpl<b.rpl?(dbg_log(\"verw invalid  \"+h(a)+\" \"+b.is_null+\" \"+!b.is_valid+\" \"+b.is_system+\" \"+!b.is_writable+\" \"+(b.dpl<this.cpl)+\" \"+(b.dpl<b.rpl)+\" \"+LOG_CPU),this.flags&=~flag_zero):(dbg_log(\"verw valid\",LOG_CPU),this.flags|=flag_zero)};CPU.prototype.clear_tlb=function(){this.last_virt_esp=this.last_virt_eip=-1;this.tlb_info.set(this.tlb_info_global)};\nCPU.prototype.full_clear_tlb=function(){for(var a=new Int32Array(this.tlb_info_global.buffer),b=0;262144>b;)a[b++]=a[b++]=a[b++]=a[b++]=0;this.clear_tlb()};CPU.prototype.invlpg=function(a){a>>>=12;this.tlb_info[a]=0;this.tlb_info_global[a]=0;this.last_virt_esp=this.last_virt_eip=-1};CPU.prototype.translate_address_read=function(a){return this.paging?3===this.cpl?this.translate_address_user_read(a):this.translate_address_system_read(a):a};\nCPU.prototype.translate_address_write=function(a){return this.paging?3===this.cpl?this.translate_address_user_write(a):this.translate_address_system_write(a):a};CPU.prototype.translate_address_user_write=function(a){if(!this.paging)return a;var b=a>>>12;return this.tlb_info[b]&TLB_USER_WRITE?this.tlb_data[b]^a:this.do_page_translation(a,1,1)|a&4095};\nCPU.prototype.translate_address_user_read=function(a){if(!this.paging)return a;var b=a>>>12;return this.tlb_info[b]&TLB_USER_READ?this.tlb_data[b]^a:this.do_page_translation(a,0,1)|a&4095};CPU.prototype.translate_address_system_write=function(a){if(!this.paging)return a;var b=a>>>12;return this.tlb_info[b]&TLB_SYSTEM_WRITE?this.tlb_data[b]^a:this.do_page_translation(a,1,0)|a&4095};\nCPU.prototype.translate_address_system_read=function(a){if(!this.paging)return a;var b=a>>>12;return this.tlb_info[b]&TLB_SYSTEM_READ?this.tlb_data[b]^a:this.do_page_translation(a,0,0)|a&4095};\nCPU.prototype.do_page_translation=function(a,b,c){var d=a>>>12,e=(this.cr[3]>>>2)+(d>>10)|0,f=this.mem32s[e],g=!0,k=!0;dbg_assert(2147483648>a);f&1||(this.cr[2]=a,this.trigger_pagefault(b,c,0),dbg_assert(!1));0===(f&2)&&(g=!1,b&&(c||this.cr[0]&CR0_WP)&&(this.cr[2]=a,this.trigger_pagefault(b,c,1),dbg_assert(!1)));0===(f&4)&&(k=!1,c&&(this.cr[2]=a,this.trigger_pagefault(b,c,1),dbg_assert(!1)));if(f&this.page_size_extensions)this.mem32s[e]=f|32|b<<6,a=f&4290772992|a&4190208,f&=256;else{var l=((f&4294963200)>>>\n2)+(d&1023)|0,m=this.mem32s[l];0===(m&1)&&(this.cr[2]=a,this.trigger_pagefault(b,c,0),dbg_assert(!1));0===(m&2)&&(g=!1,b&&(c||this.cr[0]&CR0_WP)&&(this.cr[2]=a,this.trigger_pagefault(b,c,1),dbg_assert(!1)));0===(m&4)&&(k=!1,c&&(this.cr[2]=a,this.trigger_pagefault(b,c,1),dbg_assert(!1)));this.write_aligned32(e,f|32);this.write_aligned32(l,m|32|b<<6);a=m&4294963200;f=m&256}this.tlb_data[d]=a^d<<12;g=k?g?TLB_SYSTEM_READ|TLB_SYSTEM_WRITE|TLB_USER_READ|TLB_USER_WRITE:TLB_SYSTEM_READ|TLB_USER_READ:g?TLB_SYSTEM_READ|\nTLB_SYSTEM_WRITE:TLB_SYSTEM_READ;this.tlb_info[d]=g;f&&this.cr[4]&CR4_PGE&&(this.tlb_info_global[d]=g);return a};CPU.prototype.writable_or_pagefault=function(a,b){dbg_assert(4096>b,\"not supported yet\");dbg_assert(0<b);if(this.paging){var c=3===this.cpl?1:0,d=c?TLB_USER_WRITE:TLB_SYSTEM_WRITE,e=a>>>12;0===(this.tlb_info[e]&d)&&this.do_page_translation(a,1,c);4096<=(a&4095)+b-1&&0===(this.tlb_info[e+1|0]&d)&&this.do_page_translation(a+b-1|0,1,c)}};\nCPU.prototype.trigger_pagefault=function(a,b,c){LOG_PAGE_FAULTS&&(dbg_log(\"page fault w=\"+a+\" u=\"+b+\" p=\"+c+\" eip=\"+h(this.previous_ip>>>0,8)+\" cr2=\"+h(this.cr[2]>>>0,8),LOG_CPU),dbg_trace(LOG_CPU));if(this.page_fault)throw dbg_trace(LOG_CPU),this.debug.unimpl(\"Double fault\");var d=this.cr[2]>>>12;this.tlb_info[d]=0;this.tlb_info_global[d]=0;this.instruction_pointer=this.previous_ip;this.page_fault=!0;this.call_interrupt_vector(14,!1,b<<2|a<<1|c);throw MAGIC_CPU_EXCEPTION;};\nCPU.prototype.is_osize_32=function(){return this.is_32!==((this.prefixes&PREFIX_MASK_OPSIZE)===PREFIX_MASK_OPSIZE)};CPU.prototype.is_asize_32=function(){return this.is_32!==((this.prefixes&PREFIX_MASK_ADDRSIZE)===PREFIX_MASK_ADDRSIZE)};CPU.prototype.get_reg_asize=function(a){dbg_assert(a===reg_ecx||a===reg_esi||a===reg_edi);a=this.reg32s[a];return this.is_asize_32()?a:a&65535};CPU.prototype.set_ecx_asize=function(a){this.is_asize_32()?this.reg32s[reg_ecx]=a:this.reg16[reg_cx]=a};\nCPU.prototype.add_reg_asize=function(a,b){dbg_assert(a===reg_ecx||a===reg_esi||a===reg_edi);this.is_asize_32()?this.reg32s[a]+=b:this.reg16[a<<1]+=b};CPU.prototype.decr_ecx_asize=function(){return this.is_asize_32()?--this.reg32s[reg_ecx]:--this.reg16[reg_cx]};\"undefined\"!==typeof window?window.CPU=CPU:\"undefined\"!==typeof module&&\"undefined\"!==typeof module.exports?module.exports.CPU=CPU:\"function\"===typeof importScripts&&(self.CPU=CPU);function DynamicTranslator(a){dbg_assert(!1);this.clear_cache=function(){};this.cycle_translated=function(){}};(function(){CPU.prototype.modrm_table16=Array(192);CPU.prototype.modrm_table32=Array(192);CPU.prototype.sib_table=Array(256);CPU.prototype.modrm_table16[0]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]+a.reg16[reg_si]&65535)|0};CPU.prototype.modrm_table16[64]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]+a.reg16[reg_si]+a.read_disp8s()&65535)|0};CPU.prototype.modrm_table16[128]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]+a.reg16[reg_si]+a.read_disp16()&65535)|\n0};CPU.prototype.modrm_table16[1]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]+a.reg16[reg_di]&65535)|0};CPU.prototype.modrm_table16[65]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]+a.reg16[reg_di]+a.read_disp8s()&65535)|0};CPU.prototype.modrm_table16[129]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]+a.reg16[reg_di]+a.read_disp16()&65535)|0};CPU.prototype.modrm_table16[2]=function(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]+a.reg16[reg_si]&65535)|0};CPU.prototype.modrm_table16[66]=\nfunction(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]+a.reg16[reg_si]+a.read_disp8s()&65535)|0};CPU.prototype.modrm_table16[130]=function(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]+a.reg16[reg_si]+a.read_disp16()&65535)|0};CPU.prototype.modrm_table16[3]=function(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]+a.reg16[reg_di]&65535)|0};CPU.prototype.modrm_table16[67]=function(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]+a.reg16[reg_di]+a.read_disp8s()&65535)|0};CPU.prototype.modrm_table16[131]=\nfunction(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]+a.reg16[reg_di]+a.read_disp16()&65535)|0};CPU.prototype.modrm_table16[4]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_si]&65535)|0};CPU.prototype.modrm_table16[68]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_si]+a.read_disp8s()&65535)|0};CPU.prototype.modrm_table16[132]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_si]+a.read_disp16()&65535)|0};CPU.prototype.modrm_table16[5]=function(a){return a.get_seg_prefix_ds()+\n(a.reg16[reg_di]&65535)|0};CPU.prototype.modrm_table16[69]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_di]+a.read_disp8s()&65535)|0};CPU.prototype.modrm_table16[133]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_di]+a.read_disp16()&65535)|0};CPU.prototype.modrm_table16[6]=function(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]&65535)|0};CPU.prototype.modrm_table16[70]=function(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]+a.read_disp8s()&65535)|0};CPU.prototype.modrm_table16[134]=\nfunction(a){return a.get_seg_prefix_ss()+(a.reg16[reg_bp]+a.read_disp16()&65535)|0};CPU.prototype.modrm_table16[7]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]&65535)|0};CPU.prototype.modrm_table16[71]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]+a.read_disp8s()&65535)|0};CPU.prototype.modrm_table16[135]=function(a){return a.get_seg_prefix_ds()+(a.reg16[reg_bx]+a.read_disp16()&65535)|0};CPU.prototype.modrm_table32[0]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_eax]|\n0};CPU.prototype.modrm_table32[64]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_eax]+a.read_disp8s()|0};CPU.prototype.modrm_table32[128]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_eax]+a.read_disp32s()|0};CPU.prototype.modrm_table32[1]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.modrm_table32[65]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_ecx]+a.read_disp8s()|0};CPU.prototype.modrm_table32[129]=function(a){return a.get_seg_prefix_ds()+\na.reg32s[reg_ecx]+a.read_disp32s()|0};CPU.prototype.modrm_table32[2]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.modrm_table32[66]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_edx]+a.read_disp8s()|0};CPU.prototype.modrm_table32[130]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_edx]+a.read_disp32s()|0};CPU.prototype.modrm_table32[3]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.modrm_table32[67]=function(a){return a.get_seg_prefix_ds()+\na.reg32s[reg_ebx]+a.read_disp8s()|0};CPU.prototype.modrm_table32[131]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_ebx]+a.read_disp32s()|0};CPU.prototype.modrm_table32[5]=function(a){return a.get_seg_prefix_ss()+a.reg32s[reg_ebp]|0};CPU.prototype.modrm_table32[69]=function(a){return a.get_seg_prefix_ss()+a.reg32s[reg_ebp]+a.read_disp8s()|0};CPU.prototype.modrm_table32[133]=function(a){return a.get_seg_prefix_ss()+a.reg32s[reg_ebp]+a.read_disp32s()|0};CPU.prototype.modrm_table32[6]=function(a){return a.get_seg_prefix_ds()+\na.reg32s[reg_esi]|0};CPU.prototype.modrm_table32[70]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_esi]+a.read_disp8s()|0};CPU.prototype.modrm_table32[134]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_esi]+a.read_disp32s()|0};CPU.prototype.modrm_table32[7]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.modrm_table32[71]=function(a){return a.get_seg_prefix_ds()+a.reg32s[reg_edi]+a.read_disp8s()|0};CPU.prototype.modrm_table32[135]=function(a){return a.get_seg_prefix_ds()+\na.reg32s[reg_edi]+a.read_disp32s()|0};CPU.prototype.modrm_table16[6]=function(a){return a.get_seg_prefix_ds()+a.read_disp16()|0};CPU.prototype.modrm_table32[5]=function(a){return a.get_seg_prefix_ds()+a.read_disp32s()|0};CPU.prototype.modrm_table32[4]=function(a){return a.sib_resolve(!1)|0};CPU.prototype.modrm_table32[68]=function(a){return a.sib_resolve(!0)+a.read_disp8s()|0};CPU.prototype.modrm_table32[132]=function(a){return a.sib_resolve(!0)+a.read_disp32s()|0};for(var a=0;8>a;a++)for(var b=0;3>\nb;b++)for(var c=a|b<<6,d=1;8>d;d++)CPU.prototype.modrm_table32[c|d<<3]=CPU.prototype.modrm_table32[c],CPU.prototype.modrm_table16[c|d<<3]=CPU.prototype.modrm_table16[c];CPU.prototype.sib_table[0]=function(a,b){return a.reg32s[reg_eax]+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[1]=function(a,b){return a.reg32s[reg_eax]+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[2]=function(a,b){return a.reg32s[reg_eax]+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[3]=\nfunction(a,b){return a.reg32s[reg_eax]+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[4]=function(a,b){return a.reg32s[reg_eax]+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[5]=function(a,b){return a.reg32s[reg_eax]+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[6]=function(a,b){return a.reg32s[reg_eax]+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[7]=function(a,b){return a.reg32s[reg_eax]+\na.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[64]=function(a,b){return(a.reg32s[reg_eax]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[65]=function(a,b){return(a.reg32s[reg_eax]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[66]=function(a,b){return(a.reg32s[reg_eax]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[67]=function(a,b){return(a.reg32s[reg_eax]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[68]=\nfunction(a,b){return(a.reg32s[reg_eax]<<1)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[69]=function(a,b){return(a.reg32s[reg_eax]<<1)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[70]=function(a,b){return(a.reg32s[reg_eax]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[71]=function(a,b){return(a.reg32s[reg_eax]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[128]=function(a,\nb){return(a.reg32s[reg_eax]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[129]=function(a,b){return(a.reg32s[reg_eax]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[130]=function(a,b){return(a.reg32s[reg_eax]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[131]=function(a,b){return(a.reg32s[reg_eax]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[132]=function(a,b){return(a.reg32s[reg_eax]<<2)+a.get_seg_prefix_ss()+\na.reg32s[reg_esp]|0};CPU.prototype.sib_table[133]=function(a,b){return(a.reg32s[reg_eax]<<2)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[134]=function(a,b){return(a.reg32s[reg_eax]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[135]=function(a,b){return(a.reg32s[reg_eax]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[192]=function(a,b){return(a.reg32s[reg_eax]<<3)+a.get_seg_prefix_ds()+\na.reg32s[reg_eax]|0};CPU.prototype.sib_table[193]=function(a,b){return(a.reg32s[reg_eax]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[194]=function(a,b){return(a.reg32s[reg_eax]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[195]=function(a,b){return(a.reg32s[reg_eax]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[196]=function(a,b){return(a.reg32s[reg_eax]<<3)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[197]=\nfunction(a,b){return(a.reg32s[reg_eax]<<3)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[198]=function(a,b){return(a.reg32s[reg_eax]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[199]=function(a,b){return(a.reg32s[reg_eax]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[8]=function(a,b){return a.reg32s[reg_ecx]+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[9]=function(a,\nb){return a.reg32s[reg_ecx]+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[10]=function(a,b){return a.reg32s[reg_ecx]+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[11]=function(a,b){return a.reg32s[reg_ecx]+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[12]=function(a,b){return a.reg32s[reg_ecx]+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[13]=function(a,b){return a.reg32s[reg_ecx]+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:\na.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[14]=function(a,b){return a.reg32s[reg_ecx]+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[15]=function(a,b){return a.reg32s[reg_ecx]+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[72]=function(a,b){return(a.reg32s[reg_ecx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[73]=function(a,b){return(a.reg32s[reg_ecx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[74]=\nfunction(a,b){return(a.reg32s[reg_ecx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[75]=function(a,b){return(a.reg32s[reg_ecx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[76]=function(a,b){return(a.reg32s[reg_ecx]<<1)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[77]=function(a,b){return(a.reg32s[reg_ecx]<<1)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[78]=function(a,\nb){return(a.reg32s[reg_ecx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[79]=function(a,b){return(a.reg32s[reg_ecx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[136]=function(a,b){return(a.reg32s[reg_ecx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[137]=function(a,b){return(a.reg32s[reg_ecx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[138]=function(a,b){return(a.reg32s[reg_ecx]<<2)+a.get_seg_prefix_ds()+\na.reg32s[reg_edx]|0};CPU.prototype.sib_table[139]=function(a,b){return(a.reg32s[reg_ecx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[140]=function(a,b){return(a.reg32s[reg_ecx]<<2)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[141]=function(a,b){return(a.reg32s[reg_ecx]<<2)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[142]=function(a,b){return(a.reg32s[reg_ecx]<<2)+a.get_seg_prefix_ds()+\na.reg32s[reg_esi]|0};CPU.prototype.sib_table[143]=function(a,b){return(a.reg32s[reg_ecx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[200]=function(a,b){return(a.reg32s[reg_ecx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[201]=function(a,b){return(a.reg32s[reg_ecx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[202]=function(a,b){return(a.reg32s[reg_ecx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[203]=\nfunction(a,b){return(a.reg32s[reg_ecx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[204]=function(a,b){return(a.reg32s[reg_ecx]<<3)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[205]=function(a,b){return(a.reg32s[reg_ecx]<<3)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[206]=function(a,b){return(a.reg32s[reg_ecx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[207]=\nfunction(a,b){return(a.reg32s[reg_ecx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[16]=function(a,b){return a.reg32s[reg_edx]+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[17]=function(a,b){return a.reg32s[reg_edx]+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[18]=function(a,b){return a.reg32s[reg_edx]+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[19]=function(a,b){return a.reg32s[reg_edx]+a.get_seg_prefix_ds()+\na.reg32s[reg_ebx]|0};CPU.prototype.sib_table[20]=function(a,b){return a.reg32s[reg_edx]+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[21]=function(a,b){return a.reg32s[reg_edx]+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[22]=function(a,b){return a.reg32s[reg_edx]+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[23]=function(a,b){return a.reg32s[reg_edx]+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|\n0};CPU.prototype.sib_table[80]=function(a,b){return(a.reg32s[reg_edx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[81]=function(a,b){return(a.reg32s[reg_edx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[82]=function(a,b){return(a.reg32s[reg_edx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[83]=function(a,b){return(a.reg32s[reg_edx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[84]=function(a,b){return(a.reg32s[reg_edx]<<\n1)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[85]=function(a,b){return(a.reg32s[reg_edx]<<1)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[86]=function(a,b){return(a.reg32s[reg_edx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[87]=function(a,b){return(a.reg32s[reg_edx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[144]=function(a,b){return(a.reg32s[reg_edx]<<2)+\na.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[145]=function(a,b){return(a.reg32s[reg_edx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[146]=function(a,b){return(a.reg32s[reg_edx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[147]=function(a,b){return(a.reg32s[reg_edx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[148]=function(a,b){return(a.reg32s[reg_edx]<<2)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};\nCPU.prototype.sib_table[149]=function(a,b){return(a.reg32s[reg_edx]<<2)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[150]=function(a,b){return(a.reg32s[reg_edx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[151]=function(a,b){return(a.reg32s[reg_edx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[208]=function(a,b){return(a.reg32s[reg_edx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};\nCPU.prototype.sib_table[209]=function(a,b){return(a.reg32s[reg_edx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[210]=function(a,b){return(a.reg32s[reg_edx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[211]=function(a,b){return(a.reg32s[reg_edx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[212]=function(a,b){return(a.reg32s[reg_edx]<<3)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[213]=function(a,b){return(a.reg32s[reg_edx]<<\n3)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[214]=function(a,b){return(a.reg32s[reg_edx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[215]=function(a,b){return(a.reg32s[reg_edx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[24]=function(a,b){return a.reg32s[reg_ebx]+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[25]=function(a,b){return a.reg32s[reg_ebx]+a.get_seg_prefix_ds()+\na.reg32s[reg_ecx]|0};CPU.prototype.sib_table[26]=function(a,b){return a.reg32s[reg_ebx]+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[27]=function(a,b){return a.reg32s[reg_ebx]+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[28]=function(a,b){return a.reg32s[reg_ebx]+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[29]=function(a,b){return a.reg32s[reg_ebx]+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|\n0};CPU.prototype.sib_table[30]=function(a,b){return a.reg32s[reg_ebx]+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[31]=function(a,b){return a.reg32s[reg_ebx]+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[88]=function(a,b){return(a.reg32s[reg_ebx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[89]=function(a,b){return(a.reg32s[reg_ebx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[90]=function(a,b){return(a.reg32s[reg_ebx]<<\n1)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[91]=function(a,b){return(a.reg32s[reg_ebx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[92]=function(a,b){return(a.reg32s[reg_ebx]<<1)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[93]=function(a,b){return(a.reg32s[reg_ebx]<<1)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[94]=function(a,b){return(a.reg32s[reg_ebx]<<1)+\na.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[95]=function(a,b){return(a.reg32s[reg_ebx]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[152]=function(a,b){return(a.reg32s[reg_ebx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[153]=function(a,b){return(a.reg32s[reg_ebx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[154]=function(a,b){return(a.reg32s[reg_ebx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};\nCPU.prototype.sib_table[155]=function(a,b){return(a.reg32s[reg_ebx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[156]=function(a,b){return(a.reg32s[reg_ebx]<<2)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[157]=function(a,b){return(a.reg32s[reg_ebx]<<2)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[158]=function(a,b){return(a.reg32s[reg_ebx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};\nCPU.prototype.sib_table[159]=function(a,b){return(a.reg32s[reg_ebx]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[216]=function(a,b){return(a.reg32s[reg_ebx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[217]=function(a,b){return(a.reg32s[reg_ebx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[218]=function(a,b){return(a.reg32s[reg_ebx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[219]=function(a,b){return(a.reg32s[reg_ebx]<<\n3)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[220]=function(a,b){return(a.reg32s[reg_ebx]<<3)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[221]=function(a,b){return(a.reg32s[reg_ebx]<<3)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[222]=function(a,b){return(a.reg32s[reg_ebx]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[223]=function(a,b){return(a.reg32s[reg_ebx]<<\n3)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[32]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[33]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[34]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[35]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[36]=function(a,b){return a.get_seg_prefix_ss()+a.reg32s[reg_esp]|\n0};CPU.prototype.sib_table[37]=function(a,b){return(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[38]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[39]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[96]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[97]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|\n0};CPU.prototype.sib_table[98]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[99]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[100]=function(a,b){return a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[101]=function(a,b){return(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[102]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_esi]|\n0};CPU.prototype.sib_table[103]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[160]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[161]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[162]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[163]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[164]=function(a,\nb){return a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[165]=function(a,b){return(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[166]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[167]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[224]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[225]=function(a,\nb){return a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[226]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[227]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[228]=function(a,b){return a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[229]=function(a,b){return(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[230]=function(a,\nb){return a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[231]=function(a,b){return a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[40]=function(a,b){return a.reg32s[reg_ebp]+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[41]=function(a,b){return a.reg32s[reg_ebp]+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[42]=function(a,b){return a.reg32s[reg_ebp]+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[43]=\nfunction(a,b){return a.reg32s[reg_ebp]+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[44]=function(a,b){return a.reg32s[reg_ebp]+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[45]=function(a,b){return a.reg32s[reg_ebp]+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[46]=function(a,b){return a.reg32s[reg_ebp]+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[47]=function(a,b){return a.reg32s[reg_ebp]+\na.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[104]=function(a,b){return(a.reg32s[reg_ebp]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[105]=function(a,b){return(a.reg32s[reg_ebp]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[106]=function(a,b){return(a.reg32s[reg_ebp]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[107]=function(a,b){return(a.reg32s[reg_ebp]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};\nCPU.prototype.sib_table[108]=function(a,b){return(a.reg32s[reg_ebp]<<1)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[109]=function(a,b){return(a.reg32s[reg_ebp]<<1)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[110]=function(a,b){return(a.reg32s[reg_ebp]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[111]=function(a,b){return(a.reg32s[reg_ebp]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};\nCPU.prototype.sib_table[168]=function(a,b){return(a.reg32s[reg_ebp]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[169]=function(a,b){return(a.reg32s[reg_ebp]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[170]=function(a,b){return(a.reg32s[reg_ebp]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[171]=function(a,b){return(a.reg32s[reg_ebp]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[172]=function(a,b){return(a.reg32s[reg_ebp]<<\n2)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[173]=function(a,b){return(a.reg32s[reg_ebp]<<2)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[174]=function(a,b){return(a.reg32s[reg_ebp]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[175]=function(a,b){return(a.reg32s[reg_ebp]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[232]=function(a,b){return(a.reg32s[reg_ebp]<<\n3)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[233]=function(a,b){return(a.reg32s[reg_ebp]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[234]=function(a,b){return(a.reg32s[reg_ebp]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[235]=function(a,b){return(a.reg32s[reg_ebp]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[236]=function(a,b){return(a.reg32s[reg_ebp]<<3)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|\n0};CPU.prototype.sib_table[237]=function(a,b){return(a.reg32s[reg_ebp]<<3)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[238]=function(a,b){return(a.reg32s[reg_ebp]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[239]=function(a,b){return(a.reg32s[reg_ebp]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[48]=function(a,b){return a.reg32s[reg_esi]+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};\nCPU.prototype.sib_table[49]=function(a,b){return a.reg32s[reg_esi]+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[50]=function(a,b){return a.reg32s[reg_esi]+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[51]=function(a,b){return a.reg32s[reg_esi]+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[52]=function(a,b){return a.reg32s[reg_esi]+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[53]=function(a,b){return a.reg32s[reg_esi]+\n(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[54]=function(a,b){return a.reg32s[reg_esi]+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[55]=function(a,b){return a.reg32s[reg_esi]+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[112]=function(a,b){return(a.reg32s[reg_esi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[113]=function(a,b){return(a.reg32s[reg_esi]<<1)+a.get_seg_prefix_ds()+\na.reg32s[reg_ecx]|0};CPU.prototype.sib_table[114]=function(a,b){return(a.reg32s[reg_esi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[115]=function(a,b){return(a.reg32s[reg_esi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[116]=function(a,b){return(a.reg32s[reg_esi]<<1)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[117]=function(a,b){return(a.reg32s[reg_esi]<<1)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+\na.read_disp32s())|0};CPU.prototype.sib_table[118]=function(a,b){return(a.reg32s[reg_esi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[119]=function(a,b){return(a.reg32s[reg_esi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[176]=function(a,b){return(a.reg32s[reg_esi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[177]=function(a,b){return(a.reg32s[reg_esi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[178]=\nfunction(a,b){return(a.reg32s[reg_esi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[179]=function(a,b){return(a.reg32s[reg_esi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[180]=function(a,b){return(a.reg32s[reg_esi]<<2)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[181]=function(a,b){return(a.reg32s[reg_esi]<<2)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[182]=\nfunction(a,b){return(a.reg32s[reg_esi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[183]=function(a,b){return(a.reg32s[reg_esi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[240]=function(a,b){return(a.reg32s[reg_esi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[241]=function(a,b){return(a.reg32s[reg_esi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[242]=function(a,b){return(a.reg32s[reg_esi]<<3)+\na.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[243]=function(a,b){return(a.reg32s[reg_esi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[244]=function(a,b){return(a.reg32s[reg_esi]<<3)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[245]=function(a,b){return(a.reg32s[reg_esi]<<3)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[246]=function(a,b){return(a.reg32s[reg_esi]<<3)+\na.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[247]=function(a,b){return(a.reg32s[reg_esi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[56]=function(a,b){return a.reg32s[reg_edi]+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[57]=function(a,b){return a.reg32s[reg_edi]+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[58]=function(a,b){return a.reg32s[reg_edi]+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[59]=\nfunction(a,b){return a.reg32s[reg_edi]+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[60]=function(a,b){return a.reg32s[reg_edi]+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[61]=function(a,b){return a.reg32s[reg_edi]+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[62]=function(a,b){return a.reg32s[reg_edi]+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[63]=function(a,b){return a.reg32s[reg_edi]+\na.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[120]=function(a,b){return(a.reg32s[reg_edi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[121]=function(a,b){return(a.reg32s[reg_edi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[122]=function(a,b){return(a.reg32s[reg_edi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[123]=function(a,b){return(a.reg32s[reg_edi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};\nCPU.prototype.sib_table[124]=function(a,b){return(a.reg32s[reg_edi]<<1)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[125]=function(a,b){return(a.reg32s[reg_edi]<<1)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[126]=function(a,b){return(a.reg32s[reg_edi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[127]=function(a,b){return(a.reg32s[reg_edi]<<1)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};\nCPU.prototype.sib_table[184]=function(a,b){return(a.reg32s[reg_edi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[185]=function(a,b){return(a.reg32s[reg_edi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[186]=function(a,b){return(a.reg32s[reg_edi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[187]=function(a,b){return(a.reg32s[reg_edi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[188]=function(a,b){return(a.reg32s[reg_edi]<<\n2)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|0};CPU.prototype.sib_table[189]=function(a,b){return(a.reg32s[reg_edi]<<2)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[190]=function(a,b){return(a.reg32s[reg_edi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[191]=function(a,b){return(a.reg32s[reg_edi]<<2)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0};CPU.prototype.sib_table[248]=function(a,b){return(a.reg32s[reg_edi]<<\n3)+a.get_seg_prefix_ds()+a.reg32s[reg_eax]|0};CPU.prototype.sib_table[249]=function(a,b){return(a.reg32s[reg_edi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ecx]|0};CPU.prototype.sib_table[250]=function(a,b){return(a.reg32s[reg_edi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edx]|0};CPU.prototype.sib_table[251]=function(a,b){return(a.reg32s[reg_edi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_ebx]|0};CPU.prototype.sib_table[252]=function(a,b){return(a.reg32s[reg_edi]<<3)+a.get_seg_prefix_ss()+a.reg32s[reg_esp]|\n0};CPU.prototype.sib_table[253]=function(a,b){return(a.reg32s[reg_edi]<<3)+(b?a.get_seg_prefix_ss()+a.reg32s[reg_ebp]:a.get_seg_prefix_ds()+a.read_disp32s())|0};CPU.prototype.sib_table[254]=function(a,b){return(a.reg32s[reg_edi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_esi]|0};CPU.prototype.sib_table[255]=function(a,b){return(a.reg32s[reg_edi]<<3)+a.get_seg_prefix_ds()+a.reg32s[reg_edi]|0}})();var MAX_COUNT_PER_CYCLE=4096;function string_get_cycle_count(a,b){dbg_assert(a&&4>=a&&-4<=a);return 0>a?(b&4095)>>(-a>>1):(~b&4095)>>a}function string_get_cycle_count2(a,b,c){dbg_assert(3===arguments.length);return Math.min(string_get_cycle_count(a,b),string_get_cycle_count(a,c))}\nCPU.prototype.movsb=function(){var a=this.get_seg_prefix(reg_ds)+this.get_reg_asize(reg_esi)|0,b=this.get_seg(reg_es)+this.get_reg_asize(reg_edi)|0,c=this.flags&flag_direction?-1:1;if(this.prefixes&PREFIX_MASK_REP){var d=this.get_reg_asize(reg_ecx)>>>0;if(0===d)return;var e=d,f=MAX_COUNT_PER_CYCLE,g=this.translate_address_read(a),k=this.translate_address_write(b);this.paging&&(f=string_get_cycle_count2(c,a,b));do this.write8(k,this.read8(g)),k+=c,g+=c,a=0!==--d;while(a&&f--);c=c*(e-d)|0;this.add_reg_asize(reg_edi,\nc);this.add_reg_asize(reg_esi,c);this.set_ecx_asize(d);this.timestamp_counter+=e-d;a&&(this.instruction_pointer=this.previous_ip)}else this.safe_write8(b,this.safe_read8(a)),this.add_reg_asize(reg_edi,c),this.add_reg_asize(reg_esi,c);this.diverged()};\nCPU.prototype.movsw=function(){var a=this.get_seg_prefix(reg_ds)+this.get_reg_asize(reg_esi)|0,b=this.get_seg(reg_es)+this.get_reg_asize(reg_edi)|0,c=this.flags&flag_direction?-2:2;if(this.prefixes&PREFIX_MASK_REP){var d=this.get_reg_asize(reg_ecx)>>>0;if(0===d)return;var e=d,f=MAX_COUNT_PER_CYCLE;if(b&1||a&1){do{this.safe_write16(b,this.safe_read16(a));b+=c;this.add_reg_asize(reg_edi,c);a+=c;this.add_reg_asize(reg_esi,c);var g=0!==this.decr_ecx_asize()}while(g&&f--)}else{var k=0>c?-1:1,l=this.translate_address_read(a)>>>\n1,m=this.translate_address_write(b)>>>1;this.paging&&(f=string_get_cycle_count2(c,a,b));do this.write_aligned16(m,this.read_aligned16(l)),m+=k,l+=k,g=0!==--d;while(g&&f--);a=c*(e-d)|0;this.add_reg_asize(reg_edi,a);this.add_reg_asize(reg_esi,a);this.set_ecx_asize(d);this.timestamp_counter+=e-d}g&&(this.instruction_pointer=this.previous_ip)}else this.safe_write16(b,this.safe_read16(a)),this.add_reg_asize(reg_edi,c),this.add_reg_asize(reg_esi,c);this.diverged()};\nCPU.prototype.movsd=function(){if(this.prefixes&PREFIX_MASK_REP){var a=this.get_seg_prefix(reg_ds)+this.get_reg_asize(reg_esi)|0,b=this.get_seg(reg_es)+this.get_reg_asize(reg_edi)|0,c=this.get_reg_asize(reg_ecx)>>>0;if(!c)return;var d=this.paging?4095:3;if(0===(b&d)&&0===(a&d)&&0===(this.flags&flag_direction)&&(d=!1,this.paging&&(a=this.translate_address_read(a),b=this.translate_address_write(b),1024<c&&(c=1024,d=!0)),!this.io.in_mmap_range(a,c)&&!this.io.in_mmap_range(b,c))){var e=c<<2;this.add_reg_asize(reg_ecx,\n-c);this.add_reg_asize(reg_edi,e);this.add_reg_asize(reg_esi,e);b>>>=2;a>>>=2;this.write_blob32(this.mem32s.subarray(a,a+c),b);d&&(this.instruction_pointer=this.previous_ip);return}}a=this.get_seg_prefix(reg_ds)+this.get_reg_asize(reg_esi)|0;b=this.get_seg(reg_es)+this.get_reg_asize(reg_edi)|0;e=this.flags&flag_direction?-4:4;if(this.prefixes&PREFIX_MASK_REP){c=this.get_reg_asize(reg_ecx)>>>0;if(0===c)return;var f=c,g=MAX_COUNT_PER_CYCLE;if(b&3||a&3){do this.safe_write32(b,this.safe_read32s(a)),b+=\ne,this.add_reg_asize(reg_edi,e),a+=e,this.add_reg_asize(reg_esi,e),d=0!==this.decr_ecx_asize();while(d&&g--)}else{var k=0>e?-1:1,l=this.translate_address_read(a)>>>2,m=this.translate_address_write(b)>>>2;this.paging&&(g=string_get_cycle_count2(e,a,b));do this.write_aligned32(m,this.read_aligned32(l)),m+=k,l+=k,d=0!==--c;while(d&&g--);e=e*(f-c)|0;this.add_reg_asize(reg_edi,e);this.add_reg_asize(reg_esi,e);this.set_ecx_asize(c);this.timestamp_counter+=f-c}d&&(this.instruction_pointer=this.previous_ip)}else this.safe_write32(b,\nthis.safe_read32s(a)),this.add_reg_asize(reg_edi,e),this.add_reg_asize(reg_esi,e);this.diverged()};\nfunction cmpsb(a){var b=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-1:1;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=(a.prefixes&PREFIX_MASK_REP)===PREFIX_REPZ,k=MAX_COUNT_PER_CYCLE,l=a.translate_address_read(b),m=a.translate_address_read(c);a.paging&&(k=string_get_cycle_count2(d,b,c));do{c=a.read8(m);b=a.read8(l);m+=d;l+=d;var p=0!==--e&&b===c===g}while(p&&k--);d=d*(f-e)|\n0;a.add_reg_asize(reg_edi,d);a.add_reg_asize(reg_esi,d);a.set_ecx_asize(e);a.timestamp_counter+=f-e;p&&(a.instruction_pointer=a.previous_ip)}else b=a.safe_read8(b),c=a.safe_read8(c),a.add_reg_asize(reg_edi,d),a.add_reg_asize(reg_esi,d);a.cmp8(b,c);a.diverged()}\nfunction cmpsw(a){var b=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-2:2;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=(a.prefixes&PREFIX_MASK_REP)===PREFIX_REPZ,k=MAX_COUNT_PER_CYCLE;if(c&1||b&1){do{var l=a.safe_read16(c);var m=a.safe_read16(b);c+=d;a.add_reg_asize(reg_edi,d);b+=d;a.add_reg_asize(reg_esi,d);var p=0!==a.decr_ecx_asize()&&m===l===g}while(p&&k--)}else{var n=\n0>d?-1:1,r=a.translate_address_read(b)>>>1,q=a.translate_address_read(c)>>>1;a.paging&&(k=string_get_cycle_count2(d,b,c));do l=a.read_aligned16(q),m=a.read_aligned16(r),q+=n,r+=n,p=0!==--e&&m===l===g;while(p&&k--);b=d*(f-e)|0;a.add_reg_asize(reg_edi,b);a.add_reg_asize(reg_esi,b);a.set_ecx_asize(e);a.timestamp_counter+=f-e}p&&(a.instruction_pointer=a.previous_ip)}else l=a.safe_read16(c),m=a.safe_read16(b),a.add_reg_asize(reg_edi,d),a.add_reg_asize(reg_esi,d);a.cmp16(m,l);a.diverged()}\nfunction cmpsd(a){var b=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-4:4;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=(a.prefixes&PREFIX_MASK_REP)===PREFIX_REPZ,k=MAX_COUNT_PER_CYCLE;if(c&3||b&3){do{var l=a.safe_read32s(c);var m=a.safe_read32s(b);c+=d;a.add_reg_asize(reg_edi,d);b+=d;a.add_reg_asize(reg_esi,d);var p=0!==a.decr_ecx_asize()&&m===l===g}while(p&&k--)}else{var n=\n0>d?-1:1,r=a.translate_address_read(b)>>>2,q=a.translate_address_read(c)>>>2;a.paging&&(k=string_get_cycle_count2(d,b,c));do l=a.read_aligned32(q),m=a.read_aligned32(r),q+=n,r+=n,p=0!==--e&&m===l===g;while(p&&k--);b=d*(f-e)|0;a.add_reg_asize(reg_edi,b);a.add_reg_asize(reg_esi,b);a.set_ecx_asize(e);a.timestamp_counter+=f-e}p&&(a.instruction_pointer=a.previous_ip)}else l=a.safe_read32s(c),m=a.safe_read32s(b),a.add_reg_asize(reg_edi,d),a.add_reg_asize(reg_esi,d);a.cmp32(m,l);a.diverged()}\nfunction stosb(a){var b=a.reg8[reg_al],c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-1:1;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE,k=a.translate_address_write(c);a.paging&&(g=string_get_cycle_count(d,c));do a.write8(k,b),k+=d,c=0!==--e;while(c&&g--);a.add_reg_asize(reg_edi,d*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e;c&&(a.instruction_pointer=a.previous_ip)}else a.safe_write8(c,b),a.add_reg_asize(reg_edi,\nd);a.diverged()}\nfunction stosw(a){var b=a.reg16[reg_ax],c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-2:2;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE;if(c&1){do{a.safe_write16(c,b);c+=d;a.add_reg_asize(reg_edi,d);var k=0!==a.decr_ecx_asize()}while(k&&g--)}else{var l=0>d?-1:1,m=a.translate_address_write(c)>>>1;a.paging&&(g=string_get_cycle_count(d,c));do a.write_aligned16(m,b),m+=l,k=0!==--e;while(k&&g--);a.add_reg_asize(reg_edi,\nd*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e}k&&(a.instruction_pointer=a.previous_ip)}else a.safe_write16(c,b),a.add_reg_asize(reg_edi,d);a.diverged()}\nfunction stosd(a){var b=a.reg32s[reg_eax],c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-4:4;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE;if(c&3){do{a.safe_write32(c,b);c+=d;a.add_reg_asize(reg_edi,d);var k=0!==a.decr_ecx_asize()}while(k&&g--)}else{var l=0>d?-1:1,m=a.translate_address_write(c)>>>2;a.paging&&(g=string_get_cycle_count(d,c));do a.write_aligned32(m,b),m+=l,k=0!==--e;while(k&&g--);a.add_reg_asize(reg_edi,\nd*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e}k&&(a.instruction_pointer=a.previous_ip)}else a.safe_write32(c,b),a.add_reg_asize(reg_edi,d);a.diverged()}\nfunction lodsb(a){var b=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,c=a.flags&flag_direction?-1:1;if(a.prefixes&PREFIX_MASK_REP){var d=a.get_reg_asize(reg_ecx)>>>0;if(0===d)return;var e=d,f=MAX_COUNT_PER_CYCLE,g=a.translate_address_read(b);a.paging&&(f=string_get_cycle_count(c,b));do a.reg8[reg_al]=a.read8(g),g+=c,b=0!==--d;while(b&&f--);a.add_reg_asize(reg_esi,c*(e-d)|0);a.set_ecx_asize(d);a.timestamp_counter+=e-d;b&&(a.instruction_pointer=a.previous_ip)}else a.reg8[reg_al]=a.safe_read8(b),\na.add_reg_asize(reg_esi,c);a.diverged()}function lodsw(a){var b=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,c=a.flags&flag_direction?-2:2;if(a.prefixes&PREFIX_MASK_REP){if(0===a.get_reg_asize(reg_ecx)>>>0)return;var d=MAX_COUNT_PER_CYCLE;do{a.reg16[reg_ax]=a.safe_read16(b);b+=c;a.add_reg_asize(reg_esi,c);var e=0!==a.decr_ecx_asize()}while(e&&d--);e&&(a.instruction_pointer=a.previous_ip)}else a.reg16[reg_ax]=a.safe_read16(b),a.add_reg_asize(reg_esi,c);a.diverged()}\nfunction lodsd(a){var b=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,c=a.flags&flag_direction?-4:4;if(a.prefixes&PREFIX_MASK_REP){if(0===a.get_reg_asize(reg_ecx)>>>0)return;var d=MAX_COUNT_PER_CYCLE;do{a.reg32s[reg_eax]=a.safe_read32s(b);b+=c;a.add_reg_asize(reg_esi,c);var e=0!==a.decr_ecx_asize()}while(e&&d--);e&&(a.instruction_pointer=a.previous_ip)}else a.reg32s[reg_eax]=a.safe_read32s(b),a.add_reg_asize(reg_esi,c);a.diverged()}\nfunction scasb(a){var b=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,c=a.flags&flag_direction?-1:1,d=a.reg8[reg_al];if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=(a.prefixes&PREFIX_MASK_REP)===PREFIX_REPZ,k=MAX_COUNT_PER_CYCLE,l=a.translate_address_read(b);a.paging&&(k=string_get_cycle_count(c,b));do{b=a.read8(l);l+=c;var m=0!==--e&&d===b===g}while(m&&k--);a.add_reg_asize(reg_edi,c*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e;m&&(a.instruction_pointer=\na.previous_ip)}else b=a.safe_read8(b),a.add_reg_asize(reg_edi,c);a.cmp8(d,b);a.diverged()}\nfunction scasw(a){var b=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,c=a.flags&flag_direction?-2:2,d=a.reg16[reg_al];if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=(a.prefixes&PREFIX_MASK_REP)===PREFIX_REPZ,k=MAX_COUNT_PER_CYCLE;if(b&1){do{var l=a.safe_read16(b);b+=c;a.add_reg_asize(reg_edi,c);var m=0!==a.decr_ecx_asize()&&d===l===g}while(m&&k--)}else{var p=0>c?-1:1,n=a.translate_address_read(b)>>>1;a.paging&&(k=string_get_cycle_count(c,b));do l=a.read_aligned16(n),\nn+=p,m=0!==--e&&d===l===g;while(m&&k--);a.add_reg_asize(reg_edi,c*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e}m&&(a.instruction_pointer=a.previous_ip)}else l=a.safe_read16(b),a.add_reg_asize(reg_edi,c);a.cmp16(d,l);a.diverged()}\nfunction scasd(a){var b=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,c=a.flags&flag_direction?-4:4,d=a.reg32s[reg_eax];if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=(a.prefixes&PREFIX_MASK_REP)===PREFIX_REPZ,k=MAX_COUNT_PER_CYCLE;if(b&3){do{var l=a.safe_read32s(b);b+=c;a.add_reg_asize(reg_edi,c);var m=0!==a.decr_ecx_asize()&&d===l===g}while(m&&k--)}else{var p=0>c?-1:1,n=a.translate_address_read(b)>>>2;a.paging&&(k=string_get_cycle_count(c,b));do l=a.read_aligned32(n),\nn+=p,m=0!==--e&&d===l===g;while(m&&k--);a.add_reg_asize(reg_edi,c*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e}m&&(a.instruction_pointer=a.previous_ip)}else l=a.safe_read32s(b),a.add_reg_asize(reg_edi,c);a.cmp32(d,l);a.diverged()}\nfunction insb(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,1);var c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-1:1;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE,k=a.translate_address_write(c);a.paging&&(g=string_get_cycle_count(d,c));do a.write8(k,a.io.port_read8(b)),k+=d,c=0!==--e;while(c&&g--);a.add_reg_asize(reg_edi,d*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e;c&&(a.instruction_pointer=\na.previous_ip)}else a.writable_or_pagefault(c,1),a.safe_write8(c,a.io.port_read8(b)),a.add_reg_asize(reg_edi,d);a.diverged()}\nfunction insw(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,2);var c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-2:2;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE;if(c&1){do{a.safe_write16(c,a.io.port_read16(b));c+=d;a.add_reg_asize(reg_edi,d);var k=0!==a.decr_ecx_asize()}while(k&&g--)}else{var l=0>d?-1:1,m=a.translate_address_write(c)>>>1;a.paging&&(g=string_get_cycle_count(d,c));do a.write_aligned16(m,\na.io.port_read16(b)),m+=l,k=0!==--e;while(k&&g--);a.add_reg_asize(reg_edi,d*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e}k&&(a.instruction_pointer=a.previous_ip)}else a.writable_or_pagefault(c,2),a.safe_write16(c,a.io.port_read16(b)),a.add_reg_asize(reg_edi,d);a.diverged()}\nfunction insd(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,4);var c=a.get_seg(reg_es)+a.get_reg_asize(reg_edi)|0,d=a.flags&flag_direction?-4:4;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE;if(c&3){do{a.safe_write32(c,a.io.port_read32(b));c+=d;a.add_reg_asize(reg_edi,d);var k=0!==a.decr_ecx_asize()}while(k&&g--)}else{var l=0>d?-1:1,m=a.translate_address_write(c)>>>2;a.paging&&(g=string_get_cycle_count(d,c));do a.write_aligned32(m,\na.io.port_read32(b)),m+=l,k=0!==--e;while(k&&g--);a.add_reg_asize(reg_edi,d*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e}k&&(a.instruction_pointer=a.previous_ip)}else a.writable_or_pagefault(c,4),a.safe_write32(c,a.io.port_read32(b)),a.add_reg_asize(reg_edi,d);a.diverged()}\nfunction outsb(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,1);var c=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,d=a.flags&flag_direction?-1:1;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE,k=a.translate_address_read(c);a.paging&&(g=string_get_cycle_count(d,c));do a.io.port_write8(b,a.read8(k)),k+=d,c=0!==--e;while(c&&g--);a.add_reg_asize(reg_esi,d*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e;c&&(a.instruction_pointer=\na.previous_ip)}else a.io.port_write8(b,a.safe_read8(c)),a.add_reg_asize(reg_esi,d);a.diverged()}\nfunction outsw(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,2);var c=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,d=a.flags&flag_direction?-2:2;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE;if(c&1){do{a.io.port_write16(b,a.safe_read16(c));c+=d;a.add_reg_asize(reg_esi,d);var k=0!==a.decr_ecx_asize()}while(k&&g--)}else{var l=0>d?-1:1,m=a.translate_address_read(c)>>>1;a.paging&&(g=string_get_cycle_count(d,c));do a.io.port_write16(b,\na.read_aligned16(m)),m+=l,k=0!==--e;while(k&&g--);a.add_reg_asize(reg_esi,d*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e}k&&(a.instruction_pointer=a.previous_ip)}else a.io.port_write16(b,a.safe_read16(c)),a.add_reg_asize(reg_esi,d);a.diverged()}\nfunction outsd(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,4);var c=a.get_seg_prefix(reg_ds)+a.get_reg_asize(reg_esi)|0,d=a.flags&flag_direction?-4:4;if(a.prefixes&PREFIX_MASK_REP){var e=a.get_reg_asize(reg_ecx)>>>0;if(0===e)return;var f=e,g=MAX_COUNT_PER_CYCLE;if(c&3){do{a.io.port_write32(b,a.safe_read32s(c));c+=d;a.add_reg_asize(reg_esi,d);var k=0!==a.decr_ecx_asize()}while(k&&g--)}else{var l=0>d?-1:1,m=a.translate_address_read(c)>>>2;a.paging&&(g=string_get_cycle_count(d,c));do a.io.port_write32(b,\na.read_aligned32(m)),m+=l,k=0!==--e;while(k&&g--);a.add_reg_asize(reg_esi,d*(f-e)|0);a.set_ecx_asize(e);a.timestamp_counter+=f-e}k&&(a.instruction_pointer=a.previous_ip)}else a.io.port_write32(b,a.safe_read32s(c)),a.add_reg_asize(reg_esi,d);a.diverged()};CPU.prototype.add8=function(a,b){return this.add(a,b,OPSIZE_8)};CPU.prototype.add16=function(a,b){return this.add(a,b,OPSIZE_16)};CPU.prototype.add32=function(a,b){return this.add(a,b,OPSIZE_32)};CPU.prototype.adc8=function(a,b){return this.adc(a,b,OPSIZE_8)};CPU.prototype.adc16=function(a,b){return this.adc(a,b,OPSIZE_16)};CPU.prototype.adc32=function(a,b){return this.adc(a,b,OPSIZE_32)};CPU.prototype.sub8=function(a,b){return this.sub(a,b,OPSIZE_8)};\nCPU.prototype.sub16=function(a,b){return this.sub(a,b,OPSIZE_16)};CPU.prototype.sub32=function(a,b){return this.sub(a,b,OPSIZE_32)};CPU.prototype.cmp8=function(a,b){return this.sub(a,b,OPSIZE_8)};CPU.prototype.cmp16=function(a,b){return this.sub(a,b,OPSIZE_16)};CPU.prototype.cmp32=function(a,b){return this.sub(a,b,OPSIZE_32)};CPU.prototype.sbb8=function(a,b){return this.sbb(a,b,OPSIZE_8)};CPU.prototype.sbb16=function(a,b){return this.sbb(a,b,OPSIZE_16)};\nCPU.prototype.sbb32=function(a,b){return this.sbb(a,b,OPSIZE_32)};CPU.prototype.add=function(a,b,c){this.last_op1=a;this.last_op2=b;this.last_add_result=this.last_result=a+b|0;this.last_op_size=c;this.flags_changed=flags_all;return this.last_result};CPU.prototype.adc=function(a,b,c){var d=this.getcf();this.last_op1=a;this.last_op2=b;this.last_add_result=this.last_result=(a+b|0)+d|0;this.last_op_size=c;this.flags_changed=flags_all;return this.last_result};\nCPU.prototype.sub=function(a,b,c){this.last_add_result=a;this.last_op2=b;this.last_op1=this.last_result=a-b|0;this.last_op_size=c;this.flags_changed=flags_all;return this.last_result};CPU.prototype.sbb=function(a,b,c){var d=this.getcf();this.last_add_result=a;this.last_op2=b;this.last_op1=this.last_result=a-b-d|0;this.last_op_size=c;this.flags_changed=flags_all;return this.last_result};CPU.prototype.inc8=function(a){return this.inc(a,OPSIZE_8)};CPU.prototype.inc16=function(a){return this.inc(a,OPSIZE_16)};\nCPU.prototype.inc32=function(a){return this.inc(a,OPSIZE_32)};CPU.prototype.dec8=function(a){return this.dec(a,OPSIZE_8)};CPU.prototype.dec16=function(a){return this.dec(a,OPSIZE_16)};CPU.prototype.dec32=function(a){return this.dec(a,OPSIZE_32)};CPU.prototype.inc=function(a,b){this.flags=this.flags&-2|this.getcf();this.last_op1=a;this.last_op2=1;this.last_add_result=this.last_result=a+1|0;this.last_op_size=b;this.flags_changed=flags_all&-2;return this.last_result};\nCPU.prototype.dec=function(a,b){this.flags=this.flags&-2|this.getcf();this.last_add_result=a;this.last_op2=1;this.last_op1=this.last_result=a-1|0;this.last_op_size=b;this.flags_changed=flags_all&-2;return this.last_result};CPU.prototype.neg8=function(a){return this.neg(a,OPSIZE_8)};CPU.prototype.neg16=function(a){return this.neg(a,OPSIZE_16)};CPU.prototype.neg32=function(a){return this.neg(a,OPSIZE_32)};\nCPU.prototype.neg=function(a,b){this.last_op1=this.last_result=-a|0;this.flags_changed=flags_all;this.last_add_result=0;this.last_op2=a;this.last_op_size=b;return this.last_result};CPU.prototype.mul8=function(a){a*=this.reg8[reg_al];this.reg16[reg_ax]=a;this.last_result=a&255;this.last_op_size=OPSIZE_8;this.flags=256>a?this.flags&-2&~flag_overflow:this.flags|1|flag_overflow;this.flags_changed=flags_all&-2&~flag_overflow};\nCPU.prototype.imul8=function(a){a*=this.reg8s[reg_al];this.reg16[reg_ax]=a;this.last_result=a&255;this.last_op_size=OPSIZE_8;this.flags=127<a||-128>a?this.flags|1|flag_overflow:this.flags&-2&~flag_overflow;this.flags_changed=flags_all&-2&~flag_overflow};\nCPU.prototype.mul16=function(a){a*=this.reg16[reg_ax];var b=a>>>16;this.reg16[reg_ax]=a;this.reg16[reg_dx]=b;this.last_result=a&65535;this.last_op_size=OPSIZE_16;this.flags=0===b?this.flags&-2&~flag_overflow:this.flags|1|flag_overflow;this.flags_changed=flags_all&-2&~flag_overflow};\nCPU.prototype.imul16=function(a){a*=this.reg16s[reg_ax];this.reg16[reg_ax]=a;this.reg16[reg_dx]=a>>16;this.last_result=a&65535;this.last_op_size=OPSIZE_16;this.flags=32767<a||-32768>a?this.flags|1|flag_overflow:this.flags&-2&~flag_overflow;this.flags_changed=flags_all&-2&~flag_overflow};\nCPU.prototype.imul_reg16=function(a,b){dbg_assert(32768>a&&-32768<=a);dbg_assert(32768>b&&-32768<=b);a*=b;this.last_result=a&65535;this.last_op_size=OPSIZE_16;this.flags=32767<a||-32768>a?this.flags|1|flag_overflow:this.flags&-2&~flag_overflow;this.flags_changed=flags_all&-2&~flag_overflow;return a};\nCPU.prototype.do_mul32=function(a,b){var c=a&65535;a>>>=16;var d=b&65535;b>>>=16;var e=c*d;d=(e>>>16)+(a*d|0)|0;var f=d>>>16;d=(d&65535)+(c*b|0)|0;this.mul32_result[0]=d<<16|e&65535;this.mul32_result[1]=((d>>>16)+(a*b|0)|0)+f|0;return this.mul32_result};CPU.prototype.do_imul32=function(a,b){var c=!1;0>a&&(c=!0,a=-a|0);0>b&&(c=!c,b=-b|0);a=this.do_mul32(a,b);c&&(a[0]=-a[0]|0,a[1]=~a[1]+!a[0]|0);return a};\nCPU.prototype.mul32=function(a){a=this.do_mul32(this.reg32s[reg_eax],a);this.reg32s[reg_eax]=a[0];this.reg32s[reg_edx]=a[1];this.last_result=a[0];this.last_op_size=OPSIZE_32;this.flags=0===a[1]?this.flags&-2&~flag_overflow:this.flags|1|flag_overflow;this.flags_changed=flags_all&-2&~flag_overflow};\nCPU.prototype.imul32=function(a){dbg_assert(2147483648>a&&-2147483648<=a);a=this.do_imul32(this.reg32s[reg_eax],a);this.reg32s[reg_eax]=a[0];this.reg32s[reg_edx]=a[1];this.last_result=a[0];this.last_op_size=OPSIZE_32;this.flags=a[1]===a[0]>>31?this.flags&-2&~flag_overflow:this.flags|1|flag_overflow;this.flags_changed=flags_all&-2&~flag_overflow};\nCPU.prototype.imul_reg32=function(a,b){dbg_assert(2147483648>a&&-2147483648<=a);dbg_assert(2147483648>b&&-2147483648<=b);a=this.do_imul32(a,b);this.last_result=a[0];this.last_op_size=OPSIZE_32;this.flags=a[1]===a[0]>>31?this.flags&-2&~flag_overflow:this.flags|1|flag_overflow;this.flags_changed=flags_all&-2&~flag_overflow;return a[0]};\nCPU.prototype.div8=function(a){dbg_assert(0<=a&&256>a);if(0===a)this.trigger_de();else{var b=this.reg16[reg_ax],c=b/a|0;256<=c?this.trigger_de():(this.reg8[reg_al]=c,this.reg8[reg_ah]=b%a)}};CPU.prototype.idiv8=function(a){dbg_assert(-128<=a&&128>a);if(0===a)this.trigger_de();else{var b=this.reg16s[reg_ax],c=b/a|0;128<=c||-129>=c?this.trigger_de():(this.reg8[reg_al]=c,this.reg8[reg_ah]=b%a)}};\nCPU.prototype.div16=function(a){dbg_assert(0<=a&&65536>a);if(0===a)this.trigger_de();else{var b=(this.reg16[reg_ax]|this.reg16[reg_dx]<<16)>>>0,c=b/a|0;65536<=c||0>c?this.trigger_de():(this.reg16[reg_ax]=c,this.reg16[reg_dx]=b%a)}};CPU.prototype.idiv16=function(a){dbg_assert(-32768<=a&&32768>a);if(0===a)this.trigger_de();else{var b=this.reg16[reg_ax]|this.reg16[reg_dx]<<16,c=b/a|0;32768<=c||-32769>=c?this.trigger_de():(this.reg16[reg_ax]=c,this.reg16[reg_dx]=b%a)}};\nCPU.prototype.do_div32=function(a,b,c){if(b>=c||0===c)dbg_log(\"div32 #DE: \"+h(b,8)+\":\"+h(a,8)+\" div \"+h(c,8)),this.trigger_de();var d=0;if(1048576<b){for(var e=32,f=c;f>b;)f>>>=1,e--;for(;1048576<b;){if(b>=f){b-=f;var g=c<<e>>>0;g>a&&b--;a=a-g>>>0;d|=1<<e}e--;f>>=1}d>>>=0}a+=4294967296*b;this.div32_result[0]=d+(a/c|0);this.div32_result[1]=a%c;return this.div32_result};\nCPU.prototype.div32=function(a){dbg_assert(0<=a&&4294967295>=a);var b=this.reg32[reg_eax],c=this.reg32[reg_edx],d=this.do_div32(b,c,a),e=d[0];d=d[1];dbg_assert(a);4294967296<=e?(dbg_log(\"div32 #DE: \"+h(c,8)+\":\"+h(b,8)+\" div \"+h(a,8)),dbg_log(\"-> \"+h(e)),this.trigger_de()):(this.reg32s[reg_eax]=e,this.reg32s[reg_edx]=d)};\nCPU.prototype.idiv32=function(a){dbg_assert(2147483648>a&&-2147483648<=a);var b=this.reg32[reg_eax],c=this.reg32s[reg_edx],d=!1,e=!1;0>a&&(e=!0,a=-a);0>c&&(d=!0,e=!e,b=-b>>>0,c=~c+!b);var f=this.do_div32(b,c,a),g=f[0];f=f[1];e&&(g=-g|0);d&&(f=-f|0);dbg_assert(a);2147483648<=g||-2147483649>=g?(dbg_log(\"div32 #DE: \"+h(c,8)+\":\"+h(b,8)+\" div \"+h(a,8)),dbg_log(\"-> \"+h(g)),this.trigger_de()):(this.reg32s[reg_eax]=g,this.reg32s[reg_edx]=f)};\nCPU.prototype.xadd8=function(a,b){var c=this.reg8[b];this.reg8[b]=a;return this.add(a,c,OPSIZE_8)};CPU.prototype.xadd16=function(a,b){var c=this.reg16[b];this.reg16[b]=a;return this.add(a,c,OPSIZE_16)};CPU.prototype.xadd32=function(a,b){var c=this.reg32s[b];this.reg32s[b]=a;return this.add(a,c,OPSIZE_32)};\nCPU.prototype.bcd_daa=function(){var a=this.reg8[reg_al],b=this.getcf(),c=this.getaf();this.flags=this.flags&-2&~flag_adjust;if(9<(a&15)||c)this.reg8[reg_al]+=6,this.flags|=flag_adjust;if(153<a||b)this.reg8[reg_al]+=96,this.flags|=1;this.last_result=this.reg8[reg_al];this.last_op_size=OPSIZE_8;this.last_op1=this.last_op2=0;this.flags_changed=flags_all&-2&~flag_adjust&~flag_overflow};\nCPU.prototype.bcd_das=function(){var a=this.reg8[reg_al],b=this.getcf();this.flags&=-2;9<(a&15)||this.getaf()?(this.reg8[reg_al]-=6,this.flags|=flag_adjust,this.flags=this.flags&-2|b|6>a):this.flags&=~flag_adjust;if(153<a||b)this.reg8[reg_al]-=96,this.flags|=1;this.last_result=this.reg8[reg_al];this.last_op_size=OPSIZE_8;this.last_op1=this.last_op2=0;this.flags_changed=flags_all&-2&~flag_adjust&~flag_overflow};\nCPU.prototype.bcd_aam=function(a){if(0===a)this.trigger_de();else{var b=this.reg8[reg_al];this.reg8[reg_ah]=b/a;this.reg8[reg_al]=b%a;this.last_result=this.reg8[reg_al];this.flags_changed=flags_all&-2&~flag_adjust&~flag_overflow;this.flags=this.flags&-2&~flag_adjust&~flag_overflow}};\nCPU.prototype.bcd_aad=function(a){a=this.reg8[reg_al]+this.reg8[reg_ah]*a;this.last_result=a&255;this.reg16[reg_ax]=this.last_result;this.last_op_size=OPSIZE_8;this.flags_changed=flags_all&-2&~flag_adjust&~flag_overflow;this.flags=this.flags&-2&~flag_adjust&~flag_overflow;65535<a&&(this.flags|=1)};\nCPU.prototype.bcd_aaa=function(){9<(this.reg8[reg_al]&15)||this.getaf()?(this.reg16[reg_ax]+=6,this.reg8[reg_ah]+=1,this.flags=this.flags|flag_adjust|1):this.flags=this.flags&~flag_adjust&-2;this.reg8[reg_al]&=15;this.flags_changed=this.flags_changed&~flag_adjust&-2};\nCPU.prototype.bcd_aas=function(){9<(this.reg8[reg_al]&15)||this.getaf()?(this.reg16[reg_ax]-=6,--this.reg8[reg_ah],this.flags=this.flags|flag_adjust|1):this.flags=this.flags&~flag_adjust&-2;this.reg8[reg_al]&=15;this.flags_changed=this.flags_changed&~flag_adjust&-2};CPU.prototype.and8=function(a,b){return this.and(a,b,OPSIZE_8)};CPU.prototype.and16=function(a,b){return this.and(a,b,OPSIZE_16)};CPU.prototype.and32=function(a,b){return this.and(a,b,OPSIZE_32)};\nCPU.prototype.test8=function(a,b){return this.and(a,b,OPSIZE_8)};CPU.prototype.test16=function(a,b){return this.and(a,b,OPSIZE_16)};CPU.prototype.test32=function(a,b){return this.and(a,b,OPSIZE_32)};CPU.prototype.or8=function(a,b){return this.or(a,b,OPSIZE_8)};CPU.prototype.or16=function(a,b){return this.or(a,b,OPSIZE_16)};CPU.prototype.or32=function(a,b){return this.or(a,b,OPSIZE_32)};CPU.prototype.xor8=function(a,b){return this.xor(a,b,OPSIZE_8)};\nCPU.prototype.xor16=function(a,b){return this.xor(a,b,OPSIZE_16)};CPU.prototype.xor32=function(a,b){return this.xor(a,b,OPSIZE_32)};CPU.prototype.and=function(a,b,c){this.last_result=a&b;this.last_op_size=c;this.flags=this.flags&-2&~flag_overflow&~flag_adjust;this.flags_changed=flags_all&-2&~flag_overflow&~flag_adjust;return this.last_result};\nCPU.prototype.or=function(a,b,c){this.last_result=a|b;this.last_op_size=c;this.flags=this.flags&-2&~flag_overflow&~flag_adjust;this.flags_changed=flags_all&-2&~flag_overflow&~flag_adjust;return this.last_result};CPU.prototype.xor=function(a,b,c){this.last_result=a^b;this.last_op_size=c;this.flags=this.flags&-2&~flag_overflow&~flag_adjust;this.flags_changed=flags_all&-2&~flag_overflow&~flag_adjust;return this.last_result};\nCPU.prototype.rol8=function(a,b){if(!b)return a;b&=7;a=a<<b|a>>8-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a&1|(a<<11^a<<4)&flag_overflow;return a};CPU.prototype.rol16=function(a,b){if(!b)return a;b&=15;a=a<<b|a>>16-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a&1|(a<<11^a>>4)&flag_overflow;return a};\nCPU.prototype.rol32=function(a,b){if(!b)return a;a=a<<b|a>>>32-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a&1|(a<<11^a>>20)&flag_overflow;return a};CPU.prototype.rcl8=function(a,b){b%=9;if(!b)return a;a=a<<b|this.getcf()<<b-1|a>>9-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>8&1|(a<<3^a<<4)&flag_overflow;return a};\nCPU.prototype.rcl16=function(a,b){b%=17;if(!b)return a;a=a<<b|this.getcf()<<b-1|a>>17-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>16&1|(a>>5^a>>4)&flag_overflow;return a};CPU.prototype.rcl32=function(a,b){if(!b)return a;var c=a<<b|this.getcf()<<b-1;1<b&&(c|=a>>>33-b);this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>>32-b&1;this.flags|=(this.flags<<11^c>>20)&flag_overflow;return c};\nCPU.prototype.ror8=function(a,b){if(!b)return a;b&=7;a=a>>b|a<<8-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>7&1|(a<<4^a<<5)&flag_overflow;return a};CPU.prototype.ror16=function(a,b){if(!b)return a;b&=15;a=a>>b|a<<16-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>15&1|(a>>4^a>>3)&flag_overflow;return a};\nCPU.prototype.ror32=function(a,b){if(!b)return a;a=a>>>b|a<<32-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>31&1|(a>>20^a>>19)&flag_overflow;return a};CPU.prototype.rcr8=function(a,b){b%=9;if(!b)return a;a=a>>b|this.getcf()<<8-b|a<<9-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>8&1|(a<<4^a<<5)&flag_overflow;return a};\nCPU.prototype.rcr16=function(a,b){b%=17;if(!b)return a;a=a>>b|this.getcf()<<16-b|a<<17-b;this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>16&1|(a>>4^a>>3)&flag_overflow;return a};CPU.prototype.rcr32=function(a,b){if(!b)return a;var c=a>>>b|this.getcf()<<32-b;1<b&&(c|=a<<33-b);this.flags_changed=this.flags_changed&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>b-1&1|(c>>20^c>>19)&flag_overflow;return c};\nCPU.prototype.shl8=function(a,b){if(0===b)return a;this.last_result=a<<b;this.last_op_size=OPSIZE_8;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|this.last_result>>8&1|(this.last_result<<3^this.last_result<<4)&flag_overflow;return this.last_result};\nCPU.prototype.shl16=function(a,b){if(0===b)return a;this.last_result=a<<b;this.last_op_size=OPSIZE_16;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|this.last_result>>16&1|(this.last_result>>5^this.last_result>>4)&flag_overflow;return this.last_result};\nCPU.prototype.shl32=function(a,b){if(0===b)return a;this.last_result=a<<b;this.last_op_size=OPSIZE_32;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>>32-b&1;this.flags|=(this.flags&1^this.last_result>>31&1)<<11&flag_overflow;return this.last_result};\nCPU.prototype.shr8=function(a,b){if(0===b)return a;this.last_result=a>>b;this.last_op_size=OPSIZE_8;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>b-1&1|(a>>7&1)<<11&flag_overflow;return this.last_result};CPU.prototype.shr16=function(a,b){if(0===b)return a;this.last_result=a>>b;this.last_op_size=OPSIZE_16;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>b-1&1|a>>4&flag_overflow;return this.last_result};\nCPU.prototype.shr32=function(a,b){if(0===b)return a;this.last_result=a>>>b;this.last_op_size=OPSIZE_32;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>>b-1&1|a>>20&flag_overflow;return this.last_result};\nCPU.prototype.sar8=function(a,b){if(0===b)return a;8>b?(this.last_result=a<<24>>b+24,this.flags=this.flags&-2&~flag_overflow|a>>b-1&1):(this.last_result=a<<24>>31,this.flags=this.flags&-2&~flag_overflow|this.last_result&1);this.last_op_size=OPSIZE_8;this.flags_changed=flags_all&-2&~flag_overflow;return this.last_result};\nCPU.prototype.sar16=function(a,b){if(0===b)return a;16>b?(this.last_result=a<<16>>b+16,this.flags=this.flags&-2&~flag_overflow|a>>b-1&1):(this.last_result=a<<16>>31,this.flags=this.flags&-2&~flag_overflow|this.last_result&1);this.last_op_size=OPSIZE_16;this.flags_changed=flags_all&-2&~flag_overflow;return this.last_result};\nCPU.prototype.sar32=function(a,b){if(0===b)return a;this.last_result=a>>b;this.last_op_size=OPSIZE_32;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2&~flag_overflow|a>>>b-1&1;return this.last_result};\nCPU.prototype.shrd16=function(a,b,c){if(0===c)return a;16>=c?(this.last_result=a>>c|b<<16-c,this.flags=this.flags&-2|a>>c-1&1):(this.last_result=a<<32-c|b>>c-16,this.flags=this.flags&-2|b>>c-17&1);this.last_op_size=OPSIZE_16;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&~flag_overflow|(this.last_result^a)>>4&flag_overflow;return this.last_result};\nCPU.prototype.shrd32=function(a,b,c){if(0===c)return a;this.last_result=a>>>c|b<<32-c;this.last_op_size=OPSIZE_32;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2|a>>>c-1&1;this.flags=this.flags&~flag_overflow|(this.last_result^a)>>20&flag_overflow;return this.last_result};\nCPU.prototype.shld16=function(a,b,c){if(0===c)return a;16>=c?(this.last_result=a<<c|b>>>16-c,this.flags=this.flags&-2|a>>>16-c&1):(this.last_result=a>>32-c|b<<c-16,this.flags=this.flags&-2|b>>>32-c&1);this.last_op_size=OPSIZE_16;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&~flag_overflow|(this.flags&1^this.last_result>>15&1)<<11;return this.last_result};\nCPU.prototype.shld32=function(a,b,c){if(0===c)return a;this.last_result=a<<c|b>>>32-c;this.last_op_size=OPSIZE_32;this.flags_changed=flags_all&-2&~flag_overflow;this.flags=this.flags&-2|a>>>32-c&1;this.flags=1===c?this.flags&~flag_overflow|(this.flags&1^this.last_result>>31&1)<<11:this.flags&~flag_overflow;return this.last_result};CPU.prototype.bt_reg=function(a,b){this.flags=this.flags&-2|a>>b&1;this.flags_changed&=-2};\nCPU.prototype.btc_reg=function(a,b){this.flags=this.flags&-2|a>>b&1;this.flags_changed&=-2;return a^1<<b};CPU.prototype.bts_reg=function(a,b){this.flags=this.flags&-2|a>>b&1;this.flags_changed&=-2;return a|1<<b};CPU.prototype.btr_reg=function(a,b){this.flags=this.flags&-2|a>>b&1;this.flags_changed&=-2;return a&~(1<<b)};CPU.prototype.bt_mem=function(a,b){a=this.safe_read8(a+(b>>3)|0);this.flags=this.flags&-2|a>>(b&7)&1;this.flags_changed&=-2};\nCPU.prototype.btc_mem=function(a,b){a=this.translate_address_write(a+(b>>3)|0);var c=this.read8(a);b&=7;this.flags=this.flags&-2|c>>b&1;this.flags_changed&=-2;this.write8(a,c^1<<b)};CPU.prototype.btr_mem=function(a,b){a=this.translate_address_write(a+(b>>3)|0);var c=this.read8(a);b&=7;this.flags=this.flags&-2|c>>b&1;this.flags_changed&=-2;this.write8(a,c&~(1<<b))};\nCPU.prototype.bts_mem=function(a,b){a=this.translate_address_write(a+(b>>3)|0);var c=this.read8(a);b&=7;this.flags=this.flags&-2|c>>b&1;this.flags_changed&=-2;this.write8(a,c|1<<b)};CPU.prototype.bsf16=function(a,b){this.flags_changed=flags_all&~flag_zero;this.last_op_size=OPSIZE_16;if(0===b)return this.flags|=flag_zero,this.last_result=b,a;this.flags&=~flag_zero;return this.last_result=v86util.int_log2(-b&b)};\nCPU.prototype.bsf32=function(a,b){this.flags_changed=flags_all&~flag_zero;this.last_op_size=OPSIZE_32;if(0===b)return this.flags|=flag_zero,this.last_result=b,a;this.flags&=~flag_zero;return this.last_result=v86util.int_log2((-b&b)>>>0)};CPU.prototype.bsr16=function(a,b){this.flags_changed=flags_all&~flag_zero;this.last_op_size=OPSIZE_16;if(0===b)return this.flags|=flag_zero,this.last_result=b,a;this.flags&=~flag_zero;return this.last_result=v86util.int_log2(b)};\nCPU.prototype.bsr32=function(a,b){this.flags_changed=flags_all&~flag_zero;this.last_op_size=OPSIZE_32;if(0===b)return this.flags|=flag_zero,this.last_result=b,a;this.flags&=~flag_zero;return this.last_result=v86util.int_log2(b>>>0)};CPU.prototype.popcnt=function(a){this.flags_changed=0;this.flags&=~flags_all;if(a)return a-=a>>1&1431655765,a=(a&858993459)+(a>>2&858993459),16843009*(a+(a>>4)&252645135)>>24;this.flags|=flag_zero;return 0};\nCPU.prototype.saturate_sw_to_ub=function(a){dbg_assert(0===(a&4294901760));a>>>=0;32768<=a?a=0:255<a&&(a=255);dbg_assert(0===(a&4294967040));return a};CPU.prototype.saturate_sw_to_sb=function(a){dbg_assert(0===(a&4294901760));65408<a?a&=255:32767<a?a=128:127<a&&(a=127);dbg_assert(0===(a&4294967040));return a};CPU.prototype.saturate_sd_to_sw=function(a){a>>>=0;4294934528<a?a&=65535:2147483647<a?a=32768:32767<a&&(a=32767);dbg_assert(0===(a&4294901760));return a};\nCPU.prototype.saturate_sd_to_sb=function(a){a>>>=0;4294967168<a?a&=255:2147483647<a?a=128:127<a&&(a=127);dbg_assert(0===(a&4294967040));return a};CPU.prototype.saturate_sd_to_ub=function(a){a|=0;0>a&&(a=0);dbg_assert(0===(a&4294967040));return a};CPU.prototype.saturate_ud_to_ub=function(a){a>>>=0;255<a&&(a=255);dbg_assert(0===(a&4294967040));return a};CPU.prototype.saturate_uw=function(a){dbg_assert(0<=a);return 65535<a?65535:a};CPU.prototype.jmpcc8=function(a){var b=this.read_op8s();a?(this.instruction_pointer=this.instruction_pointer+b|0,this.branch_taken()):this.branch_not_taken()};CPU.prototype.jmp_rel16=function(a){var b=this.get_seg(reg_cs);this.instruction_pointer-=b;this.instruction_pointer=this.instruction_pointer+a&65535;this.instruction_pointer=this.instruction_pointer+b|0};CPU.prototype.jmpcc16=function(a){var b=this.read_op16();a?(this.jmp_rel16(b),this.branch_taken()):this.branch_not_taken()};\nCPU.prototype.jmpcc32=function(a){var b=this.read_op32s();a?(this.instruction_pointer=this.instruction_pointer+b|0,this.branch_taken()):this.branch_not_taken()};CPU.prototype.cmovcc16=function(a){var b=this.read_e16();a&&this.write_g16(b)};CPU.prototype.cmovcc32=function(a){var b=this.read_e32s();a&&this.write_g32(b)};CPU.prototype.setcc=function(a){this.set_e8(a?1:0)};\nCPU.prototype.loopne=function(a){this.decr_ecx_asize()&&!this.getzf()?(this.instruction_pointer=this.instruction_pointer+a|0,this.branch_taken()):this.branch_not_taken()};CPU.prototype.loope=function(a){this.decr_ecx_asize()&&this.getzf()?(this.instruction_pointer=this.instruction_pointer+a|0,this.branch_taken()):this.branch_not_taken()};CPU.prototype.loop=function(a){this.decr_ecx_asize()?(this.instruction_pointer=this.instruction_pointer+a|0,this.branch_taken()):this.branch_not_taken()};\nCPU.prototype.jcxz=function(a){0===this.get_reg_asize(reg_ecx)?(this.instruction_pointer=this.instruction_pointer+a|0,this.branch_taken()):this.branch_not_taken()};CPU.prototype.getcf=function(){return this.flags_changed&1?(this.last_op1^(this.last_op1^this.last_op2)&(this.last_op2^this.last_add_result))>>>this.last_op_size&1:this.flags&1};CPU.prototype.getpf=function(){return this.flags_changed&flag_parity?154020>>((this.last_result^this.last_result>>4)&15)&flag_parity:this.flags&flag_parity};\nCPU.prototype.getaf=function(){return this.flags_changed&flag_adjust?(this.last_op1^this.last_op2^this.last_add_result)&flag_adjust:this.flags&flag_adjust};CPU.prototype.getzf=function(){return this.flags_changed&flag_zero?(~this.last_result&this.last_result-1)>>>this.last_op_size&1:this.flags&flag_zero};CPU.prototype.getsf=function(){return this.flags_changed&flag_sign?this.last_result>>>this.last_op_size&1:this.flags&flag_sign};\nCPU.prototype.getof=function(){return this.flags_changed&flag_overflow?((this.last_op1^this.last_add_result)&(this.last_op2^this.last_add_result))>>>this.last_op_size&1:this.flags&flag_overflow};CPU.prototype.test_o=CPU.prototype.getof;CPU.prototype.test_b=CPU.prototype.getcf;CPU.prototype.test_z=CPU.prototype.getzf;CPU.prototype.test_s=CPU.prototype.getsf;CPU.prototype.test_p=CPU.prototype.getpf;CPU.prototype.test_be=function(){return this.getcf()||this.getzf()};\nCPU.prototype.test_l=function(){return!this.getsf()!==!this.getof()};CPU.prototype.test_le=function(){return this.getzf()||!this.getsf()!==!this.getof()};CPU.prototype.push16=function(a){var b=this.get_stack_pointer(-2);this.safe_write16(b,a);this.adjust_stack_reg(-2)};CPU.prototype.push32=function(a){var b=this.get_stack_pointer(-4);this.safe_write32(b,a);this.adjust_stack_reg(-4)};\nCPU.prototype.pop16=function(){var a=this.get_seg(reg_ss)+this.get_stack_reg()|0;a=this.safe_read16(a);this.adjust_stack_reg(2);return a};CPU.prototype.pop32s=function(){var a=this.get_seg(reg_ss)+this.get_stack_reg()|0;a=this.safe_read32s(a);this.adjust_stack_reg(4);return a};\nCPU.prototype.pusha16=function(){var a=this.reg16[reg_sp];this.writable_or_pagefault(this.get_stack_pointer(-16),16);this.push16(this.reg16[reg_ax]);this.push16(this.reg16[reg_cx]);this.push16(this.reg16[reg_dx]);this.push16(this.reg16[reg_bx]);this.push16(a);this.push16(this.reg16[reg_bp]);this.push16(this.reg16[reg_si]);this.push16(this.reg16[reg_di])};\nCPU.prototype.pusha32=function(){var a=this.reg32s[reg_esp];this.writable_or_pagefault(this.get_stack_pointer(-32),32);this.push32(this.reg32s[reg_eax]);this.push32(this.reg32s[reg_ecx]);this.push32(this.reg32s[reg_edx]);this.push32(this.reg32s[reg_ebx]);this.push32(a);this.push32(this.reg32s[reg_ebp]);this.push32(this.reg32s[reg_esi]);this.push32(this.reg32s[reg_edi])};\nCPU.prototype.popa16=function(){this.translate_address_read(this.get_stack_pointer(0));this.translate_address_read(this.get_stack_pointer(15));this.reg16[reg_di]=this.pop16();this.reg16[reg_si]=this.pop16();this.reg16[reg_bp]=this.pop16();this.adjust_stack_reg(2);this.reg16[reg_bx]=this.pop16();this.reg16[reg_dx]=this.pop16();this.reg16[reg_cx]=this.pop16();this.reg16[reg_ax]=this.pop16()};\nCPU.prototype.popa32=function(){this.translate_address_read(this.get_stack_pointer(0));this.translate_address_read(this.get_stack_pointer(31));this.reg32s[reg_edi]=this.pop32s();this.reg32s[reg_esi]=this.pop32s();this.reg32s[reg_ebp]=this.pop32s();this.adjust_stack_reg(4);this.reg32s[reg_ebx]=this.pop32s();this.reg32s[reg_edx]=this.pop32s();this.reg32s[reg_ecx]=this.pop32s();this.reg32s[reg_eax]=this.pop32s()};CPU.prototype.xchg8=function(a,b){b=b>>1&12|b>>5&1;var c=this.reg8[b];this.reg8[b]=a;return c};\nCPU.prototype.xchg16=function(a,b){b=b>>2&14;var c=this.reg16[b];this.reg16[b]=a;return c};CPU.prototype.xchg16r=function(a){var b=this.reg16[reg_ax];this.reg16[reg_ax]=this.reg16[a];this.reg16[a]=b};CPU.prototype.xchg32=function(a,b){b=b>>3&7;var c=this.reg32s[b];this.reg32s[b]=a;return c};CPU.prototype.xchg32r=function(a){var b=this.reg32s[reg_eax];this.reg32s[reg_eax]=this.reg32s[a];this.reg32s[a]=b};\nCPU.prototype.lss16=function(a){192<=this.modrm_byte&&this.trigger_ud();var b=this.modrm_resolve(this.modrm_byte),c=this.safe_read16(b);b=this.safe_read16(b+2|0);this.switch_seg(a,b);this.reg16[this.modrm_byte>>2&14]=c};CPU.prototype.lss32=function(a){192<=this.modrm_byte&&this.trigger_ud();var b=this.modrm_resolve(this.modrm_byte),c=this.safe_read32s(b);b=this.safe_read16(b+4|0);this.switch_seg(a,b);this.reg32s[this.modrm_byte>>3&7]=c};\nCPU.prototype.enter16=function(a,b){(b&=31)&&dbg_log(\"enter16 stack=\"+(this.stack_size_32?32:16)+\" size=\"+a+\" nest=\"+b,LOG_CPU);this.push16(this.reg16[reg_bp]);var c=this.reg16[reg_sp];if(0<b){for(var d=this.reg16[reg_ebp],e=1;e<b;e++)d-=2,this.push16(this.safe_read16(this.get_seg(reg_ss)+d|0));this.push16(c)}this.reg16[reg_bp]=c;this.adjust_stack_reg(-a)};\nCPU.prototype.enter32=function(a,b){(b&=31)&&dbg_log(\"enter32 stack=\"+(this.stack_size_32?32:16)+\" size=\"+a+\" nest=\"+b,LOG_CPU);this.push32(this.reg32s[reg_ebp]);var c=this.reg32s[reg_esp];if(0<b){for(var d=this.reg32s[reg_ebp],e=1;e<b;e++)d-=4,this.push32(this.safe_read32s(this.get_seg(reg_ss)+d|0));this.push32(c)}this.reg32s[reg_ebp]=c;this.adjust_stack_reg(-a)};CPU.prototype.bswap=function(a){var b=this.reg32s[a];this.reg32s[a]=b>>>24|b<<24|b>>8&65280|b<<8&16711680};\nCPU.prototype.fxsave=function(a){this.writable_or_pagefault(a,512);this.safe_write16(a+0|0,this.fpu.control_word);this.safe_write16(a+2|0,this.fpu.load_status_word());this.safe_write8(a+4|0,~this.fpu.stack_empty&255);this.safe_write16(a+6|0,this.fpu.fpu_opcode);this.safe_write32(a+8|0,this.fpu.fpu_ip);this.safe_write16(a+12|0,this.fpu.fpu_ip_selector);this.safe_write32(a+16|0,this.fpu.fpu_dp);this.safe_write16(a+20|0,this.fpu.fpu_dp_selector);this.safe_write32(a+24|0,this.mxcsr);this.safe_write32(a+\n28|0,MXCSR_MASK);for(var b=0;8>b;b++)this.fpu.store_m80(a+32+(b<<4)|0,this.fpu.st[this.fpu.stack_ptr+b&7]);for(b=0;8>b;b++)this.safe_write32(a+160+(b<<4)+0|0,this.reg_xmm32s[b<<2|0]),this.safe_write32(a+160+(b<<4)+4|0,this.reg_xmm32s[b<<2|1]),this.safe_write32(a+160+(b<<4)+8|0,this.reg_xmm32s[b<<2|2]),this.safe_write32(a+160+(b<<4)+12|0,this.reg_xmm32s[b<<2|3])};\nCPU.prototype.fxrstor=function(a){this.translate_address_read(a|0);this.translate_address_read(a+511|0);var b=this.safe_read32s(a+24|0);b&~MXCSR_MASK&&(dbg_log(\"Invalid mxcsr bits: \"+h((b&~MXCSR_MASK)>>>0,8)),this.trigger_gp(0));this.fpu.control_word=this.safe_read16(a+0|0);this.fpu.set_status_word(this.safe_read16(a+2|0));this.fpu.stack_empty=~this.safe_read8(a+4|0)&255;this.fpu.fpu_opcode=this.safe_read16(a+6|0);this.fpu.fpu_ip=this.safe_read32s(a+8|0);this.fpu.fpu_ip=this.safe_read16(a+12|0);this.fpu.fpu_dp=\nthis.safe_read32s(a+16|0);this.fpu.fpu_dp_selector=this.safe_read16(a+20|0);this.mxcsr=b;for(b=0;8>b;b++)this.fpu.st[this.fpu.stack_ptr+b&7]=this.fpu.load_m80(a+32+(b<<4)|0);for(b=0;8>b;b++)this.reg_xmm32s[b<<2|0]=this.safe_read32s(a+160+(b<<4)+0|0),this.reg_xmm32s[b<<2|1]=this.safe_read32s(a+160+(b<<4)+4|0),this.reg_xmm32s[b<<2|2]=this.safe_read32s(a+160+(b<<4)+8|0),this.reg_xmm32s[b<<2|3]=this.safe_read32s(a+160+(b<<4)+12|0)};var t=[],t16=[],t32=[];t[0]=function(a){a.read_modrm_byte();a.write_e8(a.add8(a.read_write_e8(),a.read_g8()))};t16[1]=function(a){a.read_modrm_byte();a.write_e16(a.add16(a.read_write_e16(),a.read_g16()))};t32[1]=function(a){a.read_modrm_byte();a.write_e32(a.add32(a.read_write_e32(),a.read_g32s()))};t[2]=function(a){a.read_modrm_byte();a.write_g8(a.add8(a.read_g8(),a.read_e8()))};t16[3]=function(a){a.read_modrm_byte();a.write_g16(a.add16(a.read_g16(),a.read_e16()))};\nt32[3]=function(a){a.read_modrm_byte();a.write_g32(a.add32(a.read_g32s(),a.read_e32s()))};t[4]=function(a){a.reg8[reg_al]=a.add8(a.reg8[reg_al],a.read_op8())};t16[5]=function(a){a.reg16[reg_ax]=a.add16(a.reg16[reg_ax],a.read_op16())};t32[5]=function(a){a.reg32s[reg_eax]=a.add32(a.reg32s[reg_eax],a.read_op32s())};t16[6]=function(a){a.push16(a.sreg[reg_es])};t32[6]=function(a){a.push32(a.sreg[reg_es])};t16[7]=function(a){a.switch_seg(reg_es,a.safe_read16(a.get_stack_pointer(0)));a.adjust_stack_reg(2)};\nt32[7]=function(a){a.switch_seg(reg_es,a.safe_read32s(a.get_stack_pointer(0))&65535);a.adjust_stack_reg(4)};t[8]=function(a){a.read_modrm_byte();a.write_e8(a.or8(a.read_write_e8(),a.read_g8()))};t16[9]=function(a){a.read_modrm_byte();a.write_e16(a.or16(a.read_write_e16(),a.read_g16()))};t32[9]=function(a){a.read_modrm_byte();a.write_e32(a.or32(a.read_write_e32(),a.read_g32s()))};t[10]=function(a){a.read_modrm_byte();a.write_g8(a.or8(a.read_g8(),a.read_e8()))};\nt16[11]=function(a){a.read_modrm_byte();a.write_g16(a.or16(a.read_g16(),a.read_e16()))};t32[11]=function(a){a.read_modrm_byte();a.write_g32(a.or32(a.read_g32s(),a.read_e32s()))};t[12]=function(a){a.reg8[reg_al]=a.or8(a.reg8[reg_al],a.read_op8())};t16[13]=function(a){a.reg16[reg_ax]=a.or16(a.reg16[reg_ax],a.read_op16())};t32[13]=function(a){a.reg32s[reg_eax]=a.or32(a.reg32s[reg_eax],a.read_op32s())};t16[14]=function(a){a.push16(a.sreg[reg_cs])};t32[14]=function(a){a.push32(a.sreg[reg_cs])};\nt16[15]=function(a){a.table0F_16[a.read_op0F()](a)};t32[15]=function(a){a.table0F_32[a.read_op0F()](a)};t[16]=function(a){a.read_modrm_byte();a.write_e8(a.adc8(a.read_write_e8(),a.read_g8()))};t16[17]=function(a){a.read_modrm_byte();a.write_e16(a.adc16(a.read_write_e16(),a.read_g16()))};t32[17]=function(a){a.read_modrm_byte();a.write_e32(a.adc32(a.read_write_e32(),a.read_g32s()))};t[18]=function(a){a.read_modrm_byte();a.write_g8(a.adc8(a.read_g8(),a.read_e8()))};\nt16[19]=function(a){a.read_modrm_byte();a.write_g16(a.adc16(a.read_g16(),a.read_e16()))};t32[19]=function(a){a.read_modrm_byte();a.write_g32(a.adc32(a.read_g32s(),a.read_e32s()))};t[20]=function(a){a.reg8[reg_al]=a.adc8(a.reg8[reg_al],a.read_op8())};t16[21]=function(a){a.reg16[reg_ax]=a.adc16(a.reg16[reg_ax],a.read_op16())};t32[21]=function(a){a.reg32s[reg_eax]=a.adc32(a.reg32s[reg_eax],a.read_op32s())};t16[22]=function(a){a.push16(a.sreg[reg_ss])};t32[22]=function(a){a.push32(a.sreg[reg_ss])};\nt16[23]=function(a){a.switch_seg(reg_ss,a.safe_read16(a.get_stack_pointer(0)));a.adjust_stack_reg(2);a.clear_prefixes();a.cycle_internal()};t32[23]=function(a){a.switch_seg(reg_ss,a.safe_read32s(a.get_stack_pointer(0))&65535);a.adjust_stack_reg(4);a.clear_prefixes();a.cycle_internal()};t[24]=function(a){a.read_modrm_byte();a.write_e8(a.sbb8(a.read_write_e8(),a.read_g8()))};t16[25]=function(a){a.read_modrm_byte();a.write_e16(a.sbb16(a.read_write_e16(),a.read_g16()))};\nt32[25]=function(a){a.read_modrm_byte();a.write_e32(a.sbb32(a.read_write_e32(),a.read_g32s()))};t[26]=function(a){a.read_modrm_byte();a.write_g8(a.sbb8(a.read_g8(),a.read_e8()))};t16[27]=function(a){a.read_modrm_byte();a.write_g16(a.sbb16(a.read_g16(),a.read_e16()))};t32[27]=function(a){a.read_modrm_byte();a.write_g32(a.sbb32(a.read_g32s(),a.read_e32s()))};t[28]=function(a){a.reg8[reg_al]=a.sbb8(a.reg8[reg_al],a.read_op8())};t16[29]=function(a){a.reg16[reg_ax]=a.sbb16(a.reg16[reg_ax],a.read_op16())};\nt32[29]=function(a){a.reg32s[reg_eax]=a.sbb32(a.reg32s[reg_eax],a.read_op32s())};t16[30]=function(a){a.push16(a.sreg[reg_ds])};t32[30]=function(a){a.push32(a.sreg[reg_ds])};t16[31]=function(a){a.switch_seg(reg_ds,a.safe_read16(a.get_stack_pointer(0)));a.adjust_stack_reg(2)};t32[31]=function(a){a.switch_seg(reg_ds,a.safe_read32s(a.get_stack_pointer(0))&65535);a.adjust_stack_reg(4)};t[32]=function(a){a.read_modrm_byte();a.write_e8(a.and8(a.read_write_e8(),a.read_g8()))};\nt16[33]=function(a){a.read_modrm_byte();a.write_e16(a.and16(a.read_write_e16(),a.read_g16()))};t32[33]=function(a){a.read_modrm_byte();a.write_e32(a.and32(a.read_write_e32(),a.read_g32s()))};t[34]=function(a){a.read_modrm_byte();a.write_g8(a.and8(a.read_g8(),a.read_e8()))};t16[35]=function(a){a.read_modrm_byte();a.write_g16(a.and16(a.read_g16(),a.read_e16()))};t32[35]=function(a){a.read_modrm_byte();a.write_g32(a.and32(a.read_g32s(),a.read_e32s()))};\nt[36]=function(a){a.reg8[reg_al]=a.and8(a.reg8[reg_al],a.read_op8())};t16[37]=function(a){a.reg16[reg_ax]=a.and16(a.reg16[reg_ax],a.read_op16())};t32[37]=function(a){a.reg32s[reg_eax]=a.and32(a.reg32s[reg_eax],a.read_op32s())};t[38]=function(a){a.segment_prefix_op(reg_es)};t[39]=function(a){a.bcd_daa()};t[40]=function(a){a.read_modrm_byte();a.write_e8(a.sub8(a.read_write_e8(),a.read_g8()))};t16[41]=function(a){a.read_modrm_byte();a.write_e16(a.sub16(a.read_write_e16(),a.read_g16()))};\nt32[41]=function(a){a.read_modrm_byte();a.write_e32(a.sub32(a.read_write_e32(),a.read_g32s()))};t[42]=function(a){a.read_modrm_byte();a.write_g8(a.sub8(a.read_g8(),a.read_e8()))};t16[43]=function(a){a.read_modrm_byte();a.write_g16(a.sub16(a.read_g16(),a.read_e16()))};t32[43]=function(a){a.read_modrm_byte();a.write_g32(a.sub32(a.read_g32s(),a.read_e32s()))};t[44]=function(a){a.reg8[reg_al]=a.sub8(a.reg8[reg_al],a.read_op8())};t16[45]=function(a){a.reg16[reg_ax]=a.sub16(a.reg16[reg_ax],a.read_op16())};\nt32[45]=function(a){a.reg32s[reg_eax]=a.sub32(a.reg32s[reg_eax],a.read_op32s())};t[46]=function(a){a.segment_prefix_op(reg_cs)};t[47]=function(a){a.bcd_das()};t[48]=function(a){a.read_modrm_byte();a.write_e8(a.xor8(a.read_write_e8(),a.read_g8()))};t16[49]=function(a){a.read_modrm_byte();a.write_e16(a.xor16(a.read_write_e16(),a.read_g16()))};t32[49]=function(a){a.read_modrm_byte();a.write_e32(a.xor32(a.read_write_e32(),a.read_g32s()))};\nt[50]=function(a){a.read_modrm_byte();a.write_g8(a.xor8(a.read_g8(),a.read_e8()))};t16[51]=function(a){a.read_modrm_byte();a.write_g16(a.xor16(a.read_g16(),a.read_e16()))};t32[51]=function(a){a.read_modrm_byte();a.write_g32(a.xor32(a.read_g32s(),a.read_e32s()))};t[52]=function(a){a.reg8[reg_al]=a.xor8(a.reg8[reg_al],a.read_op8())};t16[53]=function(a){a.reg16[reg_ax]=a.xor16(a.reg16[reg_ax],a.read_op16())};t32[53]=function(a){a.reg32s[reg_eax]=a.xor32(a.reg32s[reg_eax],a.read_op32s())};t[54]=function(a){a.segment_prefix_op(reg_ss)};\nt[55]=function(a){a.bcd_aaa()};t[56]=function(a){a.read_modrm_byte();a.cmp8(a.read_e8(),a.read_g8())};t16[57]=function(a){a.read_modrm_byte();a.cmp16(a.read_e16(),a.read_g16())};t32[57]=function(a){a.read_modrm_byte();a.cmp32(a.read_e32s(),a.read_g32s())};t[58]=function(a){a.read_modrm_byte();a.cmp8(a.read_g8(),a.read_e8())};t16[59]=function(a){a.read_modrm_byte();a.cmp16(a.read_g16(),a.read_e16())};t32[59]=function(a){a.read_modrm_byte();a.cmp32(a.read_g32s(),a.read_e32s())};\nt[60]=function(a){a.cmp8(a.reg8[reg_al],a.read_op8())};t16[61]=function(a){a.cmp16(a.reg16[reg_ax],a.read_op16())};t32[61]=function(a){a.cmp32(a.reg32s[reg_eax],a.read_op32s())};t[62]=function(a){a.segment_prefix_op(reg_ds)};t[63]=function(a){a.bcd_aas()};t16[64]=function(a){a.reg16[reg_ax]=a.inc16(a.reg16[reg_ax])};t32[64]=function(a){a.reg32s[reg_eax]=a.inc32(a.reg32s[reg_eax])};t16[65]=function(a){a.reg16[reg_cx]=a.inc16(a.reg16[reg_cx])};t32[65]=function(a){a.reg32s[reg_ecx]=a.inc32(a.reg32s[reg_ecx])};\nt16[66]=function(a){a.reg16[reg_dx]=a.inc16(a.reg16[reg_dx])};t32[66]=function(a){a.reg32s[reg_edx]=a.inc32(a.reg32s[reg_edx])};t16[67]=function(a){a.reg16[reg_bx]=a.inc16(a.reg16[reg_bx])};t32[67]=function(a){a.reg32s[reg_ebx]=a.inc32(a.reg32s[reg_ebx])};t16[68]=function(a){a.reg16[reg_sp]=a.inc16(a.reg16[reg_sp])};t32[68]=function(a){a.reg32s[reg_esp]=a.inc32(a.reg32s[reg_esp])};t16[69]=function(a){a.reg16[reg_bp]=a.inc16(a.reg16[reg_bp])};t32[69]=function(a){a.reg32s[reg_ebp]=a.inc32(a.reg32s[reg_ebp])};\nt16[70]=function(a){a.reg16[reg_si]=a.inc16(a.reg16[reg_si])};t32[70]=function(a){a.reg32s[reg_esi]=a.inc32(a.reg32s[reg_esi])};t16[71]=function(a){a.reg16[reg_di]=a.inc16(a.reg16[reg_di])};t32[71]=function(a){a.reg32s[reg_edi]=a.inc32(a.reg32s[reg_edi])};t16[72]=function(a){a.reg16[reg_ax]=a.dec16(a.reg16[reg_ax])};t32[72]=function(a){a.reg32s[reg_eax]=a.dec32(a.reg32s[reg_eax])};t16[73]=function(a){a.reg16[reg_cx]=a.dec16(a.reg16[reg_cx])};t32[73]=function(a){a.reg32s[reg_ecx]=a.dec32(a.reg32s[reg_ecx])};\nt16[74]=function(a){a.reg16[reg_dx]=a.dec16(a.reg16[reg_dx])};t32[74]=function(a){a.reg32s[reg_edx]=a.dec32(a.reg32s[reg_edx])};t16[75]=function(a){a.reg16[reg_bx]=a.dec16(a.reg16[reg_bx])};t32[75]=function(a){a.reg32s[reg_ebx]=a.dec32(a.reg32s[reg_ebx])};t16[76]=function(a){a.reg16[reg_sp]=a.dec16(a.reg16[reg_sp])};t32[76]=function(a){a.reg32s[reg_esp]=a.dec32(a.reg32s[reg_esp])};t16[77]=function(a){a.reg16[reg_bp]=a.dec16(a.reg16[reg_bp])};t32[77]=function(a){a.reg32s[reg_ebp]=a.dec32(a.reg32s[reg_ebp])};\nt16[78]=function(a){a.reg16[reg_si]=a.dec16(a.reg16[reg_si])};t32[78]=function(a){a.reg32s[reg_esi]=a.dec32(a.reg32s[reg_esi])};t16[79]=function(a){a.reg16[reg_di]=a.dec16(a.reg16[reg_di])};t32[79]=function(a){a.reg32s[reg_edi]=a.dec32(a.reg32s[reg_edi])};t16[80]=function(a){a.push16(a.reg16[reg_ax])};t32[80]=function(a){a.push32(a.reg32s[reg_eax])};t16[81]=function(a){a.push16(a.reg16[reg_cx])};t32[81]=function(a){a.push32(a.reg32s[reg_ecx])};t16[82]=function(a){a.push16(a.reg16[reg_dx])};\nt32[82]=function(a){a.push32(a.reg32s[reg_edx])};t16[83]=function(a){a.push16(a.reg16[reg_bx])};t32[83]=function(a){a.push32(a.reg32s[reg_ebx])};t16[84]=function(a){a.push16(a.reg16[reg_sp])};t32[84]=function(a){a.push32(a.reg32s[reg_esp])};t16[85]=function(a){a.push16(a.reg16[reg_bp])};t32[85]=function(a){a.push32(a.reg32s[reg_ebp])};t16[86]=function(a){a.push16(a.reg16[reg_si])};t32[86]=function(a){a.push32(a.reg32s[reg_esi])};t16[87]=function(a){a.push16(a.reg16[reg_di])};t32[87]=function(a){a.push32(a.reg32s[reg_edi])};\nt16[88]=function(a){a.reg16[reg_ax]=a.pop16()};t32[88]=function(a){a.reg32s[reg_eax]=a.pop32s()};t16[89]=function(a){a.reg16[reg_cx]=a.pop16()};t32[89]=function(a){a.reg32s[reg_ecx]=a.pop32s()};t16[90]=function(a){a.reg16[reg_dx]=a.pop16()};t32[90]=function(a){a.reg32s[reg_edx]=a.pop32s()};t16[91]=function(a){a.reg16[reg_bx]=a.pop16()};t32[91]=function(a){a.reg32s[reg_ebx]=a.pop32s()};t16[92]=function(a){a.reg16[reg_sp]=a.pop16()};t32[92]=function(a){a.reg32s[reg_esp]=a.pop32s()};\nt16[93]=function(a){a.reg16[reg_bp]=a.pop16()};t32[93]=function(a){a.reg32s[reg_ebp]=a.pop32s()};t16[94]=function(a){a.reg16[reg_si]=a.pop16()};t32[94]=function(a){a.reg32s[reg_esi]=a.pop32s()};t16[95]=function(a){a.reg16[reg_di]=a.pop16()};t32[95]=function(a){a.reg32s[reg_edi]=a.pop32s()};t16[96]=function(a){a.pusha16()};t32[96]=function(a){a.pusha32()};t16[97]=function(a){a.popa16()};t32[97]=function(a){a.popa32()};t[98]=function(a){dbg_log(\"Unimplemented BOUND instruction\",LOG_CPU);dbg_assert(!1)};\nt[99]=function(a){a.read_modrm_byte();a.protected_mode&&!a.vm86_mode()?a.write_e16(a.arpl(a.read_write_e16(),a.modrm_byte>>2&14)):(dbg_log(\"arpl #ud\",LOG_CPU),a.trigger_ud())};t[100]=function(a){a.segment_prefix_op(reg_fs)};t[101]=function(a){a.segment_prefix_op(reg_gs)};t[102]=function(a){a.prefixes|=PREFIX_MASK_OPSIZE;a.run_prefix_instruction();a.prefixes=0};t[103]=function(a){dbg_assert(a.is_asize_32()===a.is_32);a.prefixes|=PREFIX_MASK_ADDRSIZE;a.run_prefix_instruction();a.prefixes=0};\nt16[104]=function(a){a.push16(a.read_op16())};t32[104]=function(a){a.push32(a.read_op32s())};t16[105]=function(a){a.read_modrm_byte();a.write_g16(a.imul_reg16(a.read_e16s(),a.read_op16()<<16>>16))};t32[105]=function(a){a.read_modrm_byte();a.write_g32(a.imul_reg32(a.read_e32s(),a.read_op32s()))};t16[106]=function(a){a.push16(a.read_op8s())};t32[106]=function(a){a.push32(a.read_op8s())};t16[107]=function(a){a.read_modrm_byte();a.write_g16(a.imul_reg16(a.read_e16s(),a.read_op8s()))};\nt32[107]=function(a){a.read_modrm_byte();a.write_g32(a.imul_reg32(a.read_e32s(),a.read_op8s()))};t[108]=function(a){insb(a)};t16[109]=function(a){insw(a)};t32[109]=function(a){insd(a)};t[110]=function(a){outsb(a)};t16[111]=function(a){outsw(a)};t32[111]=function(a){outsd(a)};t[112]=function(a){a.jmpcc8(a.test_o())};t[113]=function(a){a.jmpcc8(!a.test_o())};t[114]=function(a){a.jmpcc8(a.test_b())};t[115]=function(a){a.jmpcc8(!a.test_b())};t[116]=function(a){a.jmpcc8(a.test_z())};t[117]=function(a){a.jmpcc8(!a.test_z())};\nt[118]=function(a){a.jmpcc8(a.test_be())};t[119]=function(a){a.jmpcc8(!a.test_be())};t[120]=function(a){a.jmpcc8(a.test_s())};t[121]=function(a){a.jmpcc8(!a.test_s())};t[122]=function(a){a.jmpcc8(a.test_p())};t[123]=function(a){a.jmpcc8(!a.test_p())};t[124]=function(a){a.jmpcc8(a.test_l())};t[125]=function(a){a.jmpcc8(!a.test_l())};t[126]=function(a){a.jmpcc8(a.test_le())};t[127]=function(a){a.jmpcc8(!a.test_le())};\nt[128]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:a.write_e8(a.add8(a.read_write_e8(),a.read_op8()));break;case 1:a.write_e8(a.or8(a.read_write_e8(),a.read_op8()));break;case 2:a.write_e8(a.adc8(a.read_write_e8(),a.read_op8()));break;case 3:a.write_e8(a.sbb8(a.read_write_e8(),a.read_op8()));break;case 4:a.write_e8(a.and8(a.read_write_e8(),a.read_op8()));break;case 5:a.write_e8(a.sub8(a.read_write_e8(),a.read_op8()));break;case 6:a.write_e8(a.xor8(a.read_write_e8(),a.read_op8()));\nbreak;case 7:a.cmp8(a.read_e8(),a.read_op8())}};\nt16[129]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:a.write_e16(a.add16(a.read_write_e16(),a.read_op16()));break;case 1:a.write_e16(a.or16(a.read_write_e16(),a.read_op16()));break;case 2:a.write_e16(a.adc16(a.read_write_e16(),a.read_op16()));break;case 3:a.write_e16(a.sbb16(a.read_write_e16(),a.read_op16()));break;case 4:a.write_e16(a.and16(a.read_write_e16(),a.read_op16()));break;case 5:a.write_e16(a.sub16(a.read_write_e16(),a.read_op16()));break;case 6:a.write_e16(a.xor16(a.read_write_e16(),\na.read_op16()));break;case 7:a.cmp16(a.read_e16(),a.read_op16())}};\nt32[129]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:a.write_e32(a.add32(a.read_write_e32(),a.read_op32s()));break;case 1:a.write_e32(a.or32(a.read_write_e32(),a.read_op32s()));break;case 2:a.write_e32(a.adc32(a.read_write_e32(),a.read_op32s()));break;case 3:a.write_e32(a.sbb32(a.read_write_e32(),a.read_op32s()));break;case 4:a.write_e32(a.and32(a.read_write_e32(),a.read_op32s()));break;case 5:a.write_e32(a.sub32(a.read_write_e32(),a.read_op32s()));break;case 6:a.write_e32(a.xor32(a.read_write_e32(),\na.read_op32s()));break;case 7:a.cmp32(a.read_e32s(),a.read_op32s())}};t[130]=t[128];\nt16[131]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:a.write_e16(a.add16(a.read_write_e16(),a.read_op8s()));break;case 1:a.write_e16(a.or16(a.read_write_e16(),a.read_op8s()));break;case 2:a.write_e16(a.adc16(a.read_write_e16(),a.read_op8s()));break;case 3:a.write_e16(a.sbb16(a.read_write_e16(),a.read_op8s()));break;case 4:a.write_e16(a.and16(a.read_write_e16(),a.read_op8s()));break;case 5:a.write_e16(a.sub16(a.read_write_e16(),a.read_op8s()));break;case 6:a.write_e16(a.xor16(a.read_write_e16(),\na.read_op8s()));break;case 7:a.cmp16(a.read_e16(),a.read_op8s())}};\nt32[131]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:a.write_e32(a.add32(a.read_write_e32(),a.read_op8s()));break;case 1:a.write_e32(a.or32(a.read_write_e32(),a.read_op8s()));break;case 2:a.write_e32(a.adc32(a.read_write_e32(),a.read_op8s()));break;case 3:a.write_e32(a.sbb32(a.read_write_e32(),a.read_op8s()));break;case 4:a.write_e32(a.and32(a.read_write_e32(),a.read_op8s()));break;case 5:a.write_e32(a.sub32(a.read_write_e32(),a.read_op8s()));break;case 6:a.write_e32(a.xor32(a.read_write_e32(),\na.read_op8s()));break;case 7:a.cmp32(a.read_e32s(),a.read_op8s())}};t[132]=function(a){a.read_modrm_byte();var b=a.read_e8();a.test8(b,a.read_g8())};t16[133]=function(a){a.read_modrm_byte();var b=a.read_e16();a.test16(b,a.read_g16())};t32[133]=function(a){a.read_modrm_byte();var b=a.read_e32s();a.test32(b,a.read_g32s())};t[134]=function(a){a.read_modrm_byte();var b=a.read_write_e8();a.write_e8(a.xchg8(b,a.modrm_byte))};\nt16[135]=function(a){a.read_modrm_byte();var b=a.read_write_e16();a.write_e16(a.xchg16(b,a.modrm_byte))};t32[135]=function(a){a.read_modrm_byte();var b=a.read_write_e32();a.write_e32(a.xchg32(b,a.modrm_byte))};t[136]=function(a){a.read_modrm_byte();a.set_e8(a.read_g8())};t16[137]=function(a){a.read_modrm_byte();a.set_e16(a.read_g16())};t32[137]=function(a){a.read_modrm_byte();a.set_e32(a.read_g32s())};t[138]=function(a){a.read_modrm_byte();var b=a.read_e8();a.write_g8(b)};\nt16[139]=function(a){a.read_modrm_byte();var b=a.read_e16();a.write_g16(b)};t32[139]=function(a){a.read_modrm_byte();var b=a.read_e32s();a.write_g32(b)};t16[140]=function(a){a.read_modrm_byte();a.set_e16(a.sreg[a.modrm_byte>>3&7])};t32[140]=function(a){a.read_modrm_byte();a.set_e32(a.sreg[a.modrm_byte>>3&7])};\nt16[141]=function(a){a.read_modrm_byte();192<=a.modrm_byte&&(dbg_log(\"lea #ud\",LOG_CPU),a.trigger_ud());var b=a.modrm_byte>>3&7;a.prefixes|=SEG_PREFIX_ZERO;a.reg16[b<<1]=a.modrm_resolve(a.modrm_byte);a.prefixes=0};t32[141]=function(a){a.read_modrm_byte();192<=a.modrm_byte&&(dbg_log(\"lea #ud\",LOG_CPU),a.trigger_ud());var b=a.modrm_byte>>3&7;a.prefixes|=SEG_PREFIX_ZERO;a.reg32s[b]=a.modrm_resolve(a.modrm_byte);a.prefixes=0};\nt[142]=function(a){a.read_modrm_byte();var b=a.modrm_byte>>3&7,c=a.read_e16();a.switch_seg(b,c);b===reg_ss&&(a.clear_prefixes(),a.cycle_internal())};t16[143]=function(a){a.read_modrm_byte();var b=a.safe_read16(a.get_stack_pointer(0));a.adjust_stack_reg(2);if(192>a.modrm_byte){var c=a.modrm_resolve(a.modrm_byte);a.adjust_stack_reg(-2);a.safe_write16(c,b);a.adjust_stack_reg(2)}else a.write_reg_e16(b)};\nt32[143]=function(a){a.read_modrm_byte();var b=a.safe_read32s(a.get_stack_pointer(0));a.adjust_stack_reg(4);if(192>a.modrm_byte){var c=a.modrm_resolve(a.modrm_byte);a.adjust_stack_reg(-4);a.safe_write32(c,b);a.adjust_stack_reg(4)}else a.write_reg_e32(b)};t[144]=function(a){};t16[145]=function(a){a.xchg16r(reg_cx)};t32[145]=function(a){a.xchg32r(reg_ecx)};t16[146]=function(a){a.xchg16r(reg_dx)};t32[146]=function(a){a.xchg32r(reg_edx)};t16[147]=function(a){a.xchg16r(reg_bx)};t32[147]=function(a){a.xchg32r(reg_ebx)};\nt16[148]=function(a){a.xchg16r(reg_sp)};t32[148]=function(a){a.xchg32r(reg_esp)};t16[149]=function(a){a.xchg16r(reg_bp)};t32[149]=function(a){a.xchg32r(reg_ebp)};t16[150]=function(a){a.xchg16r(reg_si)};t32[150]=function(a){a.xchg32r(reg_esi)};t16[151]=function(a){a.xchg16r(reg_di)};t32[151]=function(a){a.xchg32r(reg_edi)};t16[152]=function(a){a.reg16[reg_ax]=a.reg8s[reg_al]};t32[152]=function(a){a.reg32s[reg_eax]=a.reg16s[reg_ax]};t16[153]=function(a){a.reg16[reg_dx]=a.reg16s[reg_ax]>>15};\nt32[153]=function(a){a.reg32s[reg_edx]=a.reg32s[reg_eax]>>31};t16[154]=function(a){var b=a.read_op16(),c=a.read_disp16();a.far_jump(b,c,!0);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};t32[154]=function(a){var b=a.read_op32s(),c=a.read_disp16();if((!a.protected_mode||a.vm86_mode())&&b&4294901760)throw a.debug.unimpl(\"#GP handler\");a.far_jump(b,c,!0);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};\nt[155]=function(a){(a.cr[0]&(CR0_MP|CR0_TS))===(CR0_MP|CR0_TS)?a.trigger_nm():a.fpu&&a.fpu.fwait()};t16[156]=function(a){a.flags&flag_vm&&3>a.getiopl()?(dbg_assert(a.protected_mode),dbg_log(\"pushf #gp\",LOG_CPU),a.trigger_gp(0)):a.push16(a.get_eflags())};t32[156]=function(a){a.flags&flag_vm&&3>a.getiopl()?(dbg_assert(a.protected_mode),dbg_log(\"pushf #gp\",LOG_CPU),a.trigger_gp(0)):a.push32(a.get_eflags()&16580607)};\nt16[157]=function(a){a.flags&flag_vm&&3>a.getiopl()&&(dbg_log(\"popf #gp\",LOG_CPU),a.trigger_gp(0));a.update_eflags(a.flags&-65536|a.pop16());a.flags&flag_trap?a.flags&=~flag_trap:a.handle_irqs()};t32[157]=function(a){a.flags&flag_vm&&3>a.getiopl()&&(dbg_log(\"popf #gp\",LOG_CPU),a.trigger_gp(0));a.update_eflags(a.pop32s());a.handle_irqs()};t[158]=function(a){a.flags=a.flags&-256|a.reg8[reg_ah];a.flags=a.flags&flags_mask|flags_default;a.flags_changed=0};t[159]=function(a){a.reg8[reg_ah]=a.get_eflags()};\nt[160]=function(a){var b=a.safe_read8(a.read_moffs());a.reg8[reg_al]=b};t16[161]=function(a){var b=a.safe_read16(a.read_moffs());a.reg16[reg_ax]=b};t32[161]=function(a){var b=a.safe_read32s(a.read_moffs());a.reg32s[reg_eax]=b};t[162]=function(a){a.safe_write8(a.read_moffs(),a.reg8[reg_al])};t16[163]=function(a){a.safe_write16(a.read_moffs(),a.reg16[reg_ax])};t32[163]=function(a){a.safe_write32(a.read_moffs(),a.reg32s[reg_eax])};t[164]=function(a){a.movsb()};t16[165]=function(a){a.movsw()};\nt32[165]=function(a){a.movsd()};t[166]=function(a){cmpsb(a)};t16[167]=function(a){cmpsw(a)};t32[167]=function(a){cmpsd(a)};t[168]=function(a){a.test8(a.reg8[reg_al],a.read_op8())};t16[169]=function(a){a.test16(a.reg16[reg_ax],a.read_op16())};t32[169]=function(a){a.test32(a.reg32s[reg_eax],a.read_op32s())};t[170]=function(a){stosb(a)};t16[171]=function(a){stosw(a)};t32[171]=function(a){stosd(a)};t[172]=function(a){lodsb(a)};t16[173]=function(a){lodsw(a)};t32[173]=function(a){lodsd(a)};t[174]=function(a){scasb(a)};\nt16[175]=function(a){scasw(a)};t32[175]=function(a){scasd(a)};t[176]=function(a){a.reg8[reg_al]=a.read_op8()};t[177]=function(a){a.reg8[reg_cl]=a.read_op8()};t[178]=function(a){a.reg8[reg_dl]=a.read_op8()};t[179]=function(a){a.reg8[reg_bl]=a.read_op8()};t[180]=function(a){a.reg8[reg_ah]=a.read_op8()};t[181]=function(a){a.reg8[reg_ch]=a.read_op8()};t[182]=function(a){a.reg8[reg_dh]=a.read_op8()};t[183]=function(a){a.reg8[reg_bh]=a.read_op8()};t16[184]=function(a){a.reg16[reg_ax]=a.read_op16()};\nt32[184]=function(a){a.reg32s[reg_eax]=a.read_op32s()};t16[185]=function(a){a.reg16[reg_cx]=a.read_op16()};t32[185]=function(a){a.reg32s[reg_ecx]=a.read_op32s()};t16[186]=function(a){a.reg16[reg_dx]=a.read_op16()};t32[186]=function(a){a.reg32s[reg_edx]=a.read_op32s()};t16[187]=function(a){a.reg16[reg_bx]=a.read_op16()};t32[187]=function(a){a.reg32s[reg_ebx]=a.read_op32s()};t16[188]=function(a){a.reg16[reg_sp]=a.read_op16()};t32[188]=function(a){a.reg32s[reg_esp]=a.read_op32s()};\nt16[189]=function(a){a.reg16[reg_bp]=a.read_op16()};t32[189]=function(a){a.reg32s[reg_ebp]=a.read_op32s()};t16[190]=function(a){a.reg16[reg_si]=a.read_op16()};t32[190]=function(a){a.reg32s[reg_esi]=a.read_op32s()};t16[191]=function(a){a.reg16[reg_di]=a.read_op16()};t32[191]=function(a){a.reg32s[reg_edi]=a.read_op32s()};\nt[192]=function(a){a.read_modrm_byte();var b=a.read_write_e8(),c=a.read_op8()&31,d=0;switch(a.modrm_byte>>3&7){case 0:d=a.rol8(b,c);break;case 1:d=a.ror8(b,c);break;case 2:d=a.rcl8(b,c);break;case 3:d=a.rcr8(b,c);break;case 4:d=a.shl8(b,c);break;case 5:d=a.shr8(b,c);break;case 6:d=a.shl8(b,c);break;case 7:d=a.sar8(b,c)}a.write_e8(d)};\nt16[193]=function(a){a.read_modrm_byte();var b=a.read_write_e16(),c=a.read_op8()&31,d=0;switch(a.modrm_byte>>3&7){case 0:d=a.rol16(b,c);break;case 1:d=a.ror16(b,c);break;case 2:d=a.rcl16(b,c);break;case 3:d=a.rcr16(b,c);break;case 4:d=a.shl16(b,c);break;case 5:d=a.shr16(b,c);break;case 6:d=a.shl16(b,c);break;case 7:d=a.sar16(b,c)}a.write_e16(d)};\nt32[193]=function(a){a.read_modrm_byte();var b=a.read_write_e32(),c=a.read_op8()&31,d=0;switch(a.modrm_byte>>3&7){case 0:d=a.rol32(b,c);break;case 1:d=a.ror32(b,c);break;case 2:d=a.rcl32(b,c);break;case 3:d=a.rcr32(b,c);break;case 4:d=a.shl32(b,c);break;case 5:d=a.shr32(b,c);break;case 6:d=a.shl32(b,c);break;case 7:d=a.sar32(b,c)}a.write_e32(d)};\nt16[194]=function(a){var b=a.read_op16();a.instruction_pointer=a.get_seg(reg_cs)+a.pop16()|0;dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.adjust_stack_reg(b);a.diverged()};t32[194]=function(a){var b=a.read_op16(),c=a.pop32s();dbg_assert(a.is_asize_32()||65536>c);a.instruction_pointer=a.get_seg(reg_cs)+c|0;a.adjust_stack_reg(b);a.diverged()};t16[195]=function(a){a.instruction_pointer=a.get_seg(reg_cs)+a.pop16()|0;a.diverged()};\nt32[195]=function(a){var b=a.pop32s();dbg_assert(a.is_asize_32()||65536>b);a.instruction_pointer=a.get_seg(reg_cs)+b|0;a.diverged()};t16[196]=function(a){a.read_modrm_byte();a.lss16(reg_es)};t32[196]=function(a){a.read_modrm_byte();a.lss32(reg_es)};t16[197]=function(a){a.read_modrm_byte();a.lss16(reg_ds)};t32[197]=function(a){a.read_modrm_byte();a.lss32(reg_ds)};\nt[198]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.safe_write8(a.modrm_resolve(a.modrm_byte),a.read_op8()):a.reg8[a.modrm_byte<<2&12|a.modrm_byte>>2&1]=a.read_op8()};t16[199]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.safe_write16(a.modrm_resolve(a.modrm_byte),a.read_op16()):a.reg16[a.modrm_byte<<1&14]=a.read_op16()};t32[199]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.safe_write32(a.modrm_resolve(a.modrm_byte),a.read_op32s()):a.reg32s[a.modrm_byte&7]=a.read_op32s()};\nt16[200]=function(a){a.enter16(a.read_op16(),a.read_disp8())};t32[200]=function(a){a.enter32(a.read_op16(),a.read_disp8())};t16[201]=function(a){var b=a.stack_size_32?a.reg32s[reg_ebp]:a.reg16[reg_bp],c=a.safe_read16(a.get_seg(reg_ss)+b|0);a.set_stack_reg(b+2|0);a.reg16[reg_bp]=c};t32[201]=function(a){var b=a.stack_size_32?a.reg32s[reg_ebp]:a.reg16[reg_bp],c=a.safe_read32s(a.get_seg(reg_ss)+b|0);a.set_stack_reg(b+4|0);a.reg32s[reg_ebp]=c};\nt16[202]=function(a){var b=a.read_op16(),c=a.safe_read16(a.get_stack_pointer(0)),d=a.safe_read16(a.get_stack_pointer(2));a.far_return(c,d,b);a.diverged()};t32[202]=function(a){var b=a.read_op16(),c=a.safe_read32s(a.get_stack_pointer(0)),d=a.safe_read32s(a.get_stack_pointer(4))&65535;a.far_return(c,d,b);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};\nt16[203]=function(a){var b=a.safe_read16(a.get_stack_pointer(0)),c=a.safe_read16(a.get_stack_pointer(2));a.far_return(b,c,0);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};t32[203]=function(a){var b=a.safe_read32s(a.get_stack_pointer(0)),c=a.safe_read32s(a.get_stack_pointer(4))&65535;a.far_return(b,c,0);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};t[204]=function(a){dbg_log(\"INT3\",LOG_CPU);a.call_interrupt_vector(3,!0,!1);a.diverged()};\nt[205]=function(a){var b=a.read_op8();a.call_interrupt_vector(b,!0,!1);a.diverged()};t[206]=function(a){dbg_log(\"INTO\",LOG_CPU);a.getof()&&a.call_interrupt_vector(4,!0,!1);a.diverged()};t16[207]=function(a){a.iret16();a.diverged()};t32[207]=function(a){a.iret32();a.diverged()};\nt[208]=function(a){a.read_modrm_byte();var b=a.read_write_e8(),c=0;switch(a.modrm_byte>>3&7){case 0:c=a.rol8(b,1);break;case 1:c=a.ror8(b,1);break;case 2:c=a.rcl8(b,1);break;case 3:c=a.rcr8(b,1);break;case 4:c=a.shl8(b,1);break;case 5:c=a.shr8(b,1);break;case 6:c=a.shl8(b,1);break;case 7:c=a.sar8(b,1)}a.write_e8(c)};\nt16[209]=function(a){a.read_modrm_byte();var b=a.read_write_e16(),c=0;switch(a.modrm_byte>>3&7){case 0:c=a.rol16(b,1);break;case 1:c=a.ror16(b,1);break;case 2:c=a.rcl16(b,1);break;case 3:c=a.rcr16(b,1);break;case 4:c=a.shl16(b,1);break;case 5:c=a.shr16(b,1);break;case 6:c=a.shl16(b,1);break;case 7:c=a.sar16(b,1)}a.write_e16(c)};\nt32[209]=function(a){a.read_modrm_byte();var b=a.read_write_e32(),c=0;switch(a.modrm_byte>>3&7){case 0:c=a.rol32(b,1);break;case 1:c=a.ror32(b,1);break;case 2:c=a.rcl32(b,1);break;case 3:c=a.rcr32(b,1);break;case 4:c=a.shl32(b,1);break;case 5:c=a.shr32(b,1);break;case 6:c=a.shl32(b,1);break;case 7:c=a.sar32(b,1)}a.write_e32(c)};\nt[210]=function(a){a.read_modrm_byte();var b=a.read_write_e8(),c=a.reg8[reg_cl]&31,d=0;switch(a.modrm_byte>>3&7){case 0:d=a.rol8(b,c);break;case 1:d=a.ror8(b,c);break;case 2:d=a.rcl8(b,c);break;case 3:d=a.rcr8(b,c);break;case 4:d=a.shl8(b,c);break;case 5:d=a.shr8(b,c);break;case 6:d=a.shl8(b,c);break;case 7:d=a.sar8(b,c)}a.write_e8(d)};\nt16[211]=function(a){a.read_modrm_byte();var b=a.read_write_e16(),c=a.reg8[reg_cl]&31,d=0;switch(a.modrm_byte>>3&7){case 0:d=a.rol16(b,c);break;case 1:d=a.ror16(b,c);break;case 2:d=a.rcl16(b,c);break;case 3:d=a.rcr16(b,c);break;case 4:d=a.shl16(b,c);break;case 5:d=a.shr16(b,c);break;case 6:d=a.shl16(b,c);break;case 7:d=a.sar16(b,c)}a.write_e16(d)};\nt32[211]=function(a){a.read_modrm_byte();var b=a.read_write_e32(),c=a.reg8[reg_cl]&31,d=0;switch(a.modrm_byte>>3&7){case 0:d=a.rol32(b,c);break;case 1:d=a.ror32(b,c);break;case 2:d=a.rcl32(b,c);break;case 3:d=a.rcr32(b,c);break;case 4:d=a.shl32(b,c);break;case 5:d=a.shr32(b,c);break;case 6:d=a.shl32(b,c);break;case 7:d=a.sar32(b,c)}a.write_e32(d)};t[212]=function(a){a.bcd_aam(a.read_op8())};t[213]=function(a){a.bcd_aad(a.read_op8())};t[214]=function(a){a.reg8[reg_al]=-a.getcf()};\nt[215]=function(a){a.is_asize_32()?a.reg8[reg_al]=a.safe_read8(a.get_seg_prefix(reg_ds)+a.reg32s[reg_ebx]+a.reg8[reg_al]|0):a.reg8[reg_al]=a.safe_read8(a.get_seg_prefix(reg_ds)+(a.reg16[reg_bx]+a.reg8[reg_al]&65535)|0)};t[216]=function(a){a.read_modrm_byte();a.task_switch_test();192>a.modrm_byte?a.fpu.op_D8_mem(a.modrm_byte,a.modrm_resolve(a.modrm_byte)):a.fpu.op_D8_reg(a.modrm_byte)};\nt[217]=function(a){a.read_modrm_byte();a.task_switch_test();192>a.modrm_byte?a.fpu.op_D9_mem(a.modrm_byte,a.modrm_resolve(a.modrm_byte)):a.fpu.op_D9_reg(a.modrm_byte)};t[218]=function(a){a.read_modrm_byte();a.task_switch_test();192>a.modrm_byte?a.fpu.op_DA_mem(a.modrm_byte,a.modrm_resolve(a.modrm_byte)):a.fpu.op_DA_reg(a.modrm_byte)};t[219]=function(a){a.read_modrm_byte();a.task_switch_test();192>a.modrm_byte?a.fpu.op_DB_mem(a.modrm_byte,a.modrm_resolve(a.modrm_byte)):a.fpu.op_DB_reg(a.modrm_byte)};\nt[220]=function(a){a.read_modrm_byte();a.task_switch_test();192>a.modrm_byte?a.fpu.op_DC_mem(a.modrm_byte,a.modrm_resolve(a.modrm_byte)):a.fpu.op_DC_reg(a.modrm_byte)};t[221]=function(a){a.read_modrm_byte();a.task_switch_test();192>a.modrm_byte?a.fpu.op_DD_mem(a.modrm_byte,a.modrm_resolve(a.modrm_byte)):a.fpu.op_DD_reg(a.modrm_byte)};t[222]=function(a){a.read_modrm_byte();a.task_switch_test();192>a.modrm_byte?a.fpu.op_DE_mem(a.modrm_byte,a.modrm_resolve(a.modrm_byte)):a.fpu.op_DE_reg(a.modrm_byte)};\nt[223]=function(a){a.read_modrm_byte();a.task_switch_test();192>a.modrm_byte?a.fpu.op_DF_mem(a.modrm_byte,a.modrm_resolve(a.modrm_byte)):a.fpu.op_DF_reg(a.modrm_byte)};t[224]=function(a){a.loopne(a.read_op8s())};t[225]=function(a){a.loope(a.read_op8s())};t[226]=function(a){a.loop(a.read_op8s())};t[227]=function(a){a.jcxz(a.read_op8s())};t[228]=function(a){var b=a.read_op8();a.test_privileges_for_io(b,1);a.reg8[reg_al]=a.io.port_read8(b);a.diverged()};\nt16[229]=function(a){var b=a.read_op8();a.test_privileges_for_io(b,2);a.reg16[reg_ax]=a.io.port_read16(b);a.diverged()};t32[229]=function(a){var b=a.read_op8();a.test_privileges_for_io(b,4);a.reg32s[reg_eax]=a.io.port_read32(b);a.diverged()};t[230]=function(a){var b=a.read_op8();a.test_privileges_for_io(b,1);a.io.port_write8(b,a.reg8[reg_al]);a.diverged()};t16[231]=function(a){var b=a.read_op8();a.test_privileges_for_io(b,2);a.io.port_write16(b,a.reg16[reg_ax]);a.diverged()};\nt32[231]=function(a){var b=a.read_op8();a.test_privileges_for_io(b,4);a.io.port_write32(b,a.reg32s[reg_eax]);a.diverged()};t16[232]=function(a){var b=a.read_op16();a.push16(a.get_real_eip());a.jmp_rel16(b);a.diverged()};t32[232]=function(a){var b=a.read_op32s();a.push32(a.get_real_eip());a.instruction_pointer=a.instruction_pointer+b|0;dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};t16[233]=function(a){var b=a.read_op16();a.jmp_rel16(b);a.diverged()};\nt32[233]=function(a){var b=a.read_op32s();a.instruction_pointer=a.instruction_pointer+b|0;dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};t16[234]=function(a){var b=a.read_op16(),c=a.read_disp16();a.far_jump(b,c,!1);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};t32[234]=function(a){var b=a.read_op32s(),c=a.read_disp16();a.far_jump(b,c,!1);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};\nt[235]=function(a){var b=a.read_op8s();a.instruction_pointer=a.instruction_pointer+b|0;dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged()};t[236]=function(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,1);a.reg8[reg_al]=a.io.port_read8(b);a.diverged()};t16[237]=function(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,2);a.reg16[reg_ax]=a.io.port_read16(b);a.diverged()};\nt32[237]=function(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,4);a.reg32s[reg_eax]=a.io.port_read32(b);a.diverged()};t[238]=function(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,1);a.io.port_write8(b,a.reg8[reg_al]);a.diverged()};t16[239]=function(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,2);a.io.port_write16(b,a.reg16[reg_ax]);a.diverged()};t32[239]=function(a){var b=a.reg16[reg_dx];a.test_privileges_for_io(b,4);a.io.port_write32(b,a.reg32s[reg_eax]);a.diverged()};\nt[240]=function(a){a.run_prefix_instruction()};t[241]=function(a){throw a.debug.unimpl(\"int1 instruction\");};t[242]=function(a){dbg_assert(0===(a.prefixes&PREFIX_MASK_REP));a.prefixes|=PREFIX_REPNZ;a.run_prefix_instruction();a.prefixes=0};t[243]=function(a){dbg_assert(0===(a.prefixes&PREFIX_MASK_REP));a.prefixes|=PREFIX_REPZ;a.run_prefix_instruction();a.prefixes=0};t[244]=function(a){a.hlt_op()};t[245]=function(a){a.flags=(a.flags|1)^a.getcf();a.flags_changed&=-2};\nt[246]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:var b=a.read_e8();a.test8(b,a.read_op8());break;case 1:b=a.read_e8();a.test8(b,a.read_op8());break;case 2:b=a.read_write_e8();a.write_e8(~b);break;case 3:b=a.read_write_e8();a.write_e8(a.neg8(b));break;case 4:b=a.read_e8();a.mul8(b);break;case 5:b=a.read_e8s();a.imul8(b);break;case 6:b=a.read_e8();a.div8(b);break;case 7:b=a.read_e8s(),a.idiv8(b)}};\nt16[247]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:var b=a.read_e16();a.test16(b,a.read_op16());break;case 1:b=a.read_e16();a.test16(b,a.read_op16());break;case 2:b=a.read_write_e16();a.write_e16(~b);break;case 3:b=a.read_write_e16();a.write_e16(a.neg16(b));break;case 4:b=a.read_e16();a.mul16(b);break;case 5:b=a.read_e16s();a.imul16(b);break;case 6:b=a.read_e16();a.div16(b);break;case 7:b=a.read_e16s(),a.idiv16(b)}};\nt32[247]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:var b=a.read_e32s();a.test32(b,a.read_op32s());break;case 1:b=a.read_e32s();a.test32(b,a.read_op32s());break;case 2:b=a.read_write_e32();a.write_e32(~b);break;case 3:b=a.read_write_e32();a.write_e32(a.neg32(b));break;case 4:b=a.read_e32();a.mul32(b);break;case 5:b=a.read_e32s();a.imul32(b);break;case 6:b=a.read_e32();a.div32(b);break;case 7:b=a.read_e32s(),a.idiv32(b)}};\nt[248]=function(a){a.flags&=~flag_carry;a.flags_changed&=-2};t[249]=function(a){a.flags|=flag_carry;a.flags_changed&=-2};t[250]=function(a){!a.protected_mode||(a.flags&flag_vm?3===a.getiopl():a.getiopl()>=a.cpl)?a.flags&=~flag_interrupt:(dbg_log(\"cli #gp\",LOG_CPU),a.trigger_gp(0))};t[251]=function(a){!a.protected_mode||(a.flags&flag_vm?3===a.getiopl():a.getiopl()>=a.cpl)?(a.flags|=flag_interrupt,a.clear_prefixes(),a.cycle_internal(),a.handle_irqs()):(dbg_log(\"sti #gp\",LOG_CPU),a.trigger_gp(0))};\nt[252]=function(a){a.flags&=~flag_direction};t[253]=function(a){a.flags|=flag_direction};t[254]=function(a){a.read_modrm_byte();var b=a.modrm_byte&56;0===b?(b=a.read_write_e8(),a.write_e8(a.inc8(b))):8===b?(b=a.read_write_e8(),a.write_e8(a.dec8(b))):a.todo()};\nt16[255]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:var b=a.read_write_e16();a.write_e16(a.inc16(b));break;case 1:b=a.read_write_e16();a.write_e16(a.dec16(b));break;case 2:b=a.read_e16();a.push16(a.get_real_eip());a.instruction_pointer=a.get_seg(reg_cs)+b|0;dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged();break;case 3:192<=a.modrm_byte&&(dbg_log(\"callf #ud\",LOG_CPU),a.trigger_ud(),dbg_assert(!1,\"unreachable\"));var c=a.modrm_resolve(a.modrm_byte);b=a.safe_read16(c);\nc=a.safe_read16(c+2|0);a.far_jump(b,c,!0);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged();break;case 4:b=a.read_e16();a.instruction_pointer=a.get_seg(reg_cs)+b|0;dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged();break;case 5:192<=a.modrm_byte&&(dbg_log(\"jmpf #ud\",LOG_CPU),a.trigger_ud(),dbg_assert(!1,\"unreachable\"));c=a.modrm_resolve(a.modrm_byte);b=a.safe_read16(c);c=a.safe_read16(c+2|0);a.far_jump(b,c,!1);dbg_assert(a.is_asize_32()||65536>a.get_real_eip());a.diverged();\nbreak;case 6:b=a.read_e16();a.push16(b);break;case 7:a.todo()}};\nt32[255]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 0:var b=a.read_write_e32();a.write_e32(a.inc32(b));break;case 1:b=a.read_write_e32();a.write_e32(a.dec32(b));break;case 2:b=a.read_e32s();a.push32(a.get_real_eip());dbg_assert(a.is_asize_32()||65536>b);a.instruction_pointer=a.get_seg(reg_cs)+b|0;a.diverged();break;case 3:192<=a.modrm_byte&&(dbg_log(\"callf #ud\",LOG_CPU),a.trigger_ud(),dbg_assert(!1,\"unreachable\"));var c=a.modrm_resolve(a.modrm_byte);b=a.safe_read32s(c);c=a.safe_read16(c+\n4|0);if((!a.protected_mode||a.vm86_mode())&&b&4294901760)throw a.debug.unimpl(\"#GP handler\");a.far_jump(b,c,!0);dbg_assert(a.is_asize_32()||65536>b);a.diverged();break;case 4:b=a.read_e32s();dbg_assert(a.is_asize_32()||65536>b);a.instruction_pointer=a.get_seg(reg_cs)+b|0;a.diverged();break;case 5:192<=a.modrm_byte&&(dbg_log(\"jmpf #ud\",LOG_CPU),a.trigger_ud(),dbg_assert(!1,\"unreachable\"));c=a.modrm_resolve(a.modrm_byte);b=a.safe_read32s(c);c=a.safe_read16(c+4|0);if((!a.protected_mode||a.vm86_mode())&&\nb&4294901760)throw a.debug.unimpl(\"#GP handler\");a.far_jump(b,c,!1);dbg_assert(a.is_asize_32()||65536>b);a.diverged();break;case 6:b=a.read_e32s();a.push32(b);break;case 7:a.todo()}};var table16=[],table32=[];CPU.prototype.table16=table16;CPU.prototype.table32=table32;for(var i=0;256>i;i++)t[i]?table16[i]=table32[i]=t[i]:t16[i]&&(table16[i]=t16[i],table32[i]=t32[i]);t=[];t16=[];t32=[];\nt[0]=function(a){a.read_modrm_byte();if(!a.protected_mode||a.vm86_mode())dbg_log(\"0f 00 #ud\",LOG_CPU),a.trigger_ud();switch(a.modrm_byte>>3&7){case 0:a.set_e16(a.sreg[reg_ldtr]);a.is_osize_32()&&192<=a.modrm_byte&&(a.reg32s[a.modrm_byte&7]&=65535);break;case 1:a.set_e16(a.sreg[reg_tr]);a.is_osize_32()&&192<=a.modrm_byte&&(a.reg32s[a.modrm_byte&7]&=65535);break;case 2:a.cpl&&a.trigger_gp(0);var b=a.read_e16();a.load_ldt(b);break;case 3:a.cpl&&a.trigger_gp(0);b=a.read_e16();a.load_tr(b);break;case 4:a.verr(a.read_e16());\nbreak;case 5:a.verw(a.read_e16());break;default:dbg_log(a.modrm_byte>>3&7,LOG_CPU),a.todo()}};\nt[1]=function(a){a.read_modrm_byte();var b=a.modrm_byte>>3&7;if(4===b)192<=a.modrm_byte&&a.is_osize_32()?a.set_e32(a.cr[0]):a.set_e16(a.cr[0]);else if(6===b){a.cpl&&a.trigger_gp(0);var c=a.read_e16();c=a.cr[0]&-16|c&15;a.protected_mode&&(c|=CR0_PE);a.set_cr0(c)}else switch(192<=a.modrm_byte&&(dbg_log(\"0f 01 #ud\",LOG_CPU),a.trigger_ud()),c=a.modrm_resolve(a.modrm_byte),b){case 0:a.writable_or_pagefault(c,6);a.safe_write16(c,a.gdtr_size);b=a.is_osize_32()?-1:16777215;a.safe_write32(c+2,a.gdtr_offset&\nb);break;case 1:a.writable_or_pagefault(c,6);a.safe_write16(c,a.idtr_size);b=a.is_osize_32()?-1:16777215;a.safe_write32(c+2,a.idtr_offset&b);break;case 2:a.cpl&&a.trigger_gp(0);b=a.safe_read16(c);c=a.safe_read32s(c+2);a.gdtr_size=b;a.gdtr_offset=c;a.is_osize_32()||(a.gdtr_offset&=16777215);break;case 3:a.cpl&&a.trigger_gp(0);b=a.safe_read16(c);c=a.safe_read32s(c+2);a.idtr_size=b;a.idtr_offset=c;a.is_osize_32()||(a.idtr_offset&=16777215);break;case 7:a.cpl&&a.trigger_gp(0);a.invlpg(c);break;default:dbg_log(b),\na.todo()}};t16[2]=function(a){a.read_modrm_byte();if(!a.protected_mode||a.vm86_mode())dbg_log(\"lar #ud\",LOG_CPU),a.trigger_ud();var b=a.read_e16();a.write_g16(a.lar(b,a.read_g16()))};t32[2]=function(a){a.read_modrm_byte();if(!a.protected_mode||a.vm86_mode())dbg_log(\"lar #ud\",LOG_CPU),a.trigger_ud();var b=a.read_e16();a.write_g32(a.lar(b,a.read_g32s()))};\nt16[3]=function(a){a.read_modrm_byte();if(!a.protected_mode||a.vm86_mode())dbg_log(\"lsl #ud\",LOG_CPU),a.trigger_ud();var b=a.read_e16();a.write_g16(a.lsl(b,a.read_g16()))};t32[3]=function(a){a.read_modrm_byte();if(!a.protected_mode||a.vm86_mode())dbg_log(\"lsl #ud\",LOG_CPU),a.trigger_ud();var b=a.read_e16();a.write_g32(a.lsl(b,a.read_g32s()))};t[4]=function(a){a.undefined_instruction()};t[5]=function(a){a.undefined_instruction()};\nt[6]=function(a){a.cpl?(dbg_log(\"clts #gp\",LOG_CPU),a.trigger_gp(0)):a.cr[0]&=~CR0_TS};t[7]=function(a){a.undefined_instruction()};t[8]=function(a){a.todo()};t[9]=function(a){a.cpl&&(dbg_log(\"wbinvd #gp\",LOG_CPU),a.trigger_gp(0))};t[10]=function(a){a.undefined_instruction()};t[11]=function(a){a.trigger_ud()};t[12]=function(a){a.undefined_instruction()};t[13]=function(a){a.todo()};t[14]=function(a){a.undefined_instruction()};t[15]=function(a){a.undefined_instruction()};t[16]=function(a){a.unimplemented_sse()};\nt[17]=function(a){a.unimplemented_sse()};t[18]=function(a){dbg_assert((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE);a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_xmm_mem64s();a.write_xmm64(b[0],b[1])};t[19]=function(a){dbg_assert((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE);a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_xmm64s();dbg_assert(192>a.modrm_byte);var c=a.modrm_resolve(a.modrm_byte);a.safe_write64(c,b[0],b[1])};\nt[20]=function(a){a.unimplemented_sse()};t[21]=function(a){a.unimplemented_sse()};t[22]=function(a){a.unimplemented_sse()};t[23]=function(a){a.unimplemented_sse()};t[24]=function(a){a.read_modrm_byte();192>a.modrm_byte&&a.modrm_resolve(a.modrm_byte)};t[25]=function(a){a.unimplemented_sse()};t[26]=function(a){a.unimplemented_sse()};t[27]=function(a){a.unimplemented_sse()};t[28]=function(a){a.unimplemented_sse()};t[29]=function(a){a.unimplemented_sse()};t[30]=function(a){a.unimplemented_sse()};\nt[31]=function(a){a.read_modrm_byte();192>a.modrm_byte&&a.modrm_resolve(a.modrm_byte)};t[32]=function(a){a.read_modrm_byte();a.cpl&&a.trigger_gp(0);switch(a.modrm_byte>>3&7){case 0:a.write_reg_e32(a.cr[0]);break;case 2:a.write_reg_e32(a.cr[2]);break;case 3:a.write_reg_e32(a.cr[3]);break;case 4:a.write_reg_e32(a.cr[4]);break;default:dbg_log(a.modrm_byte>>3&7),dbg_assert(!1),a.trigger_ud()}};\nt[33]=function(a){a.read_modrm_byte();a.cpl&&a.trigger_gp(0);var b=a.modrm_byte>>3&7;a.cr[4]&CR4_DE&&(4===b||5===b)&&(dbg_log(\"#ud mov dreg 4/5 with cr4.DE set\",LOG_CPU),a.trigger_ud());a.reg32s[a.modrm_byte&7]=a.dreg[b]};\nt[34]=function(a){a.read_modrm_byte();a.cpl&&a.trigger_gp(0);var b=a.read_reg_e32s();switch(a.modrm_byte>>3&7){case 0:a.set_cr0(b);break;case 2:a.cr[2]=b;break;case 3:b&=-4072;dbg_assert(0===(b&4095),\"TODO\");a.cr[3]=b;a.clear_tlb();break;case 4:a.set_cr4(b);break;default:dbg_log(a.modrm_byte>>3&7),dbg_assert(!1),a.trigger_ud()}};\nt[35]=function(a){a.read_modrm_byte();a.cpl&&a.trigger_gp(0);var b=a.modrm_byte>>3&7;a.cr[4]&CR4_DE&&(4===b||5===b)&&(dbg_log(\"#ud mov dreg 4/5 with cr4.DE set\",LOG_CPU),a.trigger_ud());a.dreg[b]=a.read_reg_e32s()};t[36]=function(a){a.undefined_instruction()};t[37]=function(a){a.undefined_instruction()};t[38]=function(a){a.undefined_instruction()};t[39]=function(a){a.undefined_instruction()};\nt[40]=function(a){dbg_assert(0===(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_xmm_mem128s();a.write_xmm128s(b[0],b[1],b[2],b[3])};\nt[41]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE){var b=a.read_xmm128s();dbg_assert(192>a.modrm_byte);var c=a.modrm_resolve(a.modrm_byte);a.safe_write128(c,b[0],b[1],b[2],b[3])}else dbg_assert(0===(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_xmm128s(),dbg_assert(192>a.modrm_byte),c=a.modrm_resolve(a.modrm_byte),a.safe_write128(c,b[0],b[1],b[2],b[3])};t[42]=function(a){a.unimplemented_sse()};\nt[43]=function(a){a.unimplemented_sse()};t[44]=function(a){a.unimplemented_sse()};t[45]=function(a){a.unimplemented_sse()};t[46]=function(a){a.unimplemented_sse()};t[47]=function(a){a.unimplemented_sse()};\nt[48]=function(a){a.cpl&&a.trigger_gp(0);var b=a.reg32s[reg_ecx],c=a.reg32s[reg_eax],d=a.reg32s[reg_edx];b!==IA32_SYSENTER_ESP&&dbg_log(\"wrmsr ecx=\"+h(b>>>0,8)+\" data=\"+h(d>>>0,8)+\":\"+h(c>>>0,8),LOG_CPU);switch(b){case IA32_SYSENTER_CS:a.sysenter_cs=c&65535;break;case IA32_SYSENTER_EIP:a.sysenter_eip=c;break;case IA32_SYSENTER_ESP:a.sysenter_esp=c;break;case IA32_APIC_BASE_MSR:dbg_assert(0===d,\"Changing APIC address (high 32 bits) not supported\");dbg_assert((c&~(IA32_APIC_BASE_BSP|IA32_APIC_BASE_EXTD|\nIA32_APIC_BASE_EN))>>>0===APIC_ADDRESS,\"Changing APIC address not supported\");dbg_assert(0===(c&IA32_APIC_BASE_EXTD),\"x2apic not supported\");a.apic_enabled=(c&IA32_APIC_BASE_EN)===IA32_APIC_BASE_EN;break;case IA32_TIME_STAMP_COUNTER:b=(c>>>0)+4294967296*(d>>>0);a.tsc_offset=v86.microtick()-b/TSC_RATE;break;case IA32_BIOS_SIGN_ID:break;case IA32_MISC_ENABLE:dbg_log(\"IA32_MISC_ENABLE=\"+h(c>>>0,8),LOG_CPU);break;case IA32_MCG_CAP:break;case IA32_KERNEL_GS_BASE:dbg_log(\"GS Base written\",LOG_CPU);break;\ndefault:dbg_assert(!1,\"Unknown msr: \"+h(b>>>0,8))}};t[49]=function(a){if(a.cpl&&a.cr[4]&CR4_TSD)a.trigger_gp(0);else{var b=v86.microtick()-a.tsc_offset;dbg_assert(isFinite(b),\"non-finite tsc: \"+b);a.reg32s[reg_eax]=b*TSC_RATE;a.reg32s[reg_edx]=TSC_RATE/4294967296*b}};\nt[50]=function(a){a.cpl&&a.trigger_gp(0);var b=a.reg32s[reg_ecx];dbg_log(\"rdmsr ecx=\"+h(b>>>0,8),LOG_CPU);var c=0,d=0;switch(b){case IA32_SYSENTER_CS:c=a.sysenter_cs;break;case IA32_SYSENTER_EIP:c=a.sysenter_eip;break;case IA32_SYSENTER_ESP:c=a.sysenter_esp;break;case IA32_TIME_STAMP_COUNTER:b=v86.microtick()-a.tsc_offset;c=b*TSC_RATE;d=TSC_RATE/4294967296*b;break;case IA32_PLATFORM_ID:break;case IA32_APIC_BASE_MSR:ENABLE_ACPI&&(c=APIC_ADDRESS,a.apic_enabled&&(c|=IA32_APIC_BASE_EN));break;case IA32_BIOS_SIGN_ID:break;\ncase IA32_MISC_ENABLE:break;case IA32_RTIT_CTL:break;case MSR_SMI_COUNT:break;case IA32_MCG_CAP:break;case MSR_PKG_C2_RESIDENCY:break;case MSR_EBC_FREQUENCY_ID:c=16777216;break;default:dbg_assert(!1,\"Unknown msr: \"+h(b>>>0,8))}a.reg32s[reg_eax]=c;a.reg32s[reg_edx]=d};t[51]=function(a){a.todo()};\nt[52]=function(a){var b=a.sysenter_cs&65532;a.protected_mode&&0!==b||a.trigger_gp(0);a.flags=a.flags&~flag_vm&~flag_interrupt;a.instruction_pointer=a.sysenter_eip;a.reg32s[reg_esp]=a.sysenter_esp;a.sreg[reg_cs]=b;a.segment_is_null[reg_cs]=0;a.segment_limits[reg_cs]=-1;a.segment_offsets[reg_cs]=0;a.update_cs_size(!0);a.cpl=0;a.cpl_changed();a.sreg[reg_ss]=b+8;a.segment_is_null[reg_ss]=0;a.segment_limits[reg_ss]=-1;a.segment_offsets[reg_ss]=0;a.stack_size_32=!0;a.diverged()};\nt[53]=function(a){var b=a.sysenter_cs&65532;a.protected_mode&&!a.cpl&&0!==b||a.trigger_gp(0);a.instruction_pointer=a.reg32s[reg_edx];a.reg32s[reg_esp]=a.reg32s[reg_ecx];a.sreg[reg_cs]=b+16|3;a.segment_is_null[reg_cs]=0;a.segment_limits[reg_cs]=-1;a.segment_offsets[reg_cs]=0;a.update_cs_size(!0);a.cpl=3;a.cpl_changed();a.sreg[reg_ss]=b+24|3;a.segment_is_null[reg_ss]=0;a.segment_limits[reg_ss]=-1;a.segment_offsets[reg_ss]=0;a.stack_size_32=!0;a.diverged()};t[54]=function(a){a.undefined_instruction()};\nt[55]=function(a){a.todo()};t[56]=function(a){a.unimplemented_sse()};t[57]=function(a){a.unimplemented_sse()};t[58]=function(a){a.unimplemented_sse()};t[59]=function(a){a.unimplemented_sse()};t[60]=function(a){a.unimplemented_sse()};t[61]=function(a){a.unimplemented_sse()};t[62]=function(a){a.unimplemented_sse()};t[63]=function(a){a.unimplemented_sse()};t16[64]=function(a){a.read_modrm_byte();a.cmovcc16(a.test_o())};t32[64]=function(a){a.read_modrm_byte();a.cmovcc32(a.test_o())};\nt16[65]=function(a){a.read_modrm_byte();a.cmovcc16(!a.test_o())};t32[65]=function(a){a.read_modrm_byte();a.cmovcc32(!a.test_o())};t16[66]=function(a){a.read_modrm_byte();a.cmovcc16(a.test_b())};t32[66]=function(a){a.read_modrm_byte();a.cmovcc32(a.test_b())};t16[67]=function(a){a.read_modrm_byte();a.cmovcc16(!a.test_b())};t32[67]=function(a){a.read_modrm_byte();a.cmovcc32(!a.test_b())};t16[68]=function(a){a.read_modrm_byte();a.cmovcc16(a.test_z())};t32[68]=function(a){a.read_modrm_byte();a.cmovcc32(a.test_z())};\nt16[69]=function(a){a.read_modrm_byte();a.cmovcc16(!a.test_z())};t32[69]=function(a){a.read_modrm_byte();a.cmovcc32(!a.test_z())};t16[70]=function(a){a.read_modrm_byte();a.cmovcc16(a.test_be())};t32[70]=function(a){a.read_modrm_byte();a.cmovcc32(a.test_be())};t16[71]=function(a){a.read_modrm_byte();a.cmovcc16(!a.test_be())};t32[71]=function(a){a.read_modrm_byte();a.cmovcc32(!a.test_be())};t16[72]=function(a){a.read_modrm_byte();a.cmovcc16(a.test_s())};t32[72]=function(a){a.read_modrm_byte();a.cmovcc32(a.test_s())};\nt16[73]=function(a){a.read_modrm_byte();a.cmovcc16(!a.test_s())};t32[73]=function(a){a.read_modrm_byte();a.cmovcc32(!a.test_s())};t16[74]=function(a){a.read_modrm_byte();a.cmovcc16(a.test_p())};t32[74]=function(a){a.read_modrm_byte();a.cmovcc32(a.test_p())};t16[75]=function(a){a.read_modrm_byte();a.cmovcc16(!a.test_p())};t32[75]=function(a){a.read_modrm_byte();a.cmovcc32(!a.test_p())};t16[76]=function(a){a.read_modrm_byte();a.cmovcc16(a.test_l())};t32[76]=function(a){a.read_modrm_byte();a.cmovcc32(a.test_l())};\nt16[77]=function(a){a.read_modrm_byte();a.cmovcc16(!a.test_l())};t32[77]=function(a){a.read_modrm_byte();a.cmovcc32(!a.test_l())};t16[78]=function(a){a.read_modrm_byte();a.cmovcc16(a.test_le())};t32[78]=function(a){a.read_modrm_byte();a.cmovcc32(a.test_le())};t16[79]=function(a){a.read_modrm_byte();a.cmovcc16(!a.test_le())};t32[79]=function(a){a.read_modrm_byte();a.cmovcc32(!a.test_le())};t[80]=function(a){a.unimplemented_sse()};t[81]=function(a){a.unimplemented_sse()};t[82]=function(a){a.unimplemented_sse()};\nt[83]=function(a){a.unimplemented_sse()};t[84]=function(a){a.unimplemented_sse()};t[85]=function(a){a.unimplemented_sse()};t[86]=function(a){a.unimplemented_sse()};t[87]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_xmm_mem128s(),c=a.read_xmm128s();a.write_xmm128s(b[0]^c[0],b[1]^c[1],b[2]^c[2],b[3]^c[3])};t[88]=function(a){a.unimplemented_sse()};t[89]=function(a){a.unimplemented_sse()};t[90]=function(a){a.unimplemented_sse()};t[91]=function(a){a.unimplemented_sse()};\nt[92]=function(a){a.unimplemented_sse()};t[93]=function(a){a.unimplemented_sse()};t[94]=function(a){a.unimplemented_sse()};t[95]=function(a){a.unimplemented_sse()};\nt[96]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem64s();b=new Uint8Array(b.buffer);var c=a.read_xmm64s();c=new Uint8Array(c.buffer);a.write_xmm128s(c[0]|b[0]<<8|c[1]<<16|b[1]<<24,c[2]|b[2]<<8|c[3]<<16|b[3]<<24,c[4]|b[4]<<8|c[5]<<16|b[5]<<24,c[6]|b[6]<<8|c[7]<<16|b[7]<<24)}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem32s(),c=a.reg_mmxs[2*(a.modrm_byte>>\n3&7)],a.write_mmx64s(c&255|(b&255)<<8|(c>>8&255)<<16|(b>>8&255)<<24,c>>16&255|(b>>16&255)<<8|c>>>24<<16|b>>>24<<24)};\nt[97]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem64s();b=new Uint16Array(b.buffer);var c=a.read_xmm64s();c=new Uint16Array(c.buffer);a.write_xmm128s(c[0]|b[0]<<16,c[1]|b[1]<<16,c[2]|b[2]<<16,c[3]|b[3]<<16)}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem32s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],a.write_mmx64s(c&65535|(b&65535)<<16,c>>>16|b>>>16<<16)};\nt[98]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem32s();a.write_mmx64s(a.reg_mmxs[2*(a.modrm_byte>>3&7)],b)};\nt[99]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];var e=0|a.saturate_sw_to_sb(c&65535);e|=a.saturate_sw_to_sb(c>>>16)<<8;e|=a.saturate_sw_to_sb(d&65535)<<16;e|=a.saturate_sw_to_sb(d>>>16)<<24;c=0|a.saturate_sw_to_sb(b[0]&65535);c|=a.saturate_sw_to_sb(b[0]>>>16)<<8;c|=a.saturate_sw_to_sb(b[1]&65535)<<16;c|=a.saturate_sw_to_sb(b[1]>>>\n16)<<24;a.write_mmx64s(e,c)};t[100]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();b=new Int8Array(b.buffer);var c=8*(a.modrm_byte>>3&7),d=a.reg_mmx8s;a.write_mmx64s((d[c]>b[0]?255:0)|(d[c+1]>b[1]?255:0)<<8|(d[c+2]>b[2]?255:0)<<16|(d[c+3]>b[3]?255:0)<<24,(d[c+4]>b[4]?255:0)|(d[c+5]>b[5]?255:0)<<8|(d[c+6]>b[6]?255:0)<<16|(d[c+7]>b[7]?255:0)<<24)};\nt[101]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];a.write_mmx64s((c<<16>>16>b[0]<<16>>16?65535:0)|(c>>16>b[0]>>16?65535:0)<<16,(d<<16>>16>b[1]<<16>>16?65535:0)|(d>>16>b[1]>>16?65535:0)<<16)};\nt[102]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();a.write_mmx64s(a.reg_mmxs[2*(a.modrm_byte>>3&7)]>b[0]?-1:0,a.reg_mmxs[2*(a.modrm_byte>>3&7)+1]>b[1]?-1:0)};\nt[103]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s();b=new Int16Array(b.buffer);var c=a.read_xmm128s();c=new Int16Array(c.buffer);for(var d=a.create_atom128s(0,0,0,0),e=new Uint8Array(d.buffer),f=0;8>f;f++)e[f]=a.saturate_sw_to_ub(c[f]),e[f|8]=a.saturate_sw_to_ub(b[f]);a.write_xmm128s(d[0],d[1],d[2],d[3])}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem64s(),\nd=a.reg_mmxs[2*(a.modrm_byte>>3&7)],e=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1],c=0|a.saturate_sw_to_ub(d&65535),c|=a.saturate_sw_to_ub(d>>>16)<<8,c|=a.saturate_sw_to_ub(e&65535)<<16,c|=a.saturate_sw_to_ub(e>>>16)<<24,d=0|a.saturate_sw_to_ub(b[0]&65535),d|=a.saturate_sw_to_ub(b[0]>>>16)<<8,d|=a.saturate_sw_to_ub(b[1]&65535)<<16,d|=a.saturate_sw_to_ub(b[1]>>>16)<<24,a.write_mmx64s(c,d)};\nt[104]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s();b=new Uint8Array(b.buffer);var c=a.read_xmm128s();c=new Uint8Array(c.buffer);a.write_xmm128s(c[8]|b[8]<<8|c[9]<<16|b[9]<<24,c[10]|b[10]<<8|c[11]<<16|b[11]<<24,c[12]|b[12]<<8|c[13]<<16|b[13]<<24,c[14]|b[14]<<8|c[15]<<16|b[15]<<24)}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*\n(a.modrm_byte>>3&7)+1],a.write_mmx64s(c&255|(b[1]&255)<<8|(c>>8&255)<<16|(b[1]>>8&255)<<24,c>>16&255|(b[1]>>16&255)<<8|c>>>24<<16|b[1]>>>24<<24)};t[105]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];a.write_mmx64s(c&65535|(b[1]&65535)<<16,c>>>16|b[1]>>>16<<16)};\nt[106]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();a.write_mmx64s(a.reg_mmxs[2*(a.modrm_byte>>3&7)+1],b[1])};\nt[107]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];var d=0|a.saturate_sd_to_sw(a.reg_mmxs[2*(a.modrm_byte>>3&7)]);d|=a.saturate_sd_to_sw(c)<<16;c=0|a.saturate_sd_to_sw(b[0]);c|=a.saturate_sd_to_sw(b[1])<<16;a.write_mmx64s(d,c)};t[108]=function(a){a.unimplemented_sse()};t[109]=function(a){a.unimplemented_sse()};\nt[110]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE){var b=a.read_e32s();a.write_xmm128s(b,0,0,0)}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_e32s(),a.write_mmx64s(b,0)};\nt[111]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s();a.write_xmm128s(b[0],b[1],b[2],b[3])}else(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_REPZ?(b=a.read_xmm_mem128s_unaligned(),a.write_xmm128s(b[0],b[1],b[2],b[3])):(dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem64s(),a.write_mmx64s(b[0],b[1]))};\nt[112]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s(),c=a.read_op8();a.write_xmm128s(b[c&3],b[c>>2&3],b[c>>4&3],b[c>>6&3])}else if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_REPNZ){b=a.read_xmm_mem128s();c=new Uint16Array(b.buffer);var d=a.read_op8();a.write_xmm128s(c[d&3]|c[d>>2&3]<<16,c[d>>4&3]|c[d>>6&3]<<16,b[2],b[3])}else if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===\nPREFIX_REPZ)b=a.read_xmm_mem128s(),c=new Uint16Array(b.buffer),d=a.read_op8(),a.write_xmm128s(b[0],b[1],c[d&3|4]|c[d>>2&3|4]<<16,c[d>>4&3|4]|c[d>>6&3|4]<<16);else{dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));b=a.read_mmx_mem64s();var e=a.read_op8();c=e&3;d=e>>2&3;var f=e>>4&3;e>>>=6;a.write_mmx64s(b[c>>1]>>>16*(c&1)&65535|b[d>>1]>>>16*(d&1)<<16,b[f>>1]>>>16*(f&1)&65535|b[e>>1]>>>16*(e&1)<<16)}};\nt[113]=function(a){a.read_modrm_byte();dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();192>a.modrm_byte&&a.trigger_ud();switch(a.modrm_byte>>3&7){case 2:var b=a.read_op8(),c=a.modrm_byte&7,d=a.reg_mmxs[2*c],e=a.reg_mmxs[2*c+1],f=0,g=0;15>=b&&(f=(d&65535)>>>b|d>>>16>>>b<<16,g=(e&65535)>>>b|e>>>16>>>b<<16);a.reg_mmxs[2*c]=f;a.reg_mmxs[2*c+1]=g;break;case 4:b=a.read_op8();c=a.modrm_byte&7;d=a.reg_mmxs[2*c];e=a.reg_mmxs[2*c+1];15<b&&(b=16);a.reg_mmxs[2*c]=d<<\n16>>16>>b&65535|(d>>16>>b&65535)<<16;a.reg_mmxs[2*c+1]=e<<16>>16>>b&65535|(e>>16>>b&65535)<<16;break;case 6:b=a.read_op8();c=a.modrm_byte&7;d=a.reg_mmxs[2*c];e=a.reg_mmxs[2*c+1];g=f=0;15>=b&&(f=(d&65535)<<b&65535|d>>>16<<b<<16,g=(e&65535)<<b&65535|e>>>16<<b<<16);a.reg_mmxs[2*c]=f;a.reg_mmxs[2*c+1]=g;break;default:a.unimplemented_sse()}};\nt[114]=function(a){a.read_modrm_byte();dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();192>a.modrm_byte&&a.trigger_ud();switch(a.modrm_byte>>3&7){case 2:var b=a.read_op8(),c=a.modrm_byte&7,d=a.reg_mmxs[2*c],e=a.reg_mmxs[2*c+1],f=0,g=0;31>=b&&(f=d>>>b,g=e>>>b);a.reg_mmxs[2*c]=f;a.reg_mmxs[2*c+1]=g;break;case 4:b=a.read_op8();c=a.modrm_byte&7;d=a.reg_mmxs[2*c];e=a.reg_mmxs[2*c+1];31<b&&(b=31);a.reg_mmxs[2*c]=d>>b;a.reg_mmxs[2*c+1]=e>>b;break;case 6:b=a.read_op8();\nc=a.modrm_byte&7;d=a.reg_mmxs[2*c];e=a.reg_mmxs[2*c+1];g=f=0;31>=b&&(f=d<<b,g=e<<b);a.reg_mmxs[2*c]=f;a.reg_mmxs[2*c+1]=g;break;default:a.unimplemented_sse()}};\nt[115]=function(a){a.read_modrm_byte();dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();192>a.modrm_byte&&a.trigger_ud();switch(a.modrm_byte>>3&7){case 2:var b=a.read_op8(),c=a.modrm_byte&7,d=a.reg_mmxs[2*c],e=a.reg_mmxs[2*c+1],f=0,g=0;31>=b?(f=d>>>b|e<<32-b,g=e>>>b):63>=b&&(f=e>>>(b&31),g=0);a.reg_mmxs[2*c]=f;a.reg_mmxs[2*c+1]=g;break;case 6:b=a.read_op8();c=a.modrm_byte&7;d=a.reg_mmxs[2*c];e=a.reg_mmxs[2*c+1];g=f=0;31>=b?(f=d<<b,g=e<<b|d>>>32-b):63>=b&&(g=\nd<<(b&31),f=0);a.reg_mmxs[2*c]=f;a.reg_mmxs[2*c+1]=g;break;default:a.unimplemented_sse()}};\nt[116]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s();b=new Uint8Array(b.buffer);var c=a.read_xmm128s();c=new Uint8Array(c.buffer);for(var d=a.create_atom128s(0,0,0,0),e=new Uint8Array(d.buffer),f=0;16>f;f++)e[f]=b[f]===c[f]?255:0;a.write_xmm128s(d[0],d[1],d[2],d[3])}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem64s(),b=new Int8Array(b.buffer),c=8*\n(a.modrm_byte>>3&7),d=a.reg_mmx8s,a.write_mmx64s((d[c]===b[0]?255:0)|(d[c+1]===b[1]?255:0)<<8|(d[c+2]===b[2]?255:0)<<16|(d[c+3]===b[3]?255:0)<<24,(d[c+4]===b[4]?255:0)|(d[c+5]===b[5]?255:0)<<8|(d[c+6]===b[6]?255:0)<<16|(d[c+7]===b[7]?255:0)<<24)};\nt[117]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];a.write_mmx64s(((c&65535)===(b[0]&65535)?65535:0)|((c&4294901760)===(b[0]&4294901760)?65535:0)<<16,((d&65535)===(b[1]&65535)?65535:0)|((d&4294901760)===(b[1]&4294901760)?65535:0)<<16)};\nt[118]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s(),c=a.read_xmm128s();a.write_xmm128s(b[0]===c[0]?-1:0,b[1]===c[1]?-1:0,b[2]===c[2]?-1:0,b[3]===c[3]?-1:0)}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem64s(),a.write_mmx64s(a.reg_mmxs[2*(a.modrm_byte>>3&7)]===b[0]?-1:0,a.reg_mmxs[2*(a.modrm_byte>>3&7)+1]===b[1]?-1:0)};\nt[119]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.fpu.stack_empty=255};t[120]=function(a){a.unimplemented_sse()};t[121]=function(a){a.unimplemented_sse()};t[122]=function(a){a.unimplemented_sse()};t[123]=function(a){a.unimplemented_sse()};t[124]=function(a){a.unimplemented_sse()};t[125]=function(a){a.unimplemented_sse()};\nt[126]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_REPZ){var b=a.read_xmm_mem64s();a.write_xmm128s(b[0],b[1],0,0)}else(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE?(b=a.read_xmm64s(),a.set_e32(b[0])):(dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx64s(),a.set_e32(b[0]))};\nt[127]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_REPZ){var b=a.read_xmm128s();dbg_assert(192>a.modrm_byte);var c=a.modrm_resolve(a.modrm_byte);a.safe_write128(c,b[0],b[1],b[2],b[3])}else(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE?(b=a.read_xmm128s(),dbg_assert(192>a.modrm_byte),c=a.modrm_resolve(a.modrm_byte),a.safe_write128(c,b[0],b[1],b[2],b[3])):(dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),\nb=a.read_mmx64s(),a.set_mmx_mem64s(b[0],b[1]))};t16[128]=function(a){a.jmpcc16(a.test_o())};t32[128]=function(a){a.jmpcc32(a.test_o())};t16[129]=function(a){a.jmpcc16(!a.test_o())};t32[129]=function(a){a.jmpcc32(!a.test_o())};t16[130]=function(a){a.jmpcc16(a.test_b())};t32[130]=function(a){a.jmpcc32(a.test_b())};t16[131]=function(a){a.jmpcc16(!a.test_b())};t32[131]=function(a){a.jmpcc32(!a.test_b())};t16[132]=function(a){a.jmpcc16(a.test_z())};t32[132]=function(a){a.jmpcc32(a.test_z())};\nt16[133]=function(a){a.jmpcc16(!a.test_z())};t32[133]=function(a){a.jmpcc32(!a.test_z())};t16[134]=function(a){a.jmpcc16(a.test_be())};t32[134]=function(a){a.jmpcc32(a.test_be())};t16[135]=function(a){a.jmpcc16(!a.test_be())};t32[135]=function(a){a.jmpcc32(!a.test_be())};t16[136]=function(a){a.jmpcc16(a.test_s())};t32[136]=function(a){a.jmpcc32(a.test_s())};t16[137]=function(a){a.jmpcc16(!a.test_s())};t32[137]=function(a){a.jmpcc32(!a.test_s())};t16[138]=function(a){a.jmpcc16(a.test_p())};\nt32[138]=function(a){a.jmpcc32(a.test_p())};t16[139]=function(a){a.jmpcc16(!a.test_p())};t32[139]=function(a){a.jmpcc32(!a.test_p())};t16[140]=function(a){a.jmpcc16(a.test_l())};t32[140]=function(a){a.jmpcc32(a.test_l())};t16[141]=function(a){a.jmpcc16(!a.test_l())};t32[141]=function(a){a.jmpcc32(!a.test_l())};t16[142]=function(a){a.jmpcc16(a.test_le())};t32[142]=function(a){a.jmpcc32(a.test_le())};t16[143]=function(a){a.jmpcc16(!a.test_le())};t32[143]=function(a){a.jmpcc32(!a.test_le())};\nt[144]=function(a){a.read_modrm_byte();a.setcc(a.test_o())};t[145]=function(a){a.read_modrm_byte();a.setcc(!a.test_o())};t[146]=function(a){a.read_modrm_byte();a.setcc(a.test_b())};t[147]=function(a){a.read_modrm_byte();a.setcc(!a.test_b())};t[148]=function(a){a.read_modrm_byte();a.setcc(a.test_z())};t[149]=function(a){a.read_modrm_byte();a.setcc(!a.test_z())};t[150]=function(a){a.read_modrm_byte();a.setcc(a.test_be())};t[151]=function(a){a.read_modrm_byte();a.setcc(!a.test_be())};\nt[152]=function(a){a.read_modrm_byte();a.setcc(a.test_s())};t[153]=function(a){a.read_modrm_byte();a.setcc(!a.test_s())};t[154]=function(a){a.read_modrm_byte();a.setcc(a.test_p())};t[155]=function(a){a.read_modrm_byte();a.setcc(!a.test_p())};t[156]=function(a){a.read_modrm_byte();a.setcc(a.test_l())};t[157]=function(a){a.read_modrm_byte();a.setcc(!a.test_l())};t[158]=function(a){a.read_modrm_byte();a.setcc(a.test_le())};t[159]=function(a){a.read_modrm_byte();a.setcc(!a.test_le())};t16[160]=function(a){a.push16(a.sreg[reg_fs])};\nt32[160]=function(a){a.push32(a.sreg[reg_fs])};t16[161]=function(a){a.switch_seg(reg_fs,a.safe_read16(a.get_stack_pointer(0)));a.adjust_stack_reg(2)};t32[161]=function(a){a.switch_seg(reg_fs,a.safe_read32s(a.get_stack_pointer(0))&65535);a.adjust_stack_reg(4)};t[162]=function(a){a.cpuid()};t16[163]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.bt_mem(a.modrm_resolve(a.modrm_byte),a.read_g16s()):a.bt_reg(a.read_reg_e16(),a.read_g16()&15)};\nt32[163]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.bt_mem(a.modrm_resolve(a.modrm_byte),a.read_g32s()):a.bt_reg(a.read_reg_e32s(),a.read_g32s()&31)};t16[164]=function(a){a.read_modrm_byte();var b=a.read_write_e16();a.write_e16(a.shld16(b,a.read_g16(),a.read_op8()&31))};t32[164]=function(a){a.read_modrm_byte();var b=a.read_write_e32();a.write_e32(a.shld32(b,a.read_g32s(),a.read_op8()&31))};\nt16[165]=function(a){a.read_modrm_byte();var b=a.read_write_e16();a.write_e16(a.shld16(b,a.read_g16(),a.reg8[reg_cl]&31))};t32[165]=function(a){a.read_modrm_byte();var b=a.read_write_e32();a.write_e32(a.shld32(b,a.read_g32s(),a.reg8[reg_cl]&31))};t[166]=function(a){a.trigger_ud()};t[167]=function(a){a.undefined_instruction()};t16[168]=function(a){a.push16(a.sreg[reg_gs])};t32[168]=function(a){a.push32(a.sreg[reg_gs])};\nt16[169]=function(a){a.switch_seg(reg_gs,a.safe_read16(a.get_stack_pointer(0)));a.adjust_stack_reg(2)};t32[169]=function(a){a.switch_seg(reg_gs,a.safe_read32s(a.get_stack_pointer(0))&65535);a.adjust_stack_reg(4)};t[170]=function(a){a.todo()};t16[171]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.bts_mem(a.modrm_resolve(a.modrm_byte),a.read_g16s()):a.write_reg_e16(a.bts_reg(a.read_reg_e16(),a.read_g16s()&15))};\nt32[171]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.bts_mem(a.modrm_resolve(a.modrm_byte),a.read_g32s()):a.write_reg_e32(a.bts_reg(a.read_reg_e32s(),a.read_g32s()&31))};t16[172]=function(a){a.read_modrm_byte();var b=a.read_write_e16();a.write_e16(a.shrd16(b,a.read_g16(),a.read_op8()&31))};t32[172]=function(a){a.read_modrm_byte();var b=a.read_write_e32();a.write_e32(a.shrd32(b,a.read_g32s(),a.read_op8()&31))};\nt16[173]=function(a){a.read_modrm_byte();var b=a.read_write_e16();a.write_e16(a.shrd16(b,a.read_g16(),a.reg8[reg_cl]&31))};t32[173]=function(a){a.read_modrm_byte();var b=a.read_write_e32();a.write_e32(a.shrd32(b,a.read_g32s(),a.reg8[reg_cl]&31))};\nt[174]=function(a){a.read_modrm_byte();a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)&&a.todo();switch(a.modrm_byte>>3&7){case 0:192<=a.modrm_byte&&a.trigger_ud();var b=a.modrm_resolve(a.modrm_byte);a.fxsave(b);break;case 1:192<=a.modrm_byte&&a.trigger_ud();b=a.modrm_resolve(a.modrm_byte);a.fxrstor(b);break;case 2:192<=a.modrm_byte&&a.trigger_ud();b=a.modrm_resolve(a.modrm_byte);b=a.safe_read32s(b);b&~MXCSR_MASK&&(dbg_log(\"Invalid mxcsr bits: \"+h((b&~MXCSR_MASK)>>>0,8)),a.trigger_gp(0));a.mxcsr=\nb;break;case 3:192<=a.modrm_byte&&a.trigger_ud();b=a.modrm_resolve(a.modrm_byte);a.safe_write32(b,a.mxcsr);break;case 5:dbg_assert(192<=a.modrm_byte,\"Unexpected lfence encoding\");192>a.modrm_byte&&a.trigger_ud();break;case 6:dbg_assert(192<=a.modrm_byte,\"Unexpected mfence encoding\");192>a.modrm_byte&&a.trigger_ud();break;case 7:dbg_assert(192<=a.modrm_byte,\"Unexpected sfence encoding\");192>a.modrm_byte&&a.trigger_ud();break;default:dbg_log(\"missing \"+(a.modrm_byte>>3&7),LOG_CPU),a.todo()}};\nt16[175]=function(a){a.read_modrm_byte();var b=a.read_e16s();a.write_g16(a.imul_reg16(a.read_g16s(),b))};t32[175]=function(a){a.read_modrm_byte();var b=a.read_e32s();a.write_g32(a.imul_reg32(a.read_g32s(),b))};\nt[176]=function(a){a.read_modrm_byte();if(192>a.modrm_byte){var b=a.modrm_resolve(a.modrm_byte);a.writable_or_pagefault(b,1);var c=a.safe_read8(b)}else c=a.reg8[a.modrm_byte<<2&12|a.modrm_byte>>2&1];a.cmp8(a.reg8[reg_al],c);a.getzf()?192>a.modrm_byte?a.safe_write8(b,a.read_g8()):a.reg8[a.modrm_byte<<2&12|a.modrm_byte>>2&1]=a.read_g8():(192>a.modrm_byte&&a.safe_write8(b,c),a.reg8[reg_al]=c)};\nt16[177]=function(a){a.read_modrm_byte();if(192>a.modrm_byte){var b=a.modrm_resolve(a.modrm_byte);a.writable_or_pagefault(b,2);var c=a.safe_read16(b)}else c=a.read_reg_e16();a.cmp16(a.reg16[reg_ax],c);a.getzf()?192>a.modrm_byte?a.safe_write16(b,a.read_g16()):a.write_reg_e16(a.read_g16()):(192>a.modrm_byte&&a.safe_write16(b,c),a.reg16[reg_ax]=c)};\nt32[177]=function(a){a.read_modrm_byte();if(192>a.modrm_byte){var b=a.modrm_resolve(a.modrm_byte);a.writable_or_pagefault(b,4);var c=a.safe_read32s(b)}else c=a.read_reg_e32s();a.cmp32(a.reg32s[reg_eax],c);a.getzf()?192>a.modrm_byte?a.safe_write32(b,a.read_g32s()):a.write_reg_e32(a.read_g32s()):(192>a.modrm_byte&&a.safe_write32(b,c),a.reg32s[reg_eax]=c)};t16[178]=function(a){a.read_modrm_byte();a.lss16(reg_ss)};t32[178]=function(a){a.read_modrm_byte();a.lss32(reg_ss)};\nt16[179]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.btr_mem(a.modrm_resolve(a.modrm_byte),a.read_g16s()):a.write_reg_e16(a.btr_reg(a.read_reg_e16(),a.read_g16s()&15))};t32[179]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.btr_mem(a.modrm_resolve(a.modrm_byte),a.read_g32s()):a.write_reg_e32(a.btr_reg(a.read_reg_e32s(),a.read_g32s()&31))};t16[180]=function(a){a.read_modrm_byte();a.lss16(reg_fs)};t32[180]=function(a){a.read_modrm_byte();a.lss32(reg_fs)};\nt16[181]=function(a){a.read_modrm_byte();a.lss16(reg_gs)};t32[181]=function(a){a.read_modrm_byte();a.lss32(reg_gs)};t16[182]=function(a){a.read_modrm_byte();var b=a.read_e8();a.write_g16(b)};t32[182]=function(a){a.read_modrm_byte();var b=a.read_e8();a.write_g32(b)};t16[183]=function(a){a.read_modrm_byte();dbg_assert(!1,\"Possibly invalid encoding\");var b=a.read_e16();a.write_g16(b)};t32[183]=function(a){a.read_modrm_byte();var b=a.read_e16();a.write_g32(b)};\nt16[184]=function(a){a.read_modrm_byte();0===(a.prefixes&PREFIX_REPZ)&&a.trigger_ud();var b=a.read_e16();a.write_g16(a.popcnt(b))};t32[184]=function(a){a.read_modrm_byte();0===(a.prefixes&PREFIX_REPZ)&&a.trigger_ud();var b=a.read_e32s();a.write_g32(a.popcnt(b))};t[185]=function(a){a.todo()};\nt16[186]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 4:192>a.modrm_byte?a.bt_mem(a.modrm_resolve(a.modrm_byte),a.read_op8()&15):a.bt_reg(a.read_reg_e16(),a.read_op8()&15);break;case 5:192>a.modrm_byte?a.bts_mem(a.modrm_resolve(a.modrm_byte),a.read_op8()&15):a.write_reg_e16(a.bts_reg(a.read_reg_e16(),a.read_op8()&15));break;case 6:192>a.modrm_byte?a.btr_mem(a.modrm_resolve(a.modrm_byte),a.read_op8()&15):a.write_reg_e16(a.btr_reg(a.read_reg_e16(),a.read_op8()&15));break;case 7:192>\na.modrm_byte?a.btc_mem(a.modrm_resolve(a.modrm_byte),a.read_op8()&15):a.write_reg_e16(a.btc_reg(a.read_reg_e16(),a.read_op8()&15));break;default:dbg_log(a.modrm_byte>>3&7),a.todo()}};\nt32[186]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 4:192>a.modrm_byte?a.bt_mem(a.modrm_resolve(a.modrm_byte),a.read_op8()&31):a.bt_reg(a.read_reg_e32s(),a.read_op8()&31);break;case 5:192>a.modrm_byte?a.bts_mem(a.modrm_resolve(a.modrm_byte),a.read_op8()&31):a.write_reg_e32(a.bts_reg(a.read_reg_e32s(),a.read_op8()&31));break;case 6:192>a.modrm_byte?a.btr_mem(a.modrm_resolve(a.modrm_byte),a.read_op8()&31):a.write_reg_e32(a.btr_reg(a.read_reg_e32s(),a.read_op8()&31));break;case 7:192>\na.modrm_byte?a.btc_mem(a.modrm_resolve(a.modrm_byte),a.read_op8()&31):a.write_reg_e32(a.btc_reg(a.read_reg_e32s(),a.read_op8()&31));break;default:dbg_log(a.modrm_byte>>3&7),a.todo()}};t16[187]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.btc_mem(a.modrm_resolve(a.modrm_byte),a.read_g16s()):a.write_reg_e16(a.btc_reg(a.read_reg_e16(),a.read_g16s()&15))};\nt32[187]=function(a){a.read_modrm_byte();192>a.modrm_byte?a.btc_mem(a.modrm_resolve(a.modrm_byte),a.read_g32s()):a.write_reg_e32(a.btc_reg(a.read_reg_e32s(),a.read_g32s()&31))};t16[188]=function(a){a.read_modrm_byte();var b=a.read_e16();a.write_g16(a.bsf16(a.read_g16(),b))};t32[188]=function(a){a.read_modrm_byte();var b=a.read_e32s();a.write_g32(a.bsf32(a.read_g32s(),b))};t16[189]=function(a){a.read_modrm_byte();var b=a.read_e16();a.write_g16(a.bsr16(a.read_g16(),b))};\nt32[189]=function(a){a.read_modrm_byte();var b=a.read_e32s();a.write_g32(a.bsr32(a.read_g32s(),b))};t16[190]=function(a){a.read_modrm_byte();var b=a.read_e8s();a.write_g16(b)};t32[190]=function(a){a.read_modrm_byte();var b=a.read_e8s();a.write_g32(b)};t16[191]=function(a){a.read_modrm_byte();dbg_assert(!1,\"Possibly invalid encoding\");var b=a.read_e16();a.write_g16(b)};t32[191]=function(a){a.read_modrm_byte();var b=a.read_e16s();a.write_g32(b)};\nt[192]=function(a){a.read_modrm_byte();var b=a.read_write_e8();a.write_e8(a.xadd8(b,a.modrm_byte>>1&12|a.modrm_byte>>5&1))};t16[193]=function(a){a.read_modrm_byte();var b=a.read_write_e16();a.write_e16(a.xadd16(b,a.modrm_byte>>2&14))};t32[193]=function(a){a.read_modrm_byte();var b=a.read_write_e32();a.write_e32(a.xadd32(b,a.modrm_byte>>3&7))};t[194]=function(a){a.unimplemented_sse()};t[195]=function(a){a.read_modrm_byte();192<=a.modrm_byte&&a.trigger_ud();a.set_e32(a.read_g32s())};t[196]=function(a){a.unimplemented_sse()};\nt[197]=function(a){a.unimplemented_sse()};t[198]=function(a){a.unimplemented_sse()};\nt[199]=function(a){a.read_modrm_byte();switch(a.modrm_byte>>3&7){case 1:192<=a.modrm_byte&&a.trigger_ud();var b=a.modrm_resolve(a.modrm_byte);a.writable_or_pagefault(b,8);var c=a.safe_read32s(b),d=a.safe_read32s(b+4|0);a.reg32s[reg_eax]===c&&a.reg32s[reg_edx]===d?(a.flags|=flag_zero,a.safe_write32(b,a.reg32s[reg_ebx]),a.safe_write32(b+4|0,a.reg32s[reg_ecx])):(a.flags&=~flag_zero,a.reg32s[reg_eax]=c,a.reg32s[reg_edx]=d,a.safe_write32(b,c),a.safe_write32(b+4|0,d));a.flags_changed&=~flag_zero;break;\ncase 6:c=(b=v86util.has_rand_int())?v86util.get_rand_int():0;a.is_osize_32()?a.set_e32(c):a.set_e16(c);a.flags&=~flags_all;a.flags|=b;a.flags_changed=0;break;default:dbg_log(a.modrm_byte>>3&7,LOG_CPU),a.todo()}};t[200]=function(a){a.bswap(reg_eax)};t[201]=function(a){a.bswap(reg_ecx)};t[202]=function(a){a.bswap(reg_edx)};t[203]=function(a){a.bswap(reg_ebx)};t[204]=function(a){a.bswap(reg_esp)};t[205]=function(a){a.bswap(reg_ebp)};t[206]=function(a){a.bswap(reg_esi)};t[207]=function(a){a.bswap(reg_edi)};\nt[208]=function(a){a.unimplemented_sse()};t[209]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=b[0]>>>0;var e=0,f=0;15>=b&&(e=(c&65535)>>>b|c>>>16>>>b<<16,f=(d&65535)>>>b|d>>>16>>>b<<16);a.write_mmx64s(e,f)};\nt[210]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=b[0]>>>0;var e=0,f=0;31>=b&&(e=c>>>b,f=d>>>b);a.write_mmx64s(e,f)};\nt[211]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=b[0]>>>0;if(0!==b){var e=0,f=0;31>=b?(e=c>>>b|d<<32-b,f=d>>>b):63>=b&&(e=d>>>(b&31),f=0);a.write_mmx64s(e,f)}};t[212]=function(a){a.unimplemented_sse()};\nt[213]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s();b=new Int16Array(b.buffer);var c=a.read_xmm128s();c=new Int16Array(c.buffer);a.write_xmm128s(b[0]*c[0]&65535|b[1]*c[1]<<16,b[2]*c[2]&65535|b[3]*c[3]<<16,b[4]*c[4]&65535|b[5]*c[5]<<16,b[6]*c[6]&65535|b[7]*c[7]<<16)}else{dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));b=a.read_mmx_mem64s();c=a.reg_mmxs[2*(a.modrm_byte>>\n3&7)];var d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];a.write_mmx64s((c&65535)*(b[0]&65535)&65535|((c>>>16)*(b[0]>>>16)&65535)<<16,(d&65535)*(b[1]&65535)&65535|((d>>>16)*(b[1]>>>16)&65535)<<16)}};t[214]=function(a){dbg_assert((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE);a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_xmm64s();dbg_assert(192>a.modrm_byte);var c=a.modrm_resolve(a.modrm_byte);a.safe_write64(c,b[0],b[1])};\nt[215]=function(a){dbg_assert((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE);a.task_switch_test_mmx();a.read_modrm_byte();192>a.modrm_byte&&a.trigger_ud();var b=a.read_xmm_mem128s();b=new Uint8Array(b.buffer);a.write_g32(b[0]>>7<<0|b[1]>>7<<1|b[2]>>7<<2|b[3]>>7<<3|b[4]>>7<<4|b[5]>>7<<5|b[6]>>7<<6|b[7]>>7<<7|b[8]>>7<<8|b[9]>>7<<9|b[10]>>7<<10|b[11]>>7<<11|b[12]>>7<<12|b[13]>>7<<13|b[14]>>7<<14|b[15]>>7<<15)};\nt[216]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=new Uint8Array(b.buffer),d=8*(a.modrm_byte>>3&7),e=a.reg_mmx8;b=a.saturate_sd_to_ub(e[d]-c[0]);var f=a.saturate_sd_to_ub(e[d+1]-c[1]),g=a.saturate_sd_to_ub(e[d+2]-c[2]),k=a.saturate_sd_to_ub(e[d+3]-c[3]),l=a.saturate_sd_to_ub(e[d+4]-c[4]),m=a.saturate_sd_to_ub(e[d+5]-c[5]),p=a.saturate_sd_to_ub(e[d+6]-c[6]);c=a.saturate_sd_to_ub(e[d+7]-c[7]);\na.write_mmx64s(b|f<<8|g<<16|k<<24,l|m<<8|p<<16|c<<24)};t[217]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1],e=(c&65535)-(b[0]&65535);c=(c>>>16)-(b[0]>>>16);0>e&&(e=0);0>c&&(c=0);var f=(d&65535)-(b[1]&65535);b=(d>>>16)-(b[1]>>>16);0>f&&(f=0);0>b&&(b=0);a.write_mmx64s(e|c<<16,f|b<<16)};\nt[218]=function(a){dbg_assert((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE);a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_xmm_mem128s();b=new Uint8Array(b.buffer);var c=a.read_xmm128s();c=new Uint8Array(c.buffer);for(var d=a.create_atom128s(0,0,0,0),e=new Uint8Array(d.buffer),f=0;16>f;f++)e[f]=b[f]<c[f]?b[f]:c[f];a.write_xmm128s(d[0],d[1],d[2],d[3])};\nt[219]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();a.write_mmx64s(b[0]&a.reg_mmxs[2*(a.modrm_byte>>3&7)],b[1]&a.reg_mmxs[2*(a.modrm_byte>>3&7)+1])};\nt[220]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s();b=new Uint8Array(b.buffer);var c=a.read_xmm128s();c=new Uint8Array(c.buffer);for(var d=a.create_atom128s(0,0,0,0),e=new Uint8Array(d.buffer),f=0;16>f;f++)e[f]=a.saturate_ud_to_ub(b[f]+c[f]);a.write_xmm128s(d[0],d[1],d[2],d[3])}else{dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));b=a.read_mmx_mem64s();var g=new Uint8Array(b.buffer),\nk=8*(a.modrm_byte>>3&7),l=a.reg_mmx8;b=a.saturate_ud_to_ub(l[k]+g[0]);c=a.saturate_ud_to_ub(l[k+1]+g[1]);d=a.saturate_ud_to_ub(l[k+2]+g[2]);e=a.saturate_ud_to_ub(l[k+3]+g[3]);f=a.saturate_ud_to_ub(l[k+4]+g[4]);var m=a.saturate_ud_to_ub(l[k+5]+g[5]),p=a.saturate_ud_to_ub(l[k+6]+g[6]);g=a.saturate_ud_to_ub(l[k+7]+g[7]);a.write_mmx64s(b|c<<8|d<<16|e<<24,f|m<<8|p<<16|g<<24)}};\nt[221]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s();b=new Uint16Array(b.buffer);var c=a.read_xmm128s();c=new Uint16Array(c.buffer);a.write_xmm128s(a.saturate_uw(b[0]+c[0])|a.saturate_uw(b[1]+c[1])<<16,a.saturate_uw(b[2]+c[2])|a.saturate_uw(b[3]+c[3])<<16,a.saturate_uw(b[4]+c[4])|a.saturate_uw(b[5]+c[5])<<16,a.saturate_uw(b[6]+c[6])|a.saturate_uw(b[7]+c[7])<<16)}else{dbg_assert(0==(a.prefixes&\n(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));c=a.read_mmx_mem64s();var d=a.reg_mmxs[2*(a.modrm_byte>>3&7)],e=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=a.saturate_uw((d&65535)+(c[0]&65535));d=a.saturate_uw((d>>>16)+(c[0]>>>16));var f=a.saturate_uw((e&65535)+(c[1]&65535));c=a.saturate_uw((e>>>16)+(c[1]>>>16));a.write_mmx64s(b|d<<16,f|c<<16)}};\nt[222]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s();b=new Uint8Array(b.buffer);var c=a.read_xmm128s();c=new Uint8Array(c.buffer);for(var d=a.create_atom128s(0,0,0,0),e=new Uint8Array(d.buffer),f=0;16>f;f++)e[f]=b[f]>c[f]?b[f]:c[f];a.write_xmm128s(d[0],d[1],d[2],d[3])}else dbg_assert(!1)};\nt[223]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();a.write_mmx64s(b[0]&~a.reg_mmxs[2*(a.modrm_byte>>3&7)],b[1]&~a.reg_mmxs[2*(a.modrm_byte>>3&7)+1])};t[224]=function(a){a.unimplemented_sse()};\nt[225]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=b[0]>>>0;15<b&&(b=16);a.write_mmx64s(c<<16>>16>>b&65535|(c>>16>>b&65535)<<16,d<<16>>16>>b&65535|(d>>16>>b&65535)<<16)};\nt[226]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=b[0]>>>0;31<b&&(b=31);a.write_mmx64s(c>>b,d>>b)};t[227]=function(a){a.unimplemented_sse()};\nt[228]=function(a){dbg_assert((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE);a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_xmm_mem128s();b=new Uint16Array(b.buffer);var c=a.read_xmm128s();c=new Uint16Array(c.buffer);a.write_xmm128s(b[0]*c[0]>>>16|b[1]*c[1]&4294901760,b[2]*c[2]>>>16|b[3]*c[3]&4294901760,b[4]*c[4]>>>16|b[5]*c[5]&4294901760,b[6]*c[6]>>>16|b[7]*c[7]&4294901760)};\nt[229]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];a.write_mmx64s((c<<16>>16)*(b[0]<<16>>16)>>>16|(c>>16)*(b[0]>>16)>>>16<<16,(d<<16>>16)*(b[1]<<16>>16)>>>16|(d>>16)*(b[1]>>16)>>>16<<16)};t[230]=function(a){a.unimplemented_sse()};\nt[231]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();192<=a.modrm_byte&&a.trigger_ud();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm128s(),c=a.modrm_resolve(a.modrm_byte);a.safe_write128(c,b[0],b[1],b[2],b[3])}else dbg_assert(!1)};\nt[232]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=new Int8Array(b.buffer),d=8*(a.modrm_byte>>3&7),e=a.reg_mmx8s;b=a.saturate_sd_to_sb(e[d]-c[0]);var f=a.saturate_sd_to_sb(e[d+1]-c[1]),g=a.saturate_sd_to_sb(e[d+2]-c[2]),k=a.saturate_sd_to_sb(e[d+3]-c[3]),l=a.saturate_sd_to_sb(e[d+4]-c[4]),m=a.saturate_sd_to_sb(e[d+5]-c[5]),p=a.saturate_sd_to_sb(e[d+6]-c[6]);c=a.saturate_sd_to_sb(e[d+7]-c[7]);\na.write_mmx64s(b|f<<8|g<<16|k<<24,l|m<<8|p<<16|c<<24)};t[233]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1],e=a.saturate_sd_to_sw((c<<16>>16)-(b[0]<<16>>16));c=a.saturate_sd_to_sw((c>>16)-(b[0]>>16));var f=a.saturate_sd_to_sw((d<<16>>16)-(b[1]<<16>>16));b=a.saturate_sd_to_sw((d>>16)-(b[1]>>16));a.write_mmx64s(e|c<<16,f|b<<16)};\nt[234]=function(a){a.unimplemented_sse()};t[235]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))===PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s(),c=a.read_xmm128s();a.write_xmm128s(b[0]|c[0],b[1]|c[1],b[2]|c[2],b[3]|c[3])}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem64s(),a.write_mmx64s(b[0]|a.reg_mmxs[2*(a.modrm_byte>>3&7)],b[1]|a.reg_mmxs[2*(a.modrm_byte>>3&7)+1])};\nt[236]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=new Int8Array(b.buffer),d=8*(a.modrm_byte>>3&7),e=a.reg_mmx8s;b=a.saturate_sd_to_sb(e[d]+c[0]);var f=a.saturate_sd_to_sb(e[d+1]+c[1]),g=a.saturate_sd_to_sb(e[d+2]+c[2]),k=a.saturate_sd_to_sb(e[d+3]+c[3]),l=a.saturate_sd_to_sb(e[d+4]+c[4]),m=a.saturate_sd_to_sb(e[d+5]+c[5]),p=a.saturate_sd_to_sb(e[d+6]+c[6]);c=a.saturate_sd_to_sb(e[d+7]+c[7]);\na.write_mmx64s(b|f<<8|g<<16|k<<24,l|m<<8|p<<16|c<<24)};t[237]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1],e=a.saturate_sd_to_sw((c<<16>>16)+(b[0]<<16>>16));c=a.saturate_sd_to_sw((c>>16)+(b[0]>>16));var f=a.saturate_sd_to_sw((d<<16>>16)+(b[1]<<16>>16));b=a.saturate_sd_to_sw((d>>16)+(b[1]>>16));a.write_mmx64s(e|c<<16,f|b<<16)};\nt[238]=function(a){a.unimplemented_sse()};t[239]=function(a){a.task_switch_test_mmx();a.read_modrm_byte();if((a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))==PREFIX_MASK_OPSIZE){var b=a.read_xmm_mem128s(),c=a.read_xmm128s();a.write_xmm128s(b[0]^c[0],b[1]^c[1],b[2]^c[2],b[3]^c[3])}else dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE))),b=a.read_mmx_mem64s(),a.write_mmx64s(b[0]^a.reg_mmxs[2*(a.modrm_byte>>3&7)],b[1]^a.reg_mmxs[2*(a.modrm_byte>>3&7)+1])};t[240]=function(a){a.unimplemented_sse()};\nt[241]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=b[0]>>>0;var e=0,f=0;15>=b&&(e=(c&65535)<<b&65535|c>>>16<<b<<16,f=(d&65535)<<b&65535|d>>>16<<b<<16);a.write_mmx64s(e,f)};\nt[242]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=b[0]>>>0;var e=0,f=0;31>=b&&(e=c<<b,f=d<<b);a.write_mmx64s(e,f)};\nt[243]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];b=b[0]>>>0;if(0!==b){var e=0,f=0;31>=b?(e=c<<b,f=d<<b|c>>>32-b):63>=b&&(f=c<<(b&31),e=0);a.write_mmx64s(e,f)}};t[244]=function(a){a.unimplemented_sse()};\nt[245]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];a.write_mmx64s((c<<16>>16)*(b[0]<<16>>16)+(c>>16)*(b[0]>>16)|0,(d<<16>>16)*(b[1]<<16>>16)+(d>>16)*(b[1]>>16)|0)};t[246]=function(a){a.unimplemented_sse()};t[247]=function(a){a.unimplemented_sse()};\nt[248]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();b=new Int8Array(b.buffer);var c=8*(a.modrm_byte>>3&7),d=a.reg_mmx8s;a.write_mmx64s(d[c]-b[0]&255|(d[c+1]-b[1]&255)<<8|(d[c+2]-b[2]&255)<<16|(d[c+3]-b[3]&255)<<24,d[c+4]-b[4]&255|(d[c+5]-b[5]&255)<<8|(d[c+6]-b[6]&255)<<16|(d[c+7]-b[7]&255)<<24)};\nt[249]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];a.write_mmx64s(c-b[0]&65535|((c>>>16)-(b[0]>>>16)&65535)<<16,d-b[1]&65535|((d>>>16)-(b[1]>>>16)&65535)<<16)};\nt[250]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();a.write_mmx64s(a.reg_mmxs[2*(a.modrm_byte>>3&7)]-b[0],a.reg_mmxs[2*(a.modrm_byte>>3&7)+1]-b[1])};t[251]=function(a){a.unimplemented_sse()};\nt[252]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();b=new Int8Array(b.buffer);var c=8*(a.modrm_byte>>3&7),d=a.reg_mmx8s;a.write_mmx64s(d[c]+b[0]&255|(d[c+1]+b[1]&255)<<8|(d[c+2]+b[2]&255)<<16|(d[c+3]+b[3]&255)<<24,d[c+4]+b[4]&255|(d[c+5]+b[5]&255)<<8|(d[c+6]+b[6]&255)<<16|(d[c+7]+b[7]&255)<<24)};\nt[253]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s(),c=a.reg_mmxs[2*(a.modrm_byte>>3&7)],d=a.reg_mmxs[2*(a.modrm_byte>>3&7)+1];a.write_mmx64s(c+b[0]&65535|((c>>>16)+(b[0]>>>16)&65535)<<16,d+b[1]&65535|((d>>>16)+(b[1]>>>16)&65535)<<16)};\nt[254]=function(a){dbg_assert(0==(a.prefixes&(PREFIX_MASK_REP|PREFIX_MASK_OPSIZE)));a.task_switch_test_mmx();a.read_modrm_byte();var b=a.read_mmx_mem64s();a.write_mmx64s(a.reg_mmxs[2*(a.modrm_byte>>3&7)]+b[0]|0,a.reg_mmxs[2*(a.modrm_byte>>3&7)+1]+b[1]|0)};t[255]=function(a){dbg_log(\"#ud: 0F FF\");a.trigger_ud()};var table0F_16=[],table0F_32=[];CPU.prototype.table0F_16=table0F_16;CPU.prototype.table0F_32=table0F_32;\nfor(i=0;256>i;i++)t[i]?table0F_16[i]=table0F_32[i]=t[i]:t16[i]&&(table0F_16[i]=t16[i],table0F_32[i]=t32[i]);CPU.prototype.debug_init=function(){function a(){DEBUG&&(k.running||k.cycle(),d(),Date.now(),k.running=!1,f())}function b(a){var b=k.flags&flag_vm?1:0;b=k.protected_mode?b?\"vm86\":\"prot\":\"real\";var c=k.get_eflags(),d=k.getiopl(),e=k.cpl,f=h(k.sreg[reg_cs],4)+\":\"+h(k.get_real_eip()>>>0,8),g=h(k.sreg[reg_ss],4)+\":\"+h(k.get_stack_reg()>>>0,8),l=k.is_32?\"32\":\"16\",p=k.flags&flag_interrupt?1:0,m={};m=(m[flag_carry]=\"c\",m[flag_parity]=\"p\",m[flag_adjust]=\"a\",m[flag_zero]=\"z\",m[flag_sign]=\"s\",m[flag_trap]=\n\"t\",m[flag_interrupt]=\"i\",m[flag_direction]=\"d\",m[flag_overflow]=\"o\",m);for(var B=\"\",z=0;16>z;z++)m[1<<z]&&(B=c&1<<z?B+m[1<<z]:B+\" \");return\"mode=\"+b+\"/\"+l+\" paging=\"+ +k.paging+\" iopl=\"+d+\" cpl=\"+e+\" if=\"+p+\" cs:eip=\"+f+\" cs_off=\"+h(k.get_seg(reg_cs)>>>0,8)+\" flgs=\"+h(k.get_eflags()>>>0,6)+\" (\"+B+\") ss:esp=\"+g+\" ssize=\"+ +k.stack_size_32+(a?\" in \"+a:\"\")}function c(){for(var a={eax:reg_eax,ecx:reg_ecx,edx:reg_edx,ebx:reg_ebx,esp:reg_esp,ebp:reg_ebp,esi:reg_esi,edi:reg_edi},b=\"eax ecx edx ebx esp ebp esi edi\".split(\" \"),\nc=\"\",d=\"\",e=0;4>e;e++)c+=b[e]+\"=\"+h(k.reg32[a[b[e]]],8)+\" \",d+=b[e+4]+\"=\"+h(k.reg32[a[b[e+4]]],8)+\" \";c+=\"  ds=\"+h(k.sreg[reg_ds],4)+\" es=\"+h(k.sreg[reg_es],4)+\" fs=\"+h(k.sreg[reg_fs],4);d+=\"  gs=\"+h(k.sreg[reg_gs],4)+\" cs=\"+h(k.sreg[reg_cs],4)+\" ss=\"+h(k.sreg[reg_ss],4);return[c,d]}function d(){if(DEBUG){var a=c();dbg_log(a[0],LOG_CPU);dbg_log(a[1],LOG_CPU)}}function e(){if(DEBUG){l.step_mode=!0;var a,b=\"\";l.trace_all&&l.all_ops?a=l.all_ops:l.ops&&(a=l.ops.toArray());if(!a)return\"\";for(var c=0;c<\na.length;c+=2){var d=a[c+1];b+=h(a[c],8)+\":        \"+v86util.pads(m[d]||\"unkown\",20)+h(d,2)+\"\\n\"}l.ops.clear();l.all_ops=[];return b}}function f(){DEBUG&&l.show(e())}function g(a,b){if(DEBUG){if(!(a&1))return!1;var c=128===(a&128);return{size:c,global:256===(a&256),accessed:32===(a&32),dirty:64===(a&64),cache_disable:16===(a&16),user:4===(a&4),read_write:2===(a&2),address:(c&&!b?a&4290772992:a&4294963200)>>>0}}}var k=this,l={};this.debug=l;l.step_mode=!1;l.ops=void 0;l.all_ops=[];l.trace_all=!1;l.show=\nfunction(a){if(\"undefined\"!==typeof document){var b=document.getElementById(\"log\");if(b){b.textContent+=a+\"\\n\";b.scrollTop=1E9;return}}console.log(a)};l.init=function(){function a(a){10===a?(dbg_log(b,LOG_BIOS),b=\"\"):b+=String.fromCharCode(a)}if(DEBUG&&(l.ops=new CircularQueue(2E5),k.io)){var b=\"\";k.io.register_write(1026,this,a);k.io.register_write(1280,this,a)}};l.get_regs_short=c;l.dump_regs=d;l.dump_instructions=f;l.get_instructions=e;l.get_state=b;l.dump_state=function(a){DEBUG&&dbg_log(b(a),\nLOG_CPU)};l.dump_stack=function(a,b){if(DEBUG){var c=k.reg32[reg_esp];dbg_log(\"========= STACK ==========\");if(b>=a||void 0===b)a=5,b=-5;for(;a>b;a--){var d=\"    \";a||(d=\"=>  \");d+=h(a,2)+\" | \";dbg_log(d+h(c+4*a,8)+\" | \"+h(k.read32s(c+4*a)>>>0))}}};l.dump_page_directory=function(){if(DEBUG)for(var a=0;1024>a;a++){var b=k.read32s(k.cr[3]+4*a),c=g(b,!0);if(c)if(b=\"\",b+=c.size?\"S \":\"  \",b+=c.accessed?\"A \":\"  \",b+=c.cache_disable?\"Cd \":\"  \",b+=c.user?\"U \":\"  \",b+=c.read_write?\"Rw \":\"   \",c.size)dbg_log(\"=== \"+\nh(a<<22>>>0,8)+\" -> \"+h(c.address>>>0,8)+\" | \"+b);else{dbg_log(\"=== \"+h(a<<22>>>0,8)+\" | \"+b);for(var d=0;1024>d;d++){var e=c.address+4*d;b=k.read32s(e);var f=g(b,!1);f&&(b=\"\",b+=f.cache_disable?\"Cd \":\"   \",b+=f.user?\"U \":\"  \",b+=f.read_write?\"Rw \":\"   \",b+=f.global?\"G \":\"  \",b+=f.accessed?\"A \":\"  \",b+=f.dirty?\"Di \":\"   \",dbg_log(\"# \"+h((a<<22|d<<12)>>>0,8)+\" -> \"+h(f.address,8)+\" | \"+b+\"        (at \"+h(e,8)+\")\"))}}}};l.dump_gdt_ldt=function(){function a(a,b){for(var c=0;c<b;c+=8,a+=8){var d=k.read16(a+\n2)|k.read8(a+4)<<16|k.read8(a+7)<<24,e=k.read16(a)|(k.read8(a+6)&15)<<16,f=k.read8(a+5),g=k.read8(a+6)>>4,l=\"\",m=f>>5&3;l=f&128?l+\" P \":l+\"NP \";f&16?(l=g&4?l+\"32b \":l+\"16b \",f&8?(l+=\"X \",f&4&&(l+=\"C \")):l+=\"R \",l+=\"RW \"):l+=\"sys: \"+h(f&15);g&8&&(e=e<<12|4095);dbg_log(h(c&-8,4)+\" \"+h(d>>>0,8)+\" (\"+h(e>>>0,8)+\" bytes) \"+l+\";  dpl = \"+m+\", a = \"+f.toString(2)+\", f = \"+g.toString(2))}}DEBUG&&(dbg_log(\"gdt: (len = \"+h(k.gdtr_size)+\")\"),a(k.translate_address_system_read(k.gdtr_offset),k.gdtr_size),dbg_log(\"\\nldt: (len = \"+\nh(k.segment_limits[reg_ldtr])+\")\"),a(k.translate_address_system_read(k.segment_offsets[reg_ldtr]),k.segment_limits[reg_ldtr]))};l.dump_idt=function(){if(DEBUG)for(var a=0;a<k.idtr_size;a+=8){var b=k.translate_address_system_read(k.idtr_offset+a),c=k.read16(b)|k.read16(b+6)<<16,d=k.read16(b+2);b=k.read8(b+5);var e=b>>5&3;var f=5===(b&31)?\"task gate \":14===(b&31)?\"intr gate \":15===(b&31)?\"trap gate \":\"invalid   \";f=b&128?f+\" P\":f+\"NP\";dbg_log(h(a>>3,4)+\" \"+h(c>>>0,8)+\", \"+h(d,4)+\"; \"+f+\";  dpl = \"+\ne+\", t = \"+b.toString(2))}};l.get_memory_dump=function(a,b){if(DEBUG)return void 0===a?(a=0,b=k.memory_size):void 0===b&&(b=a,a=0),k.mem8.slice(a,a+b).buffer};l.memory_hex_dump=function(a,b){if(DEBUG){b=b||64;for(var c,d,e=0;e<b>>4;e++){c=h(a+(e<<4),5)+\"   \";for(var f=0;16>f;f++)d=k.read8(a+(e<<4)+f),c+=h(d,2)+\" \";c+=\"  \";for(f=0;16>f;f++)d=k.read8(a+(e<<4)+f),c+=33>d||126<d?\".\":String.fromCharCode(d);dbg_log(c)}}};l.used_memory_dump=function(){if(DEBUG)for(var a=k.memory_size/128/16|0,b,c=0;16>c;c++){b=\nh(128*c*a,8)+\" | \";for(var d=0;128>d;d++)b+=0<k.mem32s[(128*c+d)*a]?\"X\":\" \";dbg_log(b)}};l.step=a;l.run_until=function(){if(DEBUG){k.running=!1;var b=parseInt(prompt(\"input hex\",\"\"),16);if(b)for(;k.instruction_pointer!=b;)a()}};l.unimpl=function(a){a=\"Unimplemented\"+(a?\": \"+a:\"\");l.show(a);DEBUG?console.trace():l.show(\"Execution stopped\");return a};var m=\"ADD ADD ADD ADD ADD ADD PUSH POP OR OR OR OR OR OR PUSH 0F: ADC ADC ADC ADC ADC ADC PUSH POP SBB SBB SBB SBB SBB SBB PUSH POP AND AND AND AND AND AND ES DAA SUB SUB SUB SUB SUB SUB CS DAS XOR XOR XOR XOR XOR XOR SS AAA CMP CMP CMP CMP CMP CMP DS AAS INC INC INC INC INC INC INC INC DEC DEC DEC DEC DEC DEC DEC DEC PUSH PUSH PUSH PUSH PUSH PUSH PUSH PUSH POP POP POP POP POP POP POP POP PUSHA POPA BOUND ARPL FS GS none none PUSH IMUL PUSH IMUL INS INS OUTS OUTS JO JNO JB JNB JZ JNZ JBE JNBE JS JNS JP JNP JL JNL JLE JNLE ADD ADD ADD ADD TEST TEST XCHG XCHG MOV MOV MOV MOV MOV LEA MOV POP NOP XCHG XCHG XCHG XCHG XCHG XCHG XCHG CBW CWD CALLF FWAIT PUSHF POPF SAHF LAHF MOV MOV MOV MOV MOVS MOVS CMPS CMPS TEST TEST STOS STOS LODS LODS SCAS SCAS MOV MOV MOV MOV MOV MOV MOV MOV MOV MOV MOV MOV MOV MOV MOV MOV ROL ROL RETN RETN LES LDS MOV MOV ENTER LEAVE RETF RETF INT INT INTO IRET ROL ROL ROL ROL AAM AAD none XLAT FADD FLD FIADD FILD FADD FLD FIADD FILD LOOPNZ LOOPZ LOOP JCXZ IN IN OUT OUT CALL JMP JMPF JMP IN IN OUT OUT LOCK none REPNZ REPZ HLT CMC TEST TEST CLC STC CLI STI CLD STD INC INC\".split(\" \");\nl.logop=function(a,b){DEBUG&&l.step_mode&&(l.trace_all&&l.all_ops?l.all_ops.push(a,b):l.ops&&(l.ops.add(a),l.ops.add(b)))};l.debug_interrupt=function(a){}};var ELF_MAGIC=1179403647,types=DataView.prototype,U8={size:1,get:types.getUint8,set:types.setUint8},U16={size:2,get:types.getUint16,set:types.setUint16},U32={size:4,get:types.getUint32,set:types.setUint32},pad=function(a){return{size:a,get:function(a){return-1}}},Header=create_struct([{magic:U32},{class:U8},{data:U8},{version0:U8},{osabi:U8},{abiversion:U8},{pad0:pad(7)},{type:U16},{machine:U16},{version1:U32},{entry:U32},{phoff:U32},{shoff:U32},{flags:U32},{ehsize:U16},{phentsize:U16},{phnum:U16},\n{shentsize:U16},{shnum:U16},{shstrndx:U16}]);console.assert(52===Header.reduce(function(a,b){return a+b.size},0));var ProgramHeader=create_struct([{type:U32},{offset:U32},{vaddr:U32},{paddr:U32},{filesz:U32},{memsz:U32},{flags:U32},{align:U32}]);console.assert(32===ProgramHeader.reduce(function(a,b){return a+b.size},0));var SectionHeader=create_struct([{name:U32},{type:U32},{flags:U32},{addr:U32},{offset:U32},{size:U32},{link:U32},{info:U32},{addralign:U32},{entsize:U32}]);\nconsole.assert(40===SectionHeader.reduce(function(a,b){return a+b.size},0));function create_struct(a){return a.map(function(a){var b=Object.keys(a);console.assert(1===b.length);b=b[0];a=a[b];console.assert(0<a.size);return{name:b,type:a,size:a.size,get:a.get,set:a.set}})}\nfunction read_elf(a){var b=new DataView(a),c=$jscomp.makeIterator(read_struct(b,Header));a=c.next().value;c=c.next().value;console.assert(52===c);if(DEBUG){for(var d in a)console.log(d+\": 0x\"+a[d].toString(16));console.log(a)}console.assert(a.magic===ELF_MAGIC,\"Bad magic\");console.assert(1===a.class,\"Unimplemented: 64 bit elf\");console.assert(1===a.data,\"Unimplemented: big endian\");console.assert(1===a.version0,\"Bad version0\");console.assert(2===a.type,\"Unimplemented type\");console.assert(1===a.version1,\n\"Bad version1\");console.assert(52===a.ehsize,\"Bad header size\");console.assert(32===a.phentsize,\"Bad program header size\");console.assert(40===a.shentsize,\"Bad section header size\");c=$jscomp.makeIterator(read_structs(view_slice(b,a.phoff,a.phentsize*a.phnum),ProgramHeader,a.phnum));d=c.next().value;c.next();c=$jscomp.makeIterator(read_structs(view_slice(b,a.shoff,a.shentsize*a.shnum),SectionHeader,a.shnum));b=c.next().value;c.next();if(DEBUG){console.log(\"%d program headers:\",d.length);c=$jscomp.makeIterator(d);\nfor(var e=c.next();!e.done;e=c.next())e=e.value,console.log(\"type=%s offset=%s vaddr=%s paddr=%s filesz=%s memsz=%s flags=%s align=%s\",e.type.toString(16),e.offset.toString(16),e.vaddr.toString(16),e.paddr.toString(16),e.filesz.toString(16),e.memsz.toString(16),e.flags.toString(16),e.align.toString(16));console.log(\"%d program headers:\",b.length);c=$jscomp.makeIterator(b);for(e=c.next();!e.done;e=c.next())e=e.value,console.log(\"name=%s type=%s flags=%s addr=%s offset=%s size=%s link=%s info=%s addralign=%s entsize=%s\",\ne.name.toString(16),e.type.toString(16),e.flags.toString(16),e.addr.toString(16),e.offset.toString(16),e.size.toString(16),e.link.toString(16),e.info.toString(16),e.addralign.toString(16),e.entsize.toString(16))}return{header:a,program_headers:d,sections_headers:b}}function read_struct(a,b){var c={},d=0;b=$jscomp.makeIterator(b);for(var e=b.next();!e.done;e=b.next()){e=e.value;var f=e.get.call(a,d,!0);console.assert(void 0===c[e.name]);c[e.name]=f;d+=e.size}return[c,d]}\nfunction read_structs(a,b,c){for(var d=[],e=0,f=0;f<c;f++){var g=$jscomp.makeIterator(read_struct(view_slice(a,e),b)),k=g.next().value;g=g.next().value;d.push(k);e+=g}return[d,e]}function view_slice(a,b,c){return new DataView(a.buffer,a.byteOffset+b,c)};var SHIFT_SCAN_CODE=42,SCAN_CODE_RELEASE=128;\nfunction KeyboardAdapter(a){function b(a){!a.altKey&&k[56]&&f(56,!1);return e(a,!1)}function c(a){!a.altKey&&k[56]&&f(56,!1);return e(a,!0)}function d(a){a=Object.keys(k);for(var b,c=0;c<a.length;c++)b=+a[c],k[b]&&f(b,!1);k={}}function e(a,b){if(l.bus&&(a.shiftKey&&a.ctrlKey&&(74===a.keyCode||75===a.keyCode)||!l.emu_enabled?0:a.target?\"phone_keyboard\"===a.target.className||\"INPUT\"!==a.target.nodeName&&\"TEXTAREA\"!==a.target.nodeName:1)){a:{if(void 0!==a.code){var c=r[a.code];if(void 0!==c)break a}c=\nm[a.keyCode]}if(c)return f(c,b),a.preventDefault&&a.preventDefault(),!1;console.log(\"Missing char in map: \"+a.keyCode.toString(16))}}function f(a,b){if(b)k[a]&&f(a,!1);else if(!k[a])return;(k[a]=b)||(a|=128);255<a?(g(a>>8),g(a&255)):g(a)}function g(a){l.bus.send(\"keyboard-code\",a)}var k={},l=this;this.emu_enabled=!0;var m=new Uint16Array([0,0,0,0,0,0,0,0,14,15,0,0,0,28,0,0,42,29,56,0,58,0,0,0,0,0,0,1,0,0,0,0,57,57417,57425,57423,57415,57419,57416,57421,80,0,0,0,0,82,83,0,11,2,3,4,5,6,7,8,9,10,0,39,\n0,13,0,0,0,30,48,46,32,18,33,34,35,23,36,37,38,50,49,24,25,16,19,31,20,22,47,17,45,21,44,57435,57436,57437,0,0,82,79,80,81,75,76,77,71,72,73,0,0,0,0,0,0,59,60,61,62,63,64,65,66,67,68,87,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,39,13,51,12,52,53,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,43,27,40,0,57435,57400,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),p={10:13,32:32,39:222,44:188,45:189,46:190,47:191,48:48,49:49,\n50:50,51:51,52:52,53:53,54:54,55:55,56:56,57:57,59:186,61:187,91:219,92:220,93:221,96:192,97:65,98:66,99:67,100:68,101:69,102:70,103:71,104:72,105:73,106:74,107:75,108:76,109:77,110:78,111:79,112:80,113:81,114:82,115:83,116:84,117:85,118:86,119:87,120:88,121:89,122:90},n={33:49,34:222,35:51,36:52,37:53,38:55,40:57,41:48,42:56,43:187,58:186,60:188,62:190,63:191,64:50,65:65,66:66,67:67,68:68,69:69,70:70,71:71,72:72,73:73,74:74,75:75,76:76,77:77,78:78,79:79,80:80,81:81,82:82,83:83,84:84,85:85,86:86,\n87:87,88:88,89:89,90:90,94:54,95:189,123:219,124:220,125:221,126:192},r={Escape:1,Digit1:2,Digit2:3,Digit3:4,Digit4:5,Digit5:6,Digit6:7,Digit7:8,Digit8:9,Digit9:10,Digit0:11,Minus:12,Equal:13,Backspace:14,Tab:15,KeyQ:16,KeyW:17,KeyE:18,KeyR:19,KeyT:20,KeyY:21,KeyU:22,KeyI:23,KeyO:24,KeyP:25,BracketLeft:26,BracketRight:27,Enter:28,ControlLeft:29,KeyA:30,KeyS:31,KeyD:32,KeyF:33,KeyG:34,KeyH:35,KeyJ:36,KeyK:37,KeyL:38,Semicolon:39,Quote:40,Backquote:41,ShiftLeft:42,Backslash:43,KeyZ:44,KeyX:45,KeyC:46,\nKeyV:47,KeyB:48,KeyN:49,KeyM:50,Comma:51,Period:52,Slash:53,ShiftRight:54,NumpadMultiply:55,AltLeft:56,Space:57,CapsLock:58,F1:59,F2:60,F3:61,F4:62,F5:63,F6:64,F7:65,F8:66,F9:67,F10:68,NumLock:69,ScrollLock:70,Numpad7:71,Numpad8:72,Numpad9:73,NumpadSubtract:74,Numpad4:75,Numpad5:76,Numpad6:77,NumpadAdd:78,Numpad1:79,Numpad2:80,Numpad3:81,Numpad0:82,NumpadDecimal:83,IntlBackslash:86,F11:87,F12:88,NumpadEnter:57372,ControlRight:57373,NumpadDivide:57397,AltRight:57400,Home:57423,ArrowUp:57416,PageUp:57417,\nArrowLeft:57419,ArrowRight:57421,End:57423,ArrowDown:57424,PageDown:57425,Insert:57426,Delete:57427,OSLeft:57435,OSRight:57436,ContextMenu:57437};this.bus=a;this.destroy=function(){\"undefined\"!==typeof window&&(window.removeEventListener(\"keyup\",b,!1),window.removeEventListener(\"keydown\",c,!1),window.removeEventListener(\"blur\",d,!1))};this.init=function(){\"undefined\"!==typeof window&&(this.destroy(),window.addEventListener(\"keyup\",b,!1),window.addEventListener(\"keydown\",c,!1),window.addEventListener(\"blur\",\nd,!1))};this.init();this.simulate_press=function(a){a={keyCode:a};e(a,!0);e(a,!1)};this.simulate_char=function(a){var b=a.charCodeAt(0);b in p?this.simulate_press(p[b]):b in n?(g(SHIFT_SCAN_CODE),this.simulate_press(n[b]),g(SHIFT_SCAN_CODE|SCAN_CODE_RELEASE)):console.log(\"ascii -> keyCode not found: \",b,a)}};function MouseAdapter(a,b){function c(a){if(!w.enabled||!w.emu_enabled)return!1;if(\"mousemove\"===a.type||\"touchmove\"===a.type)return!0;if(\"mousewheel\"===a.type||\"DOMMouseScroll\"===a.type){var c=b||document.body;a:{for(a=a.target;a.parentNode;){if(a===c){c=!0;break a}a=a.parentNode}c=!1}return c}return!a.target||\"INPUT\"!==a.target.nodeName&&\"TEXTAREA\"!==a.target.nodeName}function d(a){c(a)&&(a=a.changedTouches)&&a.length&&(a=a[a.length-1],q=a.clientX,u=a.clientY)}function e(a){if(p||r||n)w.bus.send(\"mouse-click\",\n[!1,!1,!1]),p=r=n=!1}function f(a){if(w.bus&&c(a)){var d=0,e=0,f=a.changedTouches;f?f.length&&(f=f[f.length-1],d=f.clientX-q,e=f.clientY-u,q=f.clientX,u=f.clientY,a.preventDefault()):\"number\"===typeof a.movementX?(d=a.movementX,e=a.movementY):\"number\"===typeof a.webkitMovementX?(d=a.webkitMovementX,e=a.webkitMovementY):\"number\"===typeof a.mozMovementX?(d=a.mozMovementX,e=a.mozMovementY):(d=a.clientX-q,e=a.clientY-u,q=a.clientX,u=a.clientY);w.bus.send(\"mouse-delta\",[.15*d,-(.15*e)]);w.bus.send(\"mouse-absolute\",\n[a.pageX-b.offsetLeft,a.pageY-b.offsetTop,b.offsetWidth,b.offsetHeight])}}function g(a){c(a)&&l(a,!0)}function k(a){c(a)&&l(a,!1)}function l(a,b){w.bus&&(1===a.which?p=b:2===a.which?r=b:3===a.which?n=b:console.log(\"Unknown event.which: \"+a.which),w.bus.send(\"mouse-click\",[p,r,n]))}function m(a){if(c(a)){var b=a.wheelDelta||-a.detail;0>b?b=-1:0<b&&(b=1);w.bus.send(\"mouse-wheel\",[b,0]);a.preventDefault()}}var p=!1,n=!1,r=!1,q=0,u=0,w=this;this.enabled=!1;this.emu_enabled=!0;this.bus=a;this.bus.register(\"mouse-enable\",\nfunction(a){this.enabled=a},this);this.destroy=function(){window.removeEventListener(\"touchstart\",d,!1);window.removeEventListener(\"touchend\",e,!1);window.removeEventListener(\"touchmove\",f,!1);window.removeEventListener(\"mousemove\",f,!1);window.removeEventListener(\"mousedown\",g,!1);window.removeEventListener(\"mouseup\",k,!1);window.removeEventListener(\"DOMMouseScroll\",m,!1);window.removeEventListener(\"mousewheel\",m,!1)};this.init=function(){\"undefined\"!==typeof window&&(this.destroy(),window.addEventListener(\"touchstart\",\nd,!1),window.addEventListener(\"touchend\",e,!1),window.addEventListener(\"touchmove\",f,!1),window.addEventListener(\"mousemove\",f,!1),window.addEventListener(\"mousedown\",g,!1),window.addEventListener(\"mouseup\",k,!1),window.addEventListener(\"DOMMouseScroll\",m,!1),window.addEventListener(\"mousewheel\",m,!1))};this.init()};var DAC_QUEUE_RESERVE=.2,AUDIOBUFFER_MINIMUM_SAMPLING_RATE=8E3;\nfunction SpeakerAdapter(a){if(\"undefined\"!==typeof window)if(window.AudioContext||window.webkitAudioContext){var b=window.AudioWorklet?SpeakerWorkletDAC:SpeakerBufferSourceDAC;this.bus=a;this.audio_context=new (window.AudioContext||window.webkitAudioContext);this.mixer=new SpeakerMixer(a,this.audio_context);this.pcspeaker=new PCSpeaker(a,this.audio_context,this.mixer);this.dac=new b(a,this.audio_context,this.mixer);this.pcspeaker.start();a.register(\"emulator-stopped\",function(){this.audio_context.suspend()},\nthis);a.register(\"emulator-started\",function(){this.audio_context.resume()},this);a.register(\"speaker-confirm-initialized\",function(){a.send(\"speaker-has-initialized\")},this);a.send(\"speaker-has-initialized\")}else console.warn(\"Web browser doesn't support Web Audio API\")}\nfunction SpeakerMixer(a,b){function c(a){return function(b){a.gain.setValueAtTime(b,this.audio_context.currentTime)}}this.audio_context=b;this.sources=new Map;this.gain_right=this.gain_left=this.volume_right=this.volume_left=this.volume_both=1;this.node_treble_left=this.audio_context.createBiquadFilter();this.node_treble_right=this.audio_context.createBiquadFilter();this.node_treble_left.type=\"highshelf\";this.node_treble_right.type=\"highshelf\";this.node_treble_left.frequency.setValueAtTime(2E3,this.audio_context.currentTime);\nthis.node_treble_right.frequency.setValueAtTime(2E3,this.audio_context.currentTime);this.node_bass_left=this.audio_context.createBiquadFilter();this.node_bass_right=this.audio_context.createBiquadFilter();this.node_bass_left.type=\"lowshelf\";this.node_bass_right.type=\"lowshelf\";this.node_bass_left.frequency.setValueAtTime(200,this.audio_context.currentTime);this.node_bass_right.frequency.setValueAtTime(200,this.audio_context.currentTime);this.node_gain_left=this.audio_context.createGain();this.node_gain_right=\nthis.audio_context.createGain();this.node_merger=this.audio_context.createChannelMerger(2);this.input_left=this.node_treble_left;this.input_right=this.node_treble_right;this.node_treble_left.connect(this.node_bass_left);this.node_bass_left.connect(this.node_gain_left);this.node_gain_left.connect(this.node_merger,0,0);this.node_treble_right.connect(this.node_bass_right);this.node_bass_right.connect(this.node_gain_right);this.node_gain_right.connect(this.node_merger,0,1);this.node_merger.connect(this.audio_context.destination);\na.register(\"mixer-connect\",function(a){this.connect_source(a[0],a[1])},this);a.register(\"mixer-disconnect\",function(a){this.disconnect_source(a[0],a[1])},this);a.register(\"mixer-volume\",function(a){var b=a[0],c=a[1];a=Math.pow(10,a[2]/20);var d=b===MIXER_SRC_MASTER?this:this.sources.get(b);void 0===d?dbg_assert(!1,\"Mixer set volume - cannot set volume for undefined source: \"+b):d.set_volume(a,c)},this);a.register(\"mixer-gain-left\",function(a){this.gain_left=Math.pow(10,a/20);this.update()},this);\na.register(\"mixer-gain-right\",function(a){this.gain_right=Math.pow(10,a/20);this.update()},this);a.register(\"mixer-treble-left\",c(this.node_treble_left),this);a.register(\"mixer-treble-right\",c(this.node_treble_right),this);a.register(\"mixer-bass-left\",c(this.node_bass_left),this);a.register(\"mixer-bass-right\",c(this.node_bass_right),this)}\nSpeakerMixer.prototype.add_source=function(a,b){a=new SpeakerMixerSource(this.audio_context,a,this.input_left,this.input_right);dbg_assert(!this.sources.has(b),\"Mixer add source - overwritting source: \"+b);this.sources.set(b,a);return a};SpeakerMixer.prototype.connect_source=function(a,b){var c=this.sources.get(a);void 0===c?dbg_assert(!1,\"Mixer connect - cannot connect undefined source: \"+a):c.connect(b)};\nSpeakerMixer.prototype.disconnect_source=function(a,b){var c=this.sources.get(a);void 0===c?dbg_assert(!1,\"Mixer disconnect - cannot disconnect undefined source: \"+a):c.disconnect(b)};SpeakerMixer.prototype.set_volume=function(a,b){void 0===b&&(b=MIXER_CHANNEL_BOTH);switch(b){case MIXER_CHANNEL_LEFT:this.volume_left=a;break;case MIXER_CHANNEL_RIGHT:this.volume_right=a;break;case MIXER_CHANNEL_BOTH:this.volume_both=a;break;default:dbg_assert(!1,\"Mixer set master volume - unknown channel: \"+b);return}this.update()};\nSpeakerMixer.prototype.update=function(){var a=this.volume_both*this.volume_right*this.gain_right;this.node_gain_left.gain.setValueAtTime(this.volume_both*this.volume_left*this.gain_left,this.audio_context.currentTime);this.node_gain_right.gain.setValueAtTime(a,this.audio_context.currentTime)};\nfunction SpeakerMixerSource(a,b,c,d){this.audio_context=a;this.connected_right=this.connected_left=!0;this.volume_right=this.volume_left=this.volume_both=this.gain_hidden=1;this.node_splitter=a.createChannelSplitter(2);this.node_gain_left=a.createGain();this.node_gain_right=a.createGain();b.connect(this.node_splitter);this.node_splitter.connect(this.node_gain_left,0);this.node_gain_left.connect(c);this.node_splitter.connect(this.node_gain_right,1);this.node_gain_right.connect(d)}\nSpeakerMixerSource.prototype.update=function(){var a=this.connected_right*this.gain_hidden*this.volume_both*this.volume_right;this.node_gain_left.gain.setValueAtTime(this.connected_left*this.gain_hidden*this.volume_both*this.volume_left,this.audio_context.currentTime);this.node_gain_right.gain.setValueAtTime(a,this.audio_context.currentTime)};\nSpeakerMixerSource.prototype.connect=function(a){var b=!a||a===MIXER_CHANNEL_BOTH;if(b||a===MIXER_CHANNEL_LEFT)this.connected_left=!0;if(b||a===MIXER_CHANNEL_RIGHT)this.connected_right=!0;this.update()};SpeakerMixerSource.prototype.disconnect=function(a){var b=!a||a===MIXER_CHANNEL_BOTH;if(b||a===MIXER_CHANNEL_LEFT)this.connected_left=!1;if(b||a===MIXER_CHANNEL_RIGHT)this.connected_right=!1;this.update()};\nSpeakerMixerSource.prototype.set_volume=function(a,b){void 0===b&&(b=MIXER_CHANNEL_BOTH);switch(b){case MIXER_CHANNEL_LEFT:this.volume_left=a;break;case MIXER_CHANNEL_RIGHT:this.volume_right=a;break;case MIXER_CHANNEL_BOTH:this.volume_both=a;break;default:dbg_assert(!1,\"Mixer set volume - unknown channel: \"+b);return}this.update()};SpeakerMixerSource.prototype.set_gain_hidden=function(a){this.gain_hidden=a};\nfunction PCSpeaker(a,b,c){this.node_oscillator=b.createOscillator();this.node_oscillator.type=\"square\";this.node_oscillator.frequency.setValueAtTime(440,b.currentTime);this.mixer_connection=c.add_source(this.node_oscillator,MIXER_SRC_PCSPEAKER);this.mixer_connection.disconnect();a.register(\"pcspeaker-enable\",function(){c.connect_source(MIXER_SRC_PCSPEAKER)},this);a.register(\"pcspeaker-disable\",function(){c.disconnect_source(MIXER_SRC_PCSPEAKER)},this);a.register(\"pcspeaker-update\",function(a){var c=\na[1],d=0;3===a[0]&&(d=1E3*OSCILLATOR_FREQ/c,d=Math.min(d,this.node_oscillator.frequency.maxValue),d=Math.max(d,0));this.node_oscillator.frequency.setValueAtTime(d,b.currentTime)},this)}PCSpeaker.prototype.start=function(){this.node_oscillator.start()};\nfunction SpeakerWorkletDAC(a,b,c){var d=this;this.bus=a;this.audio_context=b;this.enabled=!1;this.sampling_rate=48E3;b=function(){function a(a){if(0===a)return 1;a*=Math.PI;return Math.sin(a)/a}function b(){var a=Reflect.construct(AudioWorkletProcessor,[],b);a.kernel_size=3;a.queue_data=Array(1024);a.queue_start=0;a.queue_end=0;a.queue_length=0;a.queue_size=a.queue_data.length;a.queued_samples=0;a.source_buffer_previous=c;a.source_buffer_current=c;a.source_samples_per_destination=1;a.source_block_start=\n0;a.source_time=0;a.source_offset=0;a.port.onmessage=function(b){switch(b.data.type){case \"queue\":a.queue_push(b.data.value);break;case \"sampling-rate\":a.source_samples_per_destination=b.data.value/sampleRate}};return a}var c=[new Float32Array(256),new Float32Array(256)];Reflect.setPrototypeOf(b.prototype,AudioWorkletProcessor.prototype);Reflect.setPrototypeOf(b,AudioWorkletProcessor);b.prototype.process=b.prototype.process=function(a,b,c){for(a=0;a<b[0][0].length;a++){for(var d=c=0,e=this.source_offset+\nthis.kernel_size,f=this.source_offset-this.kernel_size+1;f<=e;f++){var g=this.source_block_start+f;c+=this.get_sample(g,0)*this.kernel(this.source_time-f);d+=this.get_sample(g,1)*this.kernel(this.source_time-f)}if(isNaN(c)||isNaN(d))c=d=0,this.dbg_log(\"ERROR: NaN values! Ignoring for now.\");b[0][0][a]=c;b[0][1][a]=d;this.source_time+=this.source_samples_per_destination;this.source_offset=Math.floor(this.source_time)}b=this.source_offset;b+=this.kernel_size+2;this.source_time-=this.source_offset;this.source_block_start+=\nthis.source_offset;this.source_offset=0;this.ensure_enough_data(b);return!0};b.prototype.kernel=function(b){return a(b)*a(b/this.kernel_size)};b.prototype.get_sample=function(a,b){return 0>a?(a+=this.source_buffer_previous[0].length,this.source_buffer_previous[b][a]):this.source_buffer_current[b][a]};b.prototype.ensure_enough_data=function(a){var b=this.source_buffer_current[0].length;b-this.source_block_start<a&&(this.prepare_next_buffer(),this.source_block_start-=b)};b.prototype.prepare_next_buffer=\nfunction(){256>this.queued_samples&&this.queue_length&&this.dbg_log(\"Not enough samples - should not happen during midway of playback\");this.source_buffer_previous=this.source_buffer_current;this.source_buffer_current=this.queue_shift();var a=this.source_buffer_current[0].length;if(256>a){for(var b=this.queue_start,c=0;256>a&&c<this.queue_length;)a+=this.queue_data[b][0].length,b=b+1&this.queue_size-1,c++;a=Math.max(a,256);a=[new Float32Array(a),new Float32Array(a)];a[0].set(this.source_buffer_current[0]);\na[1].set(this.source_buffer_current[1]);b=this.source_buffer_current[0].length;for(var d=0;d<c;d++){var e=this.queue_shift();a[0].set(e[0],b);a[1].set(e[1],b);b+=e[0].length}this.source_buffer_current=a}this.pump()};b.prototype.pump=function(){1024>this.queued_samples/this.source_samples_per_destination&&this.port.postMessage({type:\"pump\"})};b.prototype.queue_push=function(a){this.queue_length<this.queue_size&&(this.queue_data[this.queue_end]=a,this.queue_end=this.queue_end+1&this.queue_size-1,this.queue_length++,\nthis.queued_samples+=a[0].length,this.pump())};b.prototype.queue_shift=function(){if(!this.queue_length)return c;var a=this.queue_data[this.queue_start];this.queue_data[this.queue_start]=null;this.queue_start=this.queue_start+1&this.queue_size-1;this.queue_length--;this.queued_samples-=a[0].length;return a};b.prototype.dbg_log=function(a){DEBUG&&this.port.postMessage({type:\"debug-log\",value:a})};registerProcessor(\"dac-processor\",b)}.toString();var e=b.indexOf(\"{\")+1,f=b.lastIndexOf(\"}\");b=b.substring(e,\nf);DEBUG&&(b=\"var DEBUG = true;\\n\"+b);b=new Blob([b],{type:\"application/javascript\"});var g=URL.createObjectURL(b);this.node_processor=null;this.node_output=this.audio_context.createGain();this.audio_context.audioWorklet.addModule(g).then(function(){URL.revokeObjectURL(g);d.node_processor=new AudioWorkletNode(d.audio_context,\"dac-processor\",{numberOfInputs:0,numberOfOutputs:1,outputChannelCount:[2]});d.node_processor.port.postMessage({type:\"sampling-rate\",value:d.sampling_rate});d.node_processor.port.onmessage=\nfunction(a){switch(a.data.type){case \"pump\":d.pump();break;case \"debug-log\":dbg_log(\"SpeakerWorkletDAC - Worklet: \"+a.data.value)}};d.node_processor.connect(d.node_output)});this.mixer_connection=c.add_source(this.node_output,MIXER_SRC_DAC);this.mixer_connection.set_gain_hidden(3);a.register(\"dac-send-data\",function(a){this.queue(a)},this);a.register(\"dac-enable\",function(a){this.enabled=!0},this);a.register(\"dac-disable\",function(){this.enabled=!1},this);a.register(\"dac-tell-sampling-rate\",function(a){dbg_assert(0<\na,\"Sampling rate should be nonzero\");this.sampling_rate=a;this.node_processor&&this.node_processor.port.postMessage({type:\"sampling-rate\",value:a})},this);DEBUG&&(this.debugger=new SpeakerDACDebugger(this.audio_context,this.node_output))}SpeakerWorkletDAC.prototype.queue=function(a){this.node_processor&&(DEBUG&&this.debugger.push_queued_data(a),this.node_processor.port.postMessage({type:\"queue\",value:a},[a[0].buffer,a[1].buffer]))};SpeakerWorkletDAC.prototype.pump=function(){this.enabled&&this.bus.send(\"dac-request-data\")};\nfunction SpeakerBufferSourceDAC(a,b,c){this.bus=a;this.audio_context=b;this.enabled=!1;this.sampling_rate=22050;this.buffered_time=0;this.rate_ratio=1;this.node_lowpass=this.audio_context.createBiquadFilter();this.node_lowpass.type=\"lowpass\";this.node_output=this.node_lowpass;this.mixer_connection=c.add_source(this.node_output,MIXER_SRC_DAC);this.mixer_connection.set_gain_hidden(3);a.register(\"dac-send-data\",function(a){this.queue(a)},this);a.register(\"dac-enable\",function(a){this.enabled=!0;this.pump()},\nthis);a.register(\"dac-disable\",function(){this.enabled=!1},this);a.register(\"dac-tell-sampling-rate\",function(a){dbg_assert(0<a,\"Sampling rate should be nonzero\");this.sampling_rate=a;this.rate_ratio=Math.ceil(AUDIOBUFFER_MINIMUM_SAMPLING_RATE/a);this.node_lowpass.frequency.setValueAtTime(a/2,this.audio_context.currentTime)},this);DEBUG&&(this.debugger=new SpeakerDACDebugger(this.audio_context,this.node_output))}\nSpeakerBufferSourceDAC.prototype.queue=function(a){var b=this;DEBUG&&this.debugger.push_queued_data(a);var c=a[0].length,d=c/this.sampling_rate;if(1<this.rate_ratio){var e=this.audio_context.createBuffer(2,c*this.rate_ratio,this.sampling_rate*this.rate_ratio);for(var f=e.getChannelData(0),g=e.getChannelData(1),k=0,l=0;l<c;l++)for(var m=0;m<this.rate_ratio;m++,k++)f[k]=a[0][l],g[k]=a[1][l]}else e=this.audio_context.createBuffer(2,c,this.sampling_rate),e.copyToChannel(a[0],0),e.copyToChannel(a[1],1);\na=this.audio_context.createBufferSource();a.buffer=e;a.connect(this.node_lowpass);a.addEventListener(\"ended\",this.pump.bind(this));e=this.audio_context.currentTime;if(this.buffered_time<e)for(dbg_log(\"Speaker DAC - Creating/Recreating reserve - shouldn't occur frequently during playback\"),this.buffered_time=e,e=DAC_QUEUE_RESERVE-d,c=0;c<=e;)c+=d,this.buffered_time+=d,setTimeout(function(){return b.pump()},1E3*c);a.start(this.buffered_time);this.buffered_time+=d;setTimeout(function(){return b.pump()},\n0)};SpeakerBufferSourceDAC.prototype.pump=function(){this.enabled&&(this.buffered_time-this.audio_context.currentTime>DAC_QUEUE_RESERVE||this.bus.send(\"dac-request-data\"))};\nfunction SpeakerDACDebugger(a,b){this.audio_context=a;this.node_source=b;this.node_processor=null;this.node_gain=this.audio_context.createGain();this.node_gain.gain.setValueAtTime(0,this.audio_context.currentTime);this.node_gain.connect(this.audio_context.destination);this.is_active=!1;this.queued_history=[];this.output_history=[];this.queued=[[],[]];this.output=[[],[]]}\nSpeakerDACDebugger.prototype.start=function(a){var b=this;this.is_active=!0;this.queued=[[],[]];this.output=[[],[]];this.queued_history.push(this.queued);this.output_history.push(this.output);this.node_processor=this.audio_context.createScriptProcessor(1024,2,2);this.node_processor.onaudioprocess=function(a){b.output[0].push(a.inputBuffer.getChannelData(0).slice());b.output[1].push(a.inputBuffer.getChannelData(1).slice())};this.node_source.connect(this.node_processor);this.node_processor.connect(this.node_gain);\nsetTimeout(function(){b.stop()},a)};SpeakerDACDebugger.prototype.stop=function(){this.is_active=!1;this.node_source.disconnect(this.node_processor);this.node_processor.disconnect();this.node_processor=null};SpeakerDACDebugger.prototype.push_queued_data=function(a){this.is_active&&(this.queued[0].push(a[0].slice()),this.queued[1].push(a[1].slice()))};SpeakerDACDebugger.prototype.download_txt=function(a,b){a=this.output_history[a][b].map(function(a){return a.join(\" \")}).join(\" \");dump_file(a,\"dacdata.txt\")};\nSpeakerDACDebugger.prototype.download_csv=function(a){a=this.output_history[a];for(var b=[],c=0;c<a[0].length;c++)for(var d=0;d<a[0][c].length;d++)b.push(a[0][c][d]+\",\"+a[1][c][d]);dump_file(b.join(\"\\n\"),\"dacdata.csv\")};function SerialAdapter(a,b){function c(a){g.bus&&g.enabled&&(g.send_char(a.which),a.preventDefault())}function d(a){var b=a.which;8===b?(g.send_char(127),a.preventDefault()):9===b&&(g.send_char(9),a.preventDefault())}function e(a){if(g.enabled){for(var b=a.clipboardData.getData(\"text/plain\"),c=0;c<b.length;c++)g.send_char(b.charCodeAt(c));a.preventDefault()}}function f(b){b.target!==a&&a.blur()}var g=this;this.enabled=!0;this.bus=b;this.text=\"\";this.text_new_line=!1;this.last_update=0;this.bus.register(\"serial0-output-char\",\nfunction(a){this.show_char(a)},this);this.destroy=function(){a.removeEventListener(\"keypress\",c,!1);a.removeEventListener(\"keydown\",d,!1);a.removeEventListener(\"paste\",e,!1);window.removeEventListener(\"mousedown\",f,!1)};this.init=function(){this.destroy();a.addEventListener(\"keypress\",c,!1);a.addEventListener(\"keydown\",d,!1);a.addEventListener(\"paste\",e,!1);window.addEventListener(\"mousedown\",f,!1)};this.init();this.show_char=function(a){\"\\b\"===a?(this.text=this.text.slice(0,-1),this.update()):\"\\r\"!==\na&&(this.text+=a,\"\\n\"===a&&(this.text_new_line=!0),this.update())};this.update=function(){var a=this,b=Date.now(),c=b-this.last_update;16>c?void 0===this.update_timer&&(this.update_timer=setTimeout(function(){a.update_timer=void 0;var b=Date.now();dbg_assert(16<=b-a.last_update);a.last_update=b;a.render()},16-c)):(void 0!==this.update_timer&&(clearTimeout(this.update_timer),this.update_timer=void 0),this.last_update=b,this.render())};this.render=function(){a.value=this.text;this.text_new_line&&(this.text_new_line=\n!1,a.scrollTop=1E9)};this.send_char=function(a){g.bus&&g.bus.send(\"serial0-input\",a)}};function NetworkAdapter(a,b){this.send_data=function(a){};this.bus=b;this.socket=void 0;this.send_queue=[];this.url=a;this.reconnect_interval=1E4;this.last_connect_attempt=Date.now()-this.reconnect_interval;this.send_queue_limit=64;this.bus.register(\"net0-send\",function(a){this.send(a)},this)}NetworkAdapter.prototype.handle_message=function(a){this.bus&&this.bus.send(\"net0-receive\",new Uint8Array(a.data))};\nNetworkAdapter.prototype.handle_close=function(a){this.connect();setTimeout(this.connect.bind(this),this.reconnect_interval)};NetworkAdapter.prototype.handle_open=function(a){for(a=0;a<this.send_queue.length;a++)this.send(this.send_queue[a]);this.send_queue=[]};NetworkAdapter.prototype.handle_error=function(a){};NetworkAdapter.prototype.destroy=function(){this.socket&&this.socket.close()};\nNetworkAdapter.prototype.connect=function(){if(this.socket){var a=this.socket.readyState;if(0===a||1===a)return}a=Date.now();if(!(this.last_connect_attempt+this.reconnect_interval>a)){this.last_connect_attempt=Date.now();try{this.socket=new WebSocket(this.url)}catch(b){this.handle_close(void 0);return}this.socket.binaryType=\"arraybuffer\";this.socket.onopen=this.handle_open.bind(this);this.socket.onmessage=this.handle_message.bind(this);this.socket.onclose=this.handle_close.bind(this);this.socket.onerror=\nthis.handle_error.bind(this)}};NetworkAdapter.prototype.send=function(a){this.socket&&1===this.socket.readyState?this.socket.send(a):(this.send_queue.push(a),this.send_queue.length>2*this.send_queue_limit&&(this.send_queue=this.send_queue.slice(-this.send_queue_limit)),this.connect())};var ASYNC_SAFE=!1;\n(function(){function a(a,b){var c=new XMLHttpRequest;c.open(b.method||\"get\",a,!0);b.as_text||(c.responseType=\"arraybuffer\");if(b.headers)for(var d=Object.keys(b.headers),e=0;e<d.length;e++){var f=d[e];c.setRequestHeader(f,b.headers[f])}b.range&&(d=b.range.start,c.setRequestHeader(\"Range\",\"bytes=\"+d+\"-\"+(d+b.range.length-1)));c.onload=function(d){4===c.readyState&&(200!==c.status&&206!==c.status?console.error(\"Loading the image `\"+a+\"` failed (status %d)\",c.status):c.response&&b.done&&b.done(c.response,\nc))};b.progress&&(c.onprogress=function(a){b.progress(a)});c.send(null)}function b(a,b){var c=require(\"fs\");b.range?(dbg_assert(!b.as_text),c.open(a,\"r\",function(a,d){if(a)throw a;var e=b.range.length,f=new global.Buffer(e);c.read(d,f,0,e,b.range.start,function(a,g){if(a)throw a;dbg_assert(g===e);b.done&&b.done(new Uint8Array(f));c.close(d,function(a){if(a)throw a;})})})):c.readFile(a,{encoding:b.as_text?\"utf-8\":null},function(c,d){c?console.log(\"Could not read file:\",a,c):(c=d,b.as_text||(c=(new Uint8Array(c)).buffer),\nb.done(c))})}function c(a,b){this.filename=a;this.block_size=256;this.byteLength=b;this.loaded_blocks={};this.onprogress=this.onload=void 0}function d(a){this.file=a;this.byteLength=a.size;1073741824<a.size&&console.warn(\"SyncFileBuffer: Allocating buffer of \"+(a.size>>20)+\" MB ...\");this.buffer=new ArrayBuffer(a.size);this.onprogress=this.onload=void 0}function e(a){this.file=a;this.byteLength=a.size;this.block_size=256;this.loaded_blocks={};this.onprogress=this.onload=void 0}v86util.load_file=\"undefined\"===\ntypeof XMLHttpRequest?b:a;v86util.AsyncXHRBuffer=c;v86util.AsyncFileBuffer=e;v86util.SyncFileBuffer=d;var f=\"undefined\"===typeof XMLHttpRequest?function(a,b){require(\"fs\").stat(a,function(a,c){a?b(a):b(null,c.size)})}:function(a,b){v86util.load_file(a,{done:function(a,c){a=c.getResponseHeader(\"Content-Range\")||\"\";(c=a.match(/\\/(\\d+)\\s*$/))?b(null,+c[1]):b({header:a})},headers:{Range:\"bytes=0-0\"}})};c.prototype.load=function(){var a=this;void 0!==this.byteLength?this.onload&&this.onload({}):f(this.filename,\nfunction(b,c){b?console.assert(!1,\"Cannot use: \"+a.filename+\". `Range: bytes=...` header not supported (Got `\"+b.header+\"`)\"):(dbg_assert(0<=c),a.byteLength=c,a.onload&&a.onload({}))})};c.prototype.get_from_cache=function(a,b,c){c=b/this.block_size;a/=this.block_size;for(var d=0;d<c;d++)if(!this.loaded_blocks[a+d])return;if(1===c)return this.loaded_blocks[a];b=new Uint8Array(b);for(d=0;d<c;d++)b.set(this.loaded_blocks[a+d],d*this.block_size);return b};c.prototype.get=function(a,b,c){console.assert(a+\nb<=this.byteLength);console.assert(0===a%this.block_size);console.assert(0===b%this.block_size);console.assert(b);var d=this.get_from_cache(a,b,c);d?ASYNC_SAFE?setTimeout(c.bind(this,d),0):c(d):v86util.load_file(this.filename,{done:function(d){d=new Uint8Array(d);this.handle_read(a,b,d);c(d)}.bind(this),range:{start:a,length:b}})};c.prototype.set=function(a,b,c){console.assert(a+b.byteLength<=this.byteLength);var d=b.length;console.assert(0===a%this.block_size);console.assert(0===d%this.block_size);\nconsole.assert(d);a/=this.block_size;d/=this.block_size;for(var e=0;e<d;e++){var f=this.loaded_blocks[a+e];void 0===f&&(f=this.loaded_blocks[a+e]=new Uint8Array(this.block_size));var g=b.subarray(e*this.block_size,(e+1)*this.block_size);f.set(g);console.assert(f.byteLength===g.length)}c()};c.prototype.handle_read=function(a,b,c){a/=this.block_size;b/=this.block_size;for(var d=0;d<b;d++){var e=this.loaded_blocks[a+d];e&&c.set(e,d*this.block_size)}};c.prototype.get_buffer=function(a){a()};c.prototype.get_written_blocks=\nfunction(){var a=0;for(b in this.loaded_blocks)a++;a=new Uint8Array(a*this.block_size);var b=[];var c=0;for(e in this.loaded_blocks){var d=this.loaded_blocks[e];dbg_assert(d.length===this.block_size);var e=+e;b.push(e);a.set(d,c*this.block_size);c++}return{buffer:a,indices:b,block_size:this.block_size}};d.prototype.load=function(){this.load_next(0)};d.prototype.load_next=function(a){var b=new FileReader;b.onload=function(b){b=new Uint8Array(b.target.result);(new Uint8Array(this.buffer,a)).set(b);\nthis.load_next(a+4194304)}.bind(this);if(this.onprogress)this.onprogress({loaded:a,total:this.byteLength,lengthComputable:!0});if(a<this.byteLength){var c=this.file.slice(a,Math.min(a+4194304,this.byteLength));b.readAsArrayBuffer(c)}else this.file=void 0,this.onload&&this.onload({buffer:this.buffer})};d.prototype.get=function(a,b,c){console.assert(a+b<=this.byteLength);c(new Uint8Array(this.buffer,a,b))};d.prototype.set=function(a,b,c){console.assert(a+b.byteLength<=this.byteLength);(new Uint8Array(this.buffer,\na,b.byteLength)).set(b);c()};d.prototype.get_buffer=function(a){a(this.buffer)};e.prototype.load=function(){this.onload&&this.onload({})};e.prototype.get=function(a,b,c){console.assert(0===a%this.block_size);console.assert(0===b%this.block_size);console.assert(b);var d=this.get_from_cache(a,b,c);d?c(d):(d=new FileReader,d.onload=function(d){d=new Uint8Array(d.target.result);this.handle_read(a,b,d);c(d)}.bind(this),d.readAsArrayBuffer(this.file.slice(a,a+b)))};e.prototype.get_from_cache=c.prototype.get_from_cache;\ne.prototype.set=c.prototype.set;e.prototype.handle_read=c.prototype.handle_read;e.prototype.get_buffer=function(a){a()};e.prototype.get_as_file=function(a){for(var b=[],c=Object.keys(this.loaded_blocks).map(Number).sort(function(a,b){return a-b}),d=0,e=0;e<c.length;e++){var f=c[e],g=this.loaded_blocks[f];f*=this.block_size;console.assert(f>=d);f!==d&&(b.push(this.file.slice(d,f)),d=f);b.push(g);d+=g.length}d!==this.file.size&&b.push(this.file.slice(d));a=new File(b,a);console.assert(a.size===this.file.size);\nreturn a}})();function V86Starter(a){function b(a,b){switch(a){case \"hda\":k.hda=this.disk_images.hda=b;break;case \"hdb\":k.hdb=this.disk_images.hdb=b;break;case \"cdrom\":k.cdrom=this.disk_images.cdrom=b;break;case \"fda\":k.fda=this.disk_images.fda=b;break;case \"fdb\":k.fdb=this.disk_images.fdb=b;break;case \"multiboot\":k.multiboot=this.disk_images.multiboot=b;break;case \"bios\":k.bios=b.buffer;break;case \"vga_bios\":k.vga_bios=b.buffer;break;case \"initial_state\":k.initial_state=b.buffer;break;case \"fs9p_json\":k.fs9p_json=\nb.buffer;break;default:dbg_assert(!1,a)}}function c(a,b){if(b)if(b.get&&b.set&&b.load)l.push({name:a,loadable:b});else{b={buffer:b.buffer,async:b.async,url:b.url,size:b.size};if(\"bios\"===a||\"vga_bios\"===a||\"initial_state\"===a||\"multiboot\"===a)b.async=!1;b.buffer instanceof ArrayBuffer?(b=new SyncBuffer(b.buffer),l.push({name:a,loadable:b})):\"undefined\"!==typeof File&&b.buffer instanceof File?(void 0===b.async&&(b.async=268435456<=b.buffer.size),b=b.async?new v86util.AsyncFileBuffer(b.buffer):new v86util.SyncFileBuffer(b.buffer),\nl.push({name:a,loadable:b})):b.url?b.async?(b=new v86util.AsyncXHRBuffer(b.url,b.size),l.push({name:a,loadable:b})):l.push({name:a,url:b.url,size:b.size}):dbg_log(\"Ignored file: url=\"+b.url+\" buffer=\"+b.buffer)}}function d(){k.initial_state&&(k.memory_size=0);this.bus.send(\"cpu-init\",k);setTimeout(function(){k.initial_state&&g.restore_state(k.initial_state);setTimeout(function(){k.fs9p&&k.fs9p_json&&k.fs9p.OnJSONLoaded(k.fs9p_json);a.autostart&&this.bus.send(\"cpu-run\")}.bind(this),0)}.bind(this),\n0)}this.cpu_is_running=!1;var e=Bus.create(),f=this.bus=e[0];this.emulator_bus=e[1];var g=this.v86=new v86(this.emulator_bus);this.bus.register(\"emulator-stopped\",function(){this.cpu_is_running=!1},this);this.bus.register(\"emulator-started\",function(){this.cpu_is_running=!0},this);var k={};this.disk_images={fda:void 0,fdb:void 0,hda:void 0,hdb:void 0,cdrom:void 0};k.load_devices=!0;k.memory_size=a.memory_size||67108864;k.vga_memory_size=a.vga_memory_size||8388608;k.boot_order=a.boot_order||531;k.fastboot=\na.fastboot||!1;k.fda=void 0;k.fdb=void 0;a.network_relay_url&&(this.network_adapter=new NetworkAdapter(a.network_relay_url,f),k.enable_ne2k=!0);a.disable_keyboard||(this.keyboard_adapter=new KeyboardAdapter(f));a.disable_mouse||(this.mouse_adapter=new MouseAdapter(f,a.screen_container));a.screen_container?this.screen_adapter=new ScreenAdapter(a.screen_container,f):a.screen_dummy&&(this.screen_adapter=new DummyScreenAdapter(f));a.serial_container&&(this.serial_adapter=new SerialAdapter(a.serial_container,\nf));a.disable_speaker||(this.speaker_adapter=new SpeakerAdapter(f));var l=[];e=\"bios vga_bios cdrom hda hdb fda fdb initial_state multiboot\".split(\" \");for(f=0;f<e.length;f++)c(e[f],a[e[f]]);a.filesystem&&(k.fs9p=a.filesystem);var m=this,p=l.length,n=function(a){if(a===p)setTimeout(d.bind(this),0);else{var c=l[a];c.loadable?(c.loadable.onload=function(d){b.call(this,c.name,c.loadable);n(a+1)}.bind(this),c.loadable.load()):v86util.load_file(c.url,{done:function(d){b.call(this,c.name,new SyncBuffer(d));\nn(a+1)}.bind(this),progress:function(b){200===b.target.status?m.emulator_bus.send(\"download-progress\",{file_index:a,file_count:p,file_name:c.url,lengthComputable:b.lengthComputable,total:b.total||c.size,loaded:b.loaded}):m.emulator_bus.send(\"download-error\",{file_index:a,file_count:p,file_name:c.url,request:b.target})},as_text:c.as_text})}}.bind(this);n(0)}V86Starter.prototype.run=function(){this.bus.send(\"cpu-run\")};goog.exportProperty(V86Starter.prototype,\"run\",V86Starter.prototype.run);\nV86Starter.prototype.stop=function(){this.bus.send(\"cpu-stop\")};goog.exportProperty(V86Starter.prototype,\"stop\",V86Starter.prototype.stop);V86Starter.prototype.destroy=function(){this.keyboard_adapter.destroy()};goog.exportProperty(V86Starter.prototype,\"destroy\",V86Starter.prototype.destroy);V86Starter.prototype.restart=function(){this.bus.send(\"cpu-restart\")};goog.exportProperty(V86Starter.prototype,\"restart\",V86Starter.prototype.restart);\nV86Starter.prototype.add_listener=function(a,b){this.bus.register(a,b,this)};goog.exportProperty(V86Starter.prototype,\"add_listener\",V86Starter.prototype.add_listener);V86Starter.prototype.remove_listener=function(a,b){this.bus.unregister(a,b)};goog.exportProperty(V86Starter.prototype,\"remove_listener\",V86Starter.prototype.remove_listener);V86Starter.prototype.restore_state=function(a){this.v86.restore_state(a)};goog.exportProperty(V86Starter.prototype,\"restore_state\",V86Starter.prototype.restore_state);\nV86Starter.prototype.save_state=function(a){setTimeout(function(){try{a(null,this.v86.save_state())}catch(b){a(b,null)}}.bind(this),0)};goog.exportProperty(V86Starter.prototype,\"save_state\",V86Starter.prototype.save_state);V86Starter.prototype.is_running=function(){return this.cpu_is_running};goog.exportProperty(V86Starter.prototype,\"is_running\",V86Starter.prototype.is_running);V86Starter.prototype.serial0_send=function(a){for(var b=0;b<a.length;b++)this.bus.send(\"serial0-input\",a.charCodeAt(b))};\ngoog.exportProperty(V86Starter.prototype,\"serial0_send\",V86Starter.prototype.serial0_send);\"undefined\"!==typeof module&&\"undefined\"!==typeof module.exports?(module.exports.V86Starter=V86Starter,module.exports.V86=V86Starter):(self.V86Starter=V86Starter,self.V86=V86Starter);var WorkerBus={Connector:function(a){this.listeners={};this.pair=a;a.addEventListener(\"message\",function(a){a=a.data;for(var b=this.listeners[a[0]],d=0;d<b.length;d++){var e=b[d];e.fn.call(e.this_value,a[1])}}.bind(this),!1)}};WorkerBus.Connector.prototype.register=function(a,b,c){var d=this.listeners[a];void 0===d&&(d=this.listeners[a]=[]);d.push({fn:b,this_value:c})};WorkerBus.Connector.prototype.send=function(a,b,c){dbg_assert(1<=arguments.length);this.pair&&this.pair.postMessage([a,b],c)};\nWorkerBus.init=function(a){return new WorkerBus.Connector(a)};function DummyScreenAdapter(a){var b,c,d,e,f,g,k;this.bus=a;a.register(\"screen-set-mode\",function(a){this.set_mode(a)},this);a.register(\"screen-fill-buffer-end\",function(a){this.update_buffer(a[0],a[1])},this);a.register(\"screen-put-char\",function(a){this.put_char(a[0],a[1],a[2],a[3],a[4])},this);a.register(\"screen-text-scroll\",function(a){console.log(\"scroll\",a)},this);a.register(\"screen-update-cursor\",function(a){this.update_cursor(a[0],a[1])},this);a.register(\"screen-update-cursor-scanline\",function(a){this.update_cursor_scanline(a[0],\na[1])},this);a.register(\"screen-set-size-text\",function(a){this.set_size_text(a[0],a[1])},this);a.register(\"screen-set-size-graphical\",function(a){this.set_size_graphical(a[0],a[1])},this);this.put_char=function(a,b,c,d,e){a<k&&b<g&&(a=3*(a*g+b),f[a]=c,f[a+1]=d,f[a+2]=e)};this.destroy=function(){};this.set_mode=function(a){};this.clear_screen=function(){};this.set_size_text=function(a,b){if(a!==g||b!==k)f=new Int32Array(a*b*3),g=a,k=b};this.set_size_graphical=function(a,d){b=new Uint8Array(4*a*d);\nc=new Int32Array(b.buffer);this.bus.send(\"screen-tell-buffer\",[c],[c.buffer])};this.set_scale=function(a,b){};this.update_cursor_scanline=function(a,b){};this.update_cursor=function(a,b){if(a!==d||b!==e)d=a,e=b};this.update_buffer=function(a,b){};this.get_text_screen=function(){for(var a=[],b=0;b<k;b++)a.push(this.get_text_row(b));return a};this.get_text_row=function(a){var b=\"\";a=3*a*g;for(var c=0;c<g;c++)b+=String.fromCharCode(f[a+3*c]);return b}};var VIRTIO_MAGIC_REG=0,VIRTIO_VERSION_REG=4,VIRTIO_DEVICE_REG=8,VIRTIO_VENDOR_REG=12,VIRTIO_HOSTFEATURES_REG=16,VIRTIO_HOSTFEATURESSEL_REG=20,VIRTIO_GUESTFEATURES_REG=32,VIRTIO_GUESTFEATURESSEL_REG=36,VIRTIO_GUEST_PAGE_SIZE_REG=40,VIRTIO_QUEUESEL_REG=48,VIRTIO_QUEUENUMMAX_REG=52,VIRTIO_QUEUENUM_REG=56,VIRTIO_QUEUEALIGN_REG=60,VIRTIO_QUEUEPFN_REG=64,VIRTIO_QUEUENOTIFY_REG=80,VIRTIO_INTERRUPTSTATUS_REG=96,VIRTIO_INTERRUPTACK_REG=100,VIRTIO_STATUS_REG=112,VRING_DESC_F_NEXT=1,VRING_DESC_F_WRITE=2,VRING_DESC_F_INDIRECT=\n4;function hex8(a){return h(a)}var message={Debug:function(a){dbg_log([].slice.apply(arguments).join(\" \"),LOG_9P)},Abort:function(){if(DEBUG)throw\"abort\";}},LoadBinaryResource;\nLoadBinaryResource=\"undefined\"!==typeof XMLHttpRequest?function(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onreadystatechange=function(){if(4==d.readyState)if(200!=d.status&&0!=d.status)c(\"Error: Could not load file \"+a);else{var e=d.response;e?b(e):c(\"Error: No data received from: \"+a)}};d.send(null)}:function(a,b,c){require(\"fs\").readFile(a,function(a,e){a?c(a):b((new Uint8Array(e)).buffer)})};var marshall={Marshall:function(a,b,c,d){for(var e,f=0,g=0;g<a.length;g++)switch(e=b[g],a[g]){case \"w\":c[d++]=e&255;c[d++]=e>>8&255;c[d++]=e>>16&255;c[d++]=e>>24&255;f+=4;break;case \"d\":c[d++]=e&255;c[d++]=e>>8&255;c[d++]=e>>16&255;c[d++]=e>>24&255;c[d++]=0;c[d++]=0;c[d++]=0;c[d++]=0;f+=8;break;case \"h\":c[d++]=e&255;c[d++]=e>>8;f+=2;break;case \"b\":c[d++]=e;f+=1;break;case \"s\":var k=d,l=0;c[d++]=0;c[d++]=0;f+=2;for(var m in e)UnicodeToUTF8Stream(e.charCodeAt(m)).forEach(function(a){c[d++]=a;f+=1;l++});\nc[k+0]=l&255;c[k+1]=l>>8&255;break;case \"Q\":marshall.Marshall([\"b\",\"w\",\"d\"],[e.type,e.version,e.path],c,d);d+=13;f+=13;break;default:message.Debug(\"Marshall: Unknown type=\"+a[g])}return f},Unmarshall:function(a,b,c){for(var d=[],e=0;e<a.length;e++)switch(a[e]){case \"w\":var f=b[c++];f+=b[c++]<<8;f+=b[c++]<<16;f+=b[c++]<<24>>>0;d.push(f);break;case \"d\":f=b[c++];f+=b[c++]<<8;f+=b[c++]<<16;f+=b[c++]<<24>>>0;c+=4;d.push(f);break;case \"h\":f=b[c++];d.push(f+(b[c++]<<8));break;case \"b\":d.push(b[c++]);break;\ncase \"s\":f=b[c++];f+=b[c++]<<8;for(var g=\"\",k=new UTF8StreamToUnicode,l=0;l<f;l++){var m=k.Put(b[c++]);-1!=m&&(g+=String.fromCharCode(m))}d.push(g);break;default:message.Debug(\"Error in Unmarshall: Unknown type=\"+a[e])}return d},Unmarshall2:function(a,b){for(var c=[],d=0;d<a.length;d++)switch(a[d]){case \"w\":var e=b();e+=b()<<8;e+=b()<<16;e+=b()<<24>>>0;c.push(e);break;case \"d\":e=b();e+=b()<<8;e+=b()<<16;e+=b()<<24>>>0;b();b();b();b();c.push(e);break;case \"h\":e=b();c.push(e+(b()<<8));break;case \"b\":c.push(b());\nbreak;case \"s\":e=b();e+=b()<<8;for(var f=\"\",g=new UTF8StreamToUnicode,k=0;k<e;k++){var l=g.Put(b());-1!=l&&(f+=String.fromCharCode(l))}c.push(f);break;default:message.Debug(\"Error in Unmarshall2: Unknown type=\"+a[d])}return c}};var UTF8={};function UTF8StreamToUnicode(){this.stream=new Uint8Array(5);this.ofs=0;this.Put=function(a){this.stream[this.ofs]=a;this.ofs++;switch(this.ofs){case 1:if(128>this.stream[0])return this.ofs=0,this.stream[0];break;case 2:if(192==(this.stream[0]&224)&&128==(this.stream[1]&192))return this.ofs=0,(this.stream[0]&31)<<6|this.stream[1]&63}return-1}}function UnicodeToUTF8Stream(a){if(128>a)return[a];if(2048>a)return[192|a>>6&31,128|a&63]}\nUTF8.UTF8Length=function(a){for(var b=0,c=0;c<a.length;c++){var d=a.charCodeAt(c);b+=128>d?1:2}return b};}).call(this);\n","'use strict';\n\nconst { vmStateCache, stateUrl } = require('./config');\n\nconst getVMStateUrl = () => new URL(stateUrl, window.location);\n\n// See if we have a cached VM machine state to restart from a previous boot.\nconst getState = () =>\n  caches\n    .open(vmStateCache)\n    .then(cache => cache.match(getVMStateUrl()));\n\n// Boolean check for whether we have state in the cache\nconst hasState = () =>\n  getState().then(response => !!response);\n\n// Save the VM's booted state to improve startup next time.\nconst saveState = (err, state) => {\n  const blob = new Blob([new Uint8Array(state)], {\n    type: 'application/octet-stream',\n  });\n  const response = new Response(blob, {\n    status: 200,\n    statusText: 'OK, Linux VM machine state cached (safe to delete).',\n  });\n\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/octet-stream');\n  // TODO: not sure why content-length is always 0 in Chrome?\n  headers.append('Content-Length', blob.size);\n\n  const url = getVMStateUrl();\n  const request = new Request(url, {\n    method: 'GET',\n    headers,\n  });\n\n  caches\n    .open(vmStateCache)\n    .then(cache => cache.put(request, response))\n    .catch(err => console.error(err));\n};\n\nmodule.exports = {\n  getState,\n  hasState,\n  saveState\n};\n","'use strict';\n\nconst filesystem = require('./filesystem');\nconst { V86Starter } = require('v86');\nconst { defaultEmulatorOptions } = require('./config');\nconst cache = require('./cache');\n\n// What our shell prompt looks like, so we can wait on it.\nconst prompt = '/ # ';\n\nconst getVMStartOptions = () => {\n  const options = Object.create(defaultEmulatorOptions);\n\n  // Pass the filesystem into the vm\n  options.filesystem = filesystem;\n\n  return options;\n};\n\nlet emulator = null;\n\nmodule.exports.boot = async term => {\n  if (emulator) {\n    return;\n  }  \n\n  const hasCachedVM = await cache.hasState();\n  if (hasCachedVM) {\n    try {\n      await warmBoot(term);\n    } catch(err) {\n      console.log('Warm boot failed:', err.message);\n      await coldBoot(term);\n    }\n  } else {\n    await coldBoot(term);\n  }\n\n  // Reduce CPU/battery use when not in focus\n  // TODO: we might want to add UI to disable this later\n  term.on('focus', resume);\n  term.on('blur', suspend);\n};\n\n// Pause the running VM\nconst suspend = module.exports.suspend = () => {\n  updatePowerUI(false);\n\n  if (!(emulator && emulator.is_running())) {\n    return;\n  }\n\n  emulator.stop();\n};\n\n// Restart the paused VM\nconst resume = module.exports.resume = () => {\n  updatePowerUI(true);\n\n  if (!(emulator && !emulator.is_running())) {\n    return;\n  }\n\n  emulator.run();\n};\n\n// Toggle play/pause power buttons so only 1 is active\nconst updatePowerUI = (isPlaying) => {\n  return;\n  const termPlay = document.querySelector('#term-play');\n  const termPause = document.querySelector('#term-pause');\n\n  if(isPlaying) {\n    termPlay.classList.add('inactive');\n    termPause.classList.remove('inactive');\n  } else {\n    termPlay.classList.remove('inactive');\n    termPause.classList.add('inactive');\n  }\n};\n\n// Wire up event handlers, print shell prompt (which we've eaten), and focus term.\nconst startTerminal = (emulator, term) => {\n  term.reset();\n  term.writeln('Linux 4.15.7. Shared browser filesystem mounted in /mnt.');\n  term.writeln('fs, path, and Buffer are available on console for debugging.');\n  term.write(prompt);\n\n  // Wire input events from xterm.js -> ttyS0\n  term.on('key', key => emulator.serial0_send(key));\n  // Wire output events from ttyS0 -> xterm.js\n  emulator.add_listener('serial0-output-char', char => term.write(char));\n\n  updatePowerUI(true);\n};\n\n// Power up VM, saving state when boot completes.\nconst coldBoot = async term => {\n  const options = getVMStartOptions();\n  emulator = new V86Starter(options);\n\n  await storeInitialStateOnBoot(emulator, term);\n  return emulator;\n};\n\n// Restore VM from saved state\nconst warmBoot = async term => {\n  // Add saved state URL for vm\n  const options = getVMStartOptions();\n\n  return cache.getState()\n    .then(response => response.arrayBuffer())\n    .then(arrayBuffer =>\n      URL.createObjectURL(new Blob([arrayBuffer], { type: 'application/octet-stream' } )))\n    .then(url => {\n      options.initial_state = { url };\n      emulator = new V86Starter(options);\n      startTerminal(emulator, term);\n    });\n};\n\n// Wait until we get our shell prompt (other characters are noise on the serial port at startup)\n// At the same time, print all boot messages to the screen, and clear when booted.\nconst waitForPrompt = async (emulator, term) =>\n  new Promise(resolve => {\n    let serialBuffer = '';\n    let screenBuffer = [];\n    let currentRow;\n\n    function handleScreenCharData(data) {\n      const row = data[0];\n      const col = data[1];\n      const char = data[2];\n\n      // Flush the buffer and advance to next line\n      if(row !== currentRow) {\n        currentRow = row;\n        term.writeln(screenBuffer.join(''));\n        screenBuffer = [];\n      }\n\n      screenBuffer[col] = String.fromCharCode(char);\n    }\n  \n    function handleSerialCharData(char) {\n      serialBuffer += char;\n\n      // Wait for initial root shell prompt, which indicates a completed boot\n      if (serialBuffer.endsWith(prompt)) {\n        // Remove boot time screen and serial data handlers and clear the terminal\n        emulator.remove_listener('screen-put-char', handleScreenCharData);\n        emulator.remove_listener('serial0-output-char', handleSerialCharData);\n        term.clear();\n\n        // We're done, we have a prompt, system is ready. \n        resolve();\n      }\n    }\n\n    // Start listening for data over the serial and screen buses.\n    emulator.add_listener('screen-put-char', handleScreenCharData);\n    emulator.add_listener('serial0-output-char', handleSerialCharData);\n  });\n\nconst storeInitialStateOnBoot = async (emulator, term) => {\n  // Wait for the prompt to come up, then start term and save the VM state\n  await waitForPrompt(emulator, term);\n  startTerminal(emulator, term);\n  emulator.save_state(cache.saveState);\n  console.log('Saved VM cpu/memory state to Cache Storage');\n};\n","'use strict';\n\nconst { Terminal } = require('xterm');\nconst fit = require('xterm/lib/addons/fit/fit');\nTerminal.applyAddon(fit);\nwindow.Terminal = Terminal;\n\nconst { molokaiTheme } = require('./config');\nwindow.molokaiTheme = molokaiTheme;\nconst vm = require('./vm');\nwindow.vm = vm;\n\nfunction createTerm() {\n  const term = (window.term = new Terminal({ theme: molokaiTheme }));\n  term.open(document.getElementById('terminal'));\n  term.fit();\n  return term;\n}\n\nfunction start() {\n  window.addEventListener('DOMContentLoaded', () => {\n    const term = createTerm();\n    vm.boot(term);\n\n    // Whether or not the button is active or disabled (has .inactive class)\n    function isInactive(elem) {\n      return elem.classList.contains('inactive');\n    }\n\n    // Play\n    document.querySelector('#term-play').onclick = function(e) {\n      e.preventDefault();\n      if(isInactive(e.target)) return;\n\n      vm.resume();\n      term.focus();\n    };\n\n    // Pause\n    document.querySelector('#term-pause').onclick = function(e) {\n      e.preventDefault();\n      if(isInactive(e.target)) return;\n\n      vm.suspend();\n    };\n  });\n}\n\nmodule.exports.start = start;\n","'use strict';\n\nconst server = require('./server');\nconst terminal = require('./terminal');\n\n// server.start();\n// terminal.start();\n"]}